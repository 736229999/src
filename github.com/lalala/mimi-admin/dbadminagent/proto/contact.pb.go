// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contact.proto

package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Contact struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Qq       string `protobuf:"bytes,2,opt,name=qq" json:"qq"`
	Wechat   string `protobuf:"bytes,3,opt,name=wechat" json:"wechat"`
	Email    string `protobuf:"bytes,4,opt,name=email" json:"email"`
	Telphone string `protobuf:"bytes,5,opt,name=telphone" json:"telphone"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Contact) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Contact) GetQq() string {
	if m != nil {
		return m.Qq
	}
	return ""
}

func (m *Contact) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

func (m *Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Contact) GetTelphone() string {
	if m != nil {
		return m.Telphone
	}
	return ""
}

func init() {
	proto.RegisterType((*Contact)(nil), "dbproto.Contact")
}

func init() { proto.RegisterFile("contact.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0xcf, 0x2b,
	0x49, 0x4c, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0x49, 0x02, 0x33, 0x94,
	0x8a, 0xb9, 0xd8, 0x9d, 0x21, 0x32, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0xcc, 0x41, 0x4c, 0x99, 0x29, 0x20, 0x7e, 0x61, 0xa1, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67,
	0x10, 0x53, 0x61, 0xa1, 0x90, 0x18, 0x17, 0x5b, 0x79, 0x6a, 0x72, 0x46, 0x62, 0x89, 0x04, 0x33,
	0x58, 0x0c, 0xca, 0x13, 0x12, 0xe1, 0x62, 0x4d, 0xcd, 0x4d, 0xcc, 0xcc, 0x91, 0x60, 0x01, 0x0b,
	0x43, 0x38, 0x42, 0x52, 0x5c, 0x1c, 0x25, 0xa9, 0x39, 0x05, 0x19, 0xf9, 0x79, 0xa9, 0x12, 0xac,
	0x60, 0x09, 0x38, 0x3f, 0x89, 0x0d, 0x6c, 0xb7, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x51,
	0x9f, 0xd3, 0x95, 0x00, 0x00, 0x00,
}
