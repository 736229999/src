// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gift_template.proto

package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GiftTemplate struct {
	Id          int64                `protobuf:"varint,1,opt,name=id" json:"id"`
	Title       string               `protobuf:"bytes,2,opt,name=title" json:"title"`
	ContentDesc string               `protobuf:"bytes,3,opt,name=content_desc,json=contentDesc" json:"content_desc"`
	Content     *GiftTemplateContent `protobuf:"bytes,4,opt,name=content" json:"content"`
	AddTime     int32                `protobuf:"varint,5,opt,name=add_time,json=addTime" json:"add_time"`
	Creator     string               `protobuf:"bytes,6,opt,name=creator" json:"creator"`
	Status      bool                 `protobuf:"varint,7,opt,name=status" json:"status"`
	ContentJson string               `protobuf:"bytes,8,opt,name=content_json,json=contentJson" json:"content_json"`
}

func (m *GiftTemplate) Reset()                    { *m = GiftTemplate{} }
func (m *GiftTemplate) String() string            { return proto.CompactTextString(m) }
func (*GiftTemplate) ProtoMessage()               {}
func (*GiftTemplate) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

func (m *GiftTemplate) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GiftTemplate) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GiftTemplate) GetContentDesc() string {
	if m != nil {
		return m.ContentDesc
	}
	return ""
}

func (m *GiftTemplate) GetContent() *GiftTemplateContent {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *GiftTemplate) GetAddTime() int32 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *GiftTemplate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *GiftTemplate) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *GiftTemplate) GetContentJson() string {
	if m != nil {
		return m.ContentJson
	}
	return ""
}

type GiftTemplateList struct {
	Page  int32           `protobuf:"varint,1,opt,name=page" json:"page"`
	Size  int32           `protobuf:"varint,2,opt,name=size" json:"size"`
	Total int32           `protobuf:"varint,3,opt,name=total" json:"total"`
	Title string          `protobuf:"bytes,4,opt,name=title" json:"title"`
	List  []*GiftTemplate `protobuf:"bytes,5,rep,name=list" json:"list"`
}

func (m *GiftTemplateList) Reset()                    { *m = GiftTemplateList{} }
func (m *GiftTemplateList) String() string            { return proto.CompactTextString(m) }
func (*GiftTemplateList) ProtoMessage()               {}
func (*GiftTemplateList) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{1} }

func (m *GiftTemplateList) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GiftTemplateList) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GiftTemplateList) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GiftTemplateList) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GiftTemplateList) GetList() []*GiftTemplate {
	if m != nil {
		return m.List
	}
	return nil
}

type GiftTemplateContent struct {
	Tickets *TicketBox  `protobuf:"bytes,1,opt,name=tickets" json:"tickets"`
	Credits *CreditsBox `protobuf:"bytes,2,opt,name=credits" json:"credits"`
}

func (m *GiftTemplateContent) Reset()                    { *m = GiftTemplateContent{} }
func (m *GiftTemplateContent) String() string            { return proto.CompactTextString(m) }
func (*GiftTemplateContent) ProtoMessage()               {}
func (*GiftTemplateContent) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{2} }

func (m *GiftTemplateContent) GetTickets() *TicketBox {
	if m != nil {
		return m.Tickets
	}
	return nil
}

func (m *GiftTemplateContent) GetCredits() *CreditsBox {
	if m != nil {
		return m.Credits
	}
	return nil
}

type TicketBox struct {
	Tickets       []*Tickets `protobuf:"bytes,1,rep,name=tickets" json:"tickets"`
	RandomTickets bool       `protobuf:"varint,2,opt,name=random_tickets,json=randomTickets" json:"random_tickets"`
	UpperLimit    int32      `protobuf:"varint,3,opt,name=upper_limit,json=upperLimit" json:"upper_limit"`
	LowerLimit    int32      `protobuf:"varint,4,opt,name=lower_limit,json=lowerLimit" json:"lower_limit"`
}

func (m *TicketBox) Reset()                    { *m = TicketBox{} }
func (m *TicketBox) String() string            { return proto.CompactTextString(m) }
func (*TicketBox) ProtoMessage()               {}
func (*TicketBox) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{3} }

func (m *TicketBox) GetTickets() []*Tickets {
	if m != nil {
		return m.Tickets
	}
	return nil
}

func (m *TicketBox) GetRandomTickets() bool {
	if m != nil {
		return m.RandomTickets
	}
	return false
}

func (m *TicketBox) GetUpperLimit() int32 {
	if m != nil {
		return m.UpperLimit
	}
	return 0
}

func (m *TicketBox) GetLowerLimit() int32 {
	if m != nil {
		return m.LowerLimit
	}
	return 0
}

type CreditsBox struct {
	Credits       int32 `protobuf:"varint,1,opt,name=credits" json:"credits"`
	RandomCredits bool  `protobuf:"varint,2,opt,name=random_credits,json=randomCredits" json:"random_credits"`
	UpperLimit    int32 `protobuf:"varint,3,opt,name=upper_limit,json=upperLimit" json:"upper_limit"`
	LowerLimit    int32 `protobuf:"varint,4,opt,name=lower_limit,json=lowerLimit" json:"lower_limit"`
}

func (m *CreditsBox) Reset()                    { *m = CreditsBox{} }
func (m *CreditsBox) String() string            { return proto.CompactTextString(m) }
func (*CreditsBox) ProtoMessage()               {}
func (*CreditsBox) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{4} }

func (m *CreditsBox) GetCredits() int32 {
	if m != nil {
		return m.Credits
	}
	return 0
}

func (m *CreditsBox) GetRandomCredits() bool {
	if m != nil {
		return m.RandomCredits
	}
	return false
}

func (m *CreditsBox) GetUpperLimit() int32 {
	if m != nil {
		return m.UpperLimit
	}
	return 0
}

func (m *CreditsBox) GetLowerLimit() int32 {
	if m != nil {
		return m.LowerLimit
	}
	return 0
}

type Tickets struct {
	UseBase      int32 `protobuf:"varint,2,opt,name=use_base,json=useBase" json:"use_base"`
	UseSub       int32 `protobuf:"varint,3,opt,name=use_sub,json=useSub" json:"use_sub"`
	ValidStart   int32 `protobuf:"varint,5,opt,name=valid_start,json=validStart" json:"valid_start"`
	ValidEnd     int32 `protobuf:"varint,6,opt,name=valid_end,json=validEnd" json:"valid_end"`
	Addtime      int32 `protobuf:"varint,7,opt,name=addtime" json:"addtime"`
	RestrictType int32 `protobuf:"varint,10,opt,name=restrict_type,json=restrictType" json:"restrict_type"`
	RestrictId   int32 `protobuf:"varint,11,opt,name=restrict_id,json=restrictId" json:"restrict_id"`
}

func (m *Tickets) Reset()                    { *m = Tickets{} }
func (m *Tickets) String() string            { return proto.CompactTextString(m) }
func (*Tickets) ProtoMessage()               {}
func (*Tickets) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{5} }

func (m *Tickets) GetUseBase() int32 {
	if m != nil {
		return m.UseBase
	}
	return 0
}

func (m *Tickets) GetUseSub() int32 {
	if m != nil {
		return m.UseSub
	}
	return 0
}

func (m *Tickets) GetValidStart() int32 {
	if m != nil {
		return m.ValidStart
	}
	return 0
}

func (m *Tickets) GetValidEnd() int32 {
	if m != nil {
		return m.ValidEnd
	}
	return 0
}

func (m *Tickets) GetAddtime() int32 {
	if m != nil {
		return m.Addtime
	}
	return 0
}

func (m *Tickets) GetRestrictType() int32 {
	if m != nil {
		return m.RestrictType
	}
	return 0
}

func (m *Tickets) GetRestrictId() int32 {
	if m != nil {
		return m.RestrictId
	}
	return 0
}

func init() {
	proto.RegisterType((*GiftTemplate)(nil), "dbproto.GiftTemplate")
	proto.RegisterType((*GiftTemplateList)(nil), "dbproto.GiftTemplateList")
	proto.RegisterType((*GiftTemplateContent)(nil), "dbproto.GiftTemplateContent")
	proto.RegisterType((*TicketBox)(nil), "dbproto.TicketBox")
	proto.RegisterType((*CreditsBox)(nil), "dbproto.CreditsBox")
	proto.RegisterType((*Tickets)(nil), "dbproto.Tickets")
}

func init() { proto.RegisterFile("gift_template.proto", fileDescriptor16) }

var fileDescriptor16 = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xdd, 0x6e, 0xd3, 0x30,
	0x18, 0x55, 0xda, 0xa6, 0x69, 0xbf, 0x74, 0xd3, 0xe4, 0xf2, 0xe3, 0x09, 0x24, 0x42, 0x11, 0x52,
	0x40, 0xd0, 0x8b, 0x22, 0xf1, 0x00, 0x1b, 0x08, 0x81, 0x76, 0xe5, 0xf5, 0x3e, 0x72, 0x63, 0x6f,
	0x32, 0xa4, 0x49, 0x14, 0x7f, 0x01, 0xc6, 0x4b, 0x20, 0xde, 0x80, 0xf7, 0xe2, 0x61, 0x40, 0xf9,
	0xe2, 0xa4, 0x01, 0xed, 0x92, 0x3b, 0x9f, 0xe3, 0x13, 0x9f, 0x93, 0xe3, 0xcf, 0xb0, 0xbc, 0x36,
	0x57, 0x98, 0xa0, 0xde, 0x97, 0x99, 0x44, 0xbd, 0x2e, 0xab, 0x02, 0x0b, 0x16, 0xa8, 0x1d, 0x2d,
	0x56, 0xbf, 0x3d, 0x58, 0xbc, 0x33, 0x57, 0xb8, 0x75, 0xfb, 0xec, 0x18, 0x46, 0x46, 0x71, 0x2f,
	0xf2, 0xe2, 0xb1, 0x18, 0x19, 0xc5, 0xee, 0x80, 0x8f, 0x06, 0x33, 0xcd, 0x47, 0x91, 0x17, 0xcf,
	0x45, 0x0b, 0xd8, 0x63, 0x58, 0xa4, 0x45, 0x8e, 0x3a, 0xc7, 0x44, 0x69, 0x9b, 0xf2, 0x31, 0x6d,
	0x86, 0x8e, 0x7b, 0xa3, 0x6d, 0xca, 0x5e, 0x43, 0xe0, 0x20, 0x9f, 0x44, 0x5e, 0x1c, 0x6e, 0x1e,
	0xae, 0x9d, 0xe9, 0x7a, 0x68, 0x78, 0xde, 0x6a, 0x44, 0x27, 0x66, 0xa7, 0x30, 0x93, 0x4a, 0x25,
	0x68, 0xf6, 0x9a, 0xfb, 0x91, 0x17, 0xfb, 0x22, 0x90, 0x4a, 0x6d, 0xcd, 0x5e, 0x33, 0x0e, 0x41,
	0x5a, 0x69, 0x89, 0x45, 0xc5, 0xa7, 0x64, 0xd8, 0x41, 0x76, 0x0f, 0xa6, 0x16, 0x25, 0xd6, 0x96,
	0x07, 0x91, 0x17, 0xcf, 0x84, 0x43, 0xc3, 0x9c, 0x1f, 0x6d, 0x91, 0xf3, 0xd9, 0x5f, 0x39, 0x3f,
	0xd8, 0x22, 0x5f, 0xfd, 0xf0, 0xe0, 0x64, 0x18, 0xe8, 0xc2, 0x58, 0x64, 0x0c, 0x26, 0xa5, 0xbc,
	0xd6, 0xd4, 0x83, 0x2f, 0x68, 0xdd, 0x70, 0xd6, 0x7c, 0x6b, 0x8b, 0xf0, 0x05, 0xad, 0xa9, 0x9d,
	0x02, 0x65, 0x46, 0x05, 0xf8, 0xa2, 0x05, 0x87, 0xce, 0x26, 0xc3, 0xce, 0x9e, 0xc1, 0x24, 0x33,
	0x16, 0xb9, 0x1f, 0x8d, 0xe3, 0x70, 0x73, 0xf7, 0xd6, 0x36, 0x04, 0x49, 0x56, 0x15, 0x2c, 0x6f,
	0xe9, 0x88, 0xbd, 0x80, 0x00, 0x4d, 0xfa, 0x49, 0xa3, 0xa5, 0x60, 0xe1, 0x86, 0xf5, 0x87, 0x6c,
	0x89, 0x3f, 0x2b, 0xbe, 0x8a, 0x4e, 0xc2, 0x5e, 0x52, 0x5b, 0xca, 0xa0, 0xa5, 0xc8, 0xe1, 0x66,
	0xd9, 0xab, 0xcf, 0x5b, 0x9e, 0xe4, 0x4e, 0xb3, 0xfa, 0xe9, 0xc1, 0xbc, 0x3f, 0x85, 0x3d, 0x1f,
	0x5a, 0x35, 0x79, 0x4f, 0xfe, 0xb1, 0xb2, 0x07, 0xa3, 0xa7, 0x70, 0x5c, 0xc9, 0x5c, 0x15, 0xfb,
	0xa4, 0xfb, 0x64, 0x44, 0x97, 0x70, 0xd4, 0xb2, 0x4e, 0xcf, 0x1e, 0x41, 0x58, 0x97, 0xa5, 0xae,
	0x92, 0xcc, 0xec, 0x0d, 0xba, 0xc6, 0x80, 0xa8, 0x8b, 0x86, 0x69, 0x04, 0x59, 0xf1, 0xa5, 0x17,
	0x4c, 0x5a, 0x01, 0x51, 0x24, 0x58, 0x7d, 0xf7, 0x00, 0x0e, 0xd1, 0xdd, 0x38, 0xd0, 0x0f, 0xb6,
	0xf7, 0xd4, 0xc1, 0x41, 0xa2, 0x61, 0x03, 0x7d, 0x22, 0x77, 0xc6, 0x7f, 0x48, 0xf4, 0xcb, 0x83,
	0xa0, 0xfb, 0xbf, 0x53, 0x98, 0xd5, 0x56, 0x27, 0x3b, 0x69, 0xbb, 0x19, 0x09, 0x6a, 0xab, 0xcf,
	0xa4, 0xd5, 0xec, 0x3e, 0x34, 0xcb, 0xc4, 0xd6, 0x3b, 0x67, 0x32, 0xad, 0xad, 0xbe, 0xac, 0x77,
	0x8d, 0xc1, 0x67, 0x99, 0x19, 0x95, 0x58, 0x94, 0x15, 0xba, 0x79, 0x07, 0xa2, 0x2e, 0x1b, 0x86,
	0x3d, 0x80, 0x79, 0x2b, 0xd0, 0xb9, 0xa2, 0xa1, 0xf7, 0xc5, 0x8c, 0x88, 0xb7, 0xb9, 0x6a, 0x0a,
	0x90, 0x4a, 0xd1, 0x4b, 0x09, 0xfa, 0x97, 0xd2, 0x40, 0xf6, 0x04, 0x8e, 0x2a, 0x6d, 0xb1, 0x32,
	0x29, 0x26, 0x78, 0x53, 0x6a, 0x0e, 0xb4, 0xbf, 0xe8, 0xc8, 0xed, 0x4d, 0xa9, 0x1b, 0xf3, 0x5e,
	0x64, 0x14, 0x0f, 0x5b, 0xf3, 0x8e, 0x7a, 0xaf, 0x76, 0x53, 0xba, 0xf0, 0x57, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x1b, 0x7e, 0xc0, 0x6a, 0x43, 0x04, 0x00, 0x00,
}
