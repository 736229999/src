// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gift_package.proto

package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GiftPackageArg struct {
	Id               int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Title            string `protobuf:"bytes,2,opt,name=title" json:"title"`
	ContentDesc      string `protobuf:"bytes,3,opt,name=content_desc,json=contentDesc" json:"content_desc"`
	Content          string `protobuf:"bytes,4,opt,name=content" json:"content"`
	TotalExchangeNum int64  `protobuf:"varint,5,opt,name=total_exchange_num,json=totalExchangeNum" json:"total_exchange_num"`
	AddTime          int64  `protobuf:"varint,6,opt,name=add_time,json=addTime" json:"add_time"`
	GiftType         int64  `protobuf:"varint,7,opt,name=gift_type,json=giftType" json:"gift_type"`
	Status           bool   `protobuf:"varint,8,opt,name=status" json:"status"`
}

func (m *GiftPackageArg) Reset()                    { *m = GiftPackageArg{} }
func (m *GiftPackageArg) String() string            { return proto.CompactTextString(m) }
func (*GiftPackageArg) ProtoMessage()               {}
func (*GiftPackageArg) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0} }

func (m *GiftPackageArg) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GiftPackageArg) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GiftPackageArg) GetContentDesc() string {
	if m != nil {
		return m.ContentDesc
	}
	return ""
}

func (m *GiftPackageArg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *GiftPackageArg) GetTotalExchangeNum() int64 {
	if m != nil {
		return m.TotalExchangeNum
	}
	return 0
}

func (m *GiftPackageArg) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *GiftPackageArg) GetGiftType() int64 {
	if m != nil {
		return m.GiftType
	}
	return 0
}

func (m *GiftPackageArg) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

// 礼包列表.
type GiftList struct {
	Title string            `protobuf:"bytes,1,opt,name=title" json:"title"`
	Page  int64             `protobuf:"varint,2,opt,name=page" json:"page"`
	Size  int64             `protobuf:"varint,3,opt,name=size" json:"size"`
	Total int64             `protobuf:"varint,4,opt,name=total" json:"total"`
	List  []*GiftPackageArg `protobuf:"bytes,5,rep,name=list" json:"list"`
}

func (m *GiftList) Reset()                    { *m = GiftList{} }
func (m *GiftList) String() string            { return proto.CompactTextString(m) }
func (*GiftList) ProtoMessage()               {}
func (*GiftList) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{1} }

func (m *GiftList) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GiftList) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GiftList) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *GiftList) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GiftList) GetList() []*GiftPackageArg {
	if m != nil {
		return m.List
	}
	return nil
}

// ticket.
type Ticket struct {
	UseBase      int64 `protobuf:"varint,1,opt,name=use_base,json=useBase" json:"use_base"`
	UseSub       int64 `protobuf:"varint,2,opt,name=use_sub,json=useSub" json:"use_sub"`
	RestrictType int64 `protobuf:"varint,3,opt,name=restrict_type,json=restrictType" json:"restrict_type"`
	RestrictId   int64 `protobuf:"varint,4,opt,name=restrict_id,json=restrictId" json:"restrict_id"`
	ValidStart   int64 `protobuf:"varint,5,opt,name=valid_start,json=validStart" json:"valid_start"`
	ValidEnd     int64 `protobuf:"varint,6,opt,name=valid_end,json=validEnd" json:"valid_end"`
}

func (m *Ticket) Reset()                    { *m = Ticket{} }
func (m *Ticket) String() string            { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()               {}
func (*Ticket) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{2} }

func (m *Ticket) GetUseBase() int64 {
	if m != nil {
		return m.UseBase
	}
	return 0
}

func (m *Ticket) GetUseSub() int64 {
	if m != nil {
		return m.UseSub
	}
	return 0
}

func (m *Ticket) GetRestrictType() int64 {
	if m != nil {
		return m.RestrictType
	}
	return 0
}

func (m *Ticket) GetRestrictId() int64 {
	if m != nil {
		return m.RestrictId
	}
	return 0
}

func (m *Ticket) GetValidStart() int64 {
	if m != nil {
		return m.ValidStart
	}
	return 0
}

func (m *Ticket) GetValidEnd() int64 {
	if m != nil {
		return m.ValidEnd
	}
	return 0
}

type Gift struct {
	Credits int64     `protobuf:"varint,1,opt,name=credits" json:"credits"`
	Tickets []*Ticket `protobuf:"bytes,2,rep,name=tickets" json:"tickets"`
}

func (m *Gift) Reset()                    { *m = Gift{} }
func (m *Gift) String() string            { return proto.CompactTextString(m) }
func (*Gift) ProtoMessage()               {}
func (*Gift) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{3} }

func (m *Gift) GetCredits() int64 {
	if m != nil {
		return m.Credits
	}
	return 0
}

func (m *Gift) GetTickets() []*Ticket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

// 礼包.
type GiftPackageRequest struct {
	Title       string `protobuf:"bytes,1,opt,name=title" json:"title"`
	ContentDesc string `protobuf:"bytes,2,opt,name=content_desc,json=contentDesc" json:"content_desc"`
	GiftType    int64  `protobuf:"varint,3,opt,name=gift_type,json=giftType" json:"gift_type"`
	Content     string `protobuf:"bytes,5,opt,name=content" json:"content"`
	Gift        *Gift  `protobuf:"bytes,6,opt,name=gift" json:"gift"`
	AddTime     int64  `protobuf:"varint,7,opt,name=add_time,json=addTime" json:"add_time"`
	Id          int64  `protobuf:"varint,8,opt,name=id" json:"id"`
}

func (m *GiftPackageRequest) Reset()                    { *m = GiftPackageRequest{} }
func (m *GiftPackageRequest) String() string            { return proto.CompactTextString(m) }
func (*GiftPackageRequest) ProtoMessage()               {}
func (*GiftPackageRequest) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{4} }

func (m *GiftPackageRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GiftPackageRequest) GetContentDesc() string {
	if m != nil {
		return m.ContentDesc
	}
	return ""
}

func (m *GiftPackageRequest) GetGiftType() int64 {
	if m != nil {
		return m.GiftType
	}
	return 0
}

func (m *GiftPackageRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *GiftPackageRequest) GetGift() *Gift {
	if m != nil {
		return m.Gift
	}
	return nil
}

func (m *GiftPackageRequest) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *GiftPackageRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GiftListByType struct {
	Type     int64             `protobuf:"varint,1,opt,name=type" json:"type"`
	GiftList []*GiftPackageArg `protobuf:"bytes,2,rep,name=gift_list,json=giftList" json:"gift_list"`
}

func (m *GiftListByType) Reset()                    { *m = GiftListByType{} }
func (m *GiftListByType) String() string            { return proto.CompactTextString(m) }
func (*GiftListByType) ProtoMessage()               {}
func (*GiftListByType) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{5} }

func (m *GiftListByType) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GiftListByType) GetGiftList() []*GiftPackageArg {
	if m != nil {
		return m.GiftList
	}
	return nil
}

func init() {
	proto.RegisterType((*GiftPackageArg)(nil), "dbproto.GiftPackageArg")
	proto.RegisterType((*GiftList)(nil), "dbproto.GiftList")
	proto.RegisterType((*Ticket)(nil), "dbproto.Ticket")
	proto.RegisterType((*Gift)(nil), "dbproto.Gift")
	proto.RegisterType((*GiftPackageRequest)(nil), "dbproto.GiftPackageRequest")
	proto.RegisterType((*GiftListByType)(nil), "dbproto.GiftListByType")
}

func init() { proto.RegisterFile("gift_package.proto", fileDescriptor15) }

var fileDescriptor15 = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x5d, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x7f, 0x12, 0xbb, 0x93, 0xb6, 0xa0, 0x15, 0xa2, 0x8b, 0x78, 0x20, 0x35, 0x2f, 0x41,
	0xa0, 0x3c, 0x14, 0x2e, 0x40, 0x45, 0x85, 0x10, 0x08, 0x21, 0x37, 0x4f, 0xbc, 0x58, 0x1b, 0xef,
	0x34, 0xac, 0x9a, 0x38, 0xc6, 0x3b, 0x46, 0x84, 0x2b, 0x70, 0x29, 0xce, 0xc0, 0x4d, 0xb8, 0x01,
	0xda, 0xf1, 0xba, 0xc4, 0x45, 0xf0, 0x36, 0xf3, 0x7d, 0x93, 0x78, 0xbe, 0x6f, 0xbe, 0x05, 0xb1,
	0x32, 0x57, 0x54, 0xd4, 0xaa, 0xbc, 0x56, 0x2b, 0x9c, 0xd7, 0xcd, 0x96, 0xb6, 0x22, 0xd1, 0x4b,
	0x2e, 0xb2, 0x5f, 0x01, 0x1c, 0xbf, 0x36, 0x57, 0xf4, 0xa1, 0xa3, 0x5f, 0x36, 0x2b, 0x71, 0x0c,
	0xa1, 0xd1, 0x32, 0x98, 0x06, 0xb3, 0x28, 0x0f, 0x8d, 0x16, 0xf7, 0x60, 0x44, 0x86, 0xd6, 0x28,
	0xc3, 0x69, 0x30, 0x3b, 0xc8, 0xbb, 0x46, 0x9c, 0xc2, 0x61, 0xb9, 0xad, 0x08, 0x2b, 0x2a, 0x34,
	0xda, 0x52, 0x46, 0x4c, 0x4e, 0x3c, 0xf6, 0x0a, 0x6d, 0x29, 0x24, 0x24, 0xbe, 0x95, 0x31, 0xb3,
	0x7d, 0x2b, 0x9e, 0x81, 0xa0, 0x2d, 0xa9, 0x75, 0x81, 0x5f, 0xcb, 0x4f, 0xaa, 0x5a, 0x61, 0x51,
	0xb5, 0x1b, 0x39, 0xe2, 0x4f, 0xde, 0x65, 0xe6, 0xc2, 0x13, 0xef, 0xdb, 0x8d, 0x78, 0x00, 0xa9,
	0xd2, 0xba, 0x20, 0xb3, 0x41, 0x39, 0xe6, 0x99, 0x44, 0x69, 0xbd, 0x30, 0x1b, 0x14, 0x0f, 0xe1,
	0x80, 0xd5, 0xd1, 0xae, 0x46, 0x99, 0x30, 0x97, 0x3a, 0x60, 0xb1, 0xab, 0x51, 0xdc, 0x87, 0xb1,
	0x25, 0x45, 0xad, 0x95, 0xe9, 0x34, 0x98, 0xa5, 0xb9, 0xef, 0xb2, 0xef, 0x01, 0xa4, 0x4e, 0xf3,
	0x3b, 0x63, 0xe9, 0x8f, 0xba, 0x60, 0x5f, 0x9d, 0x80, 0xb8, 0x56, 0xab, 0x4e, 0x72, 0x94, 0x73,
	0xed, 0x30, 0x6b, 0xbe, 0x21, 0x2b, 0x8d, 0x72, 0xae, 0xf9, 0xd7, 0x6e, 0x5d, 0x16, 0x18, 0xe5,
	0x5d, 0x23, 0x9e, 0x42, 0xbc, 0x36, 0x96, 0xe4, 0x68, 0x1a, 0xcd, 0x26, 0x67, 0x27, 0x73, 0x6f,
	0xf6, 0x7c, 0x68, 0x74, 0xce, 0x43, 0xd9, 0x8f, 0x00, 0xc6, 0x0b, 0x53, 0x5e, 0x23, 0x39, 0xa1,
	0xad, 0xc5, 0x62, 0xa9, 0x2c, 0x7a, 0xff, 0x93, 0xd6, 0xe2, 0xb9, 0xb2, 0x28, 0x4e, 0xc0, 0x95,
	0x85, 0x6d, 0x97, 0x7e, 0xa7, 0x71, 0x6b, 0xf1, 0xb2, 0x5d, 0x8a, 0xc7, 0x70, 0xd4, 0xa0, 0xa5,
	0xc6, 0x94, 0xde, 0x85, 0x6e, 0xbd, 0xc3, 0x1e, 0x64, 0x27, 0x1e, 0xc1, 0xe4, 0x66, 0xc8, 0x68,
	0xbf, 0x2c, 0xf4, 0xd0, 0x1b, 0xed, 0x06, 0xbe, 0xa8, 0xb5, 0xd1, 0x85, 0x25, 0xd5, 0x90, 0xbf,
	0x04, 0x30, 0x74, 0xe9, 0x10, 0x67, 0x74, 0x37, 0x80, 0x95, 0xf6, 0x47, 0x48, 0x19, 0xb8, 0xa8,
	0x74, 0xf6, 0x16, 0x62, 0x27, 0x8d, 0x0f, 0xde, 0xa0, 0x36, 0x64, 0xfb, 0xf5, 0x7d, 0x2b, 0x9e,
	0x40, 0x42, 0xac, 0xd1, 0xca, 0x90, 0x4d, 0xb9, 0x73, 0x63, 0x4a, 0xa7, 0x3d, 0xef, 0xf9, 0xec,
	0x67, 0x00, 0x62, 0xcf, 0xa8, 0x1c, 0x3f, 0xb7, 0xf8, 0xcf, 0x3b, 0xdd, 0x4e, 0x61, 0xf8, 0x77,
	0x0a, 0x07, 0x11, 0x89, 0x6e, 0x45, 0x64, 0x2f, 0xa2, 0xa3, 0x61, 0x44, 0x4f, 0x21, 0x76, 0x53,
	0xac, 0x75, 0x72, 0x76, 0x34, 0xb8, 0x61, 0xce, 0xd4, 0x20, 0x97, 0xc9, 0x30, 0x97, 0xdd, 0x1b,
	0x4a, 0xfb, 0x37, 0x94, 0x7d, 0xec, 0x5e, 0x99, 0x4b, 0xdc, 0xf9, 0x8e, 0xbf, 0x2c, 0x20, 0xe6,
	0x8d, 0x3a, 0xa3, 0xb8, 0x16, 0x2f, 0xfc, 0xaa, 0x1c, 0x9e, 0xf0, 0xff, 0xe1, 0x61, 0x0d, 0xee,
	0xff, 0x96, 0x63, 0xe6, 0x9f, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xc1, 0x7f, 0x12, 0xe8,
	0x03, 0x00, 0x00,
}
