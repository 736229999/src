// Code generated by protoc-gen-go. DO NOT EDIT.
// source: privilege.proto

package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Privilege struct {
	Id         int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name"`
	Key        string `protobuf:"bytes,3,opt,name=key" json:"key"`
	Path       string `protobuf:"bytes,4,opt,name=path" json:"path"`
	Creator    string `protobuf:"bytes,5,opt,name=creator" json:"creator"`
	CreateTime int32  `protobuf:"varint,6,opt,name=create_time,json=createTime" json:"create_time"`
	PId        int64  `protobuf:"varint,7,opt,name=p_id,json=pId" json:"p_id"`
	Label      string `protobuf:"bytes,8,opt,name=label" json:"label"`
}

func (m *Privilege) Reset()                    { *m = Privilege{} }
func (m *Privilege) String() string            { return proto.CompactTextString(m) }
func (*Privilege) ProtoMessage()               {}
func (*Privilege) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{0} }

func (m *Privilege) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Privilege) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Privilege) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Privilege) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Privilege) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Privilege) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Privilege) GetPId() int64 {
	if m != nil {
		return m.PId
	}
	return 0
}

func (m *Privilege) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type PrivilegeChildrenList struct {
	Id         int64                    `protobuf:"varint,1,opt,name=id" json:"id"`
	Name       string                   `protobuf:"bytes,2,opt,name=name" json:"name"`
	Key        string                   `protobuf:"bytes,3,opt,name=key" json:"key"`
	Path       string                   `protobuf:"bytes,4,opt,name=path" json:"path"`
	Creator    string                   `protobuf:"bytes,5,opt,name=creator" json:"creator"`
	CreateTime int32                    `protobuf:"varint,6,opt,name=create_time,json=createTime" json:"create_time"`
	PId        int64                    `protobuf:"varint,7,opt,name=p_id,json=pId" json:"p_id"`
	Children   []*PrivilegeChildrenList `protobuf:"bytes,8,rep,name=children" json:"children"`
	Label      string                   `protobuf:"bytes,9,opt,name=label" json:"label"`
}

func (m *PrivilegeChildrenList) Reset()                    { *m = PrivilegeChildrenList{} }
func (m *PrivilegeChildrenList) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeChildrenList) ProtoMessage()               {}
func (*PrivilegeChildrenList) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{1} }

func (m *PrivilegeChildrenList) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PrivilegeChildrenList) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PrivilegeChildrenList) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PrivilegeChildrenList) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *PrivilegeChildrenList) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *PrivilegeChildrenList) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *PrivilegeChildrenList) GetPId() int64 {
	if m != nil {
		return m.PId
	}
	return 0
}

func (m *PrivilegeChildrenList) GetChildren() []*PrivilegeChildrenList {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *PrivilegeChildrenList) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type PrivilegeList struct {
	Children []*PrivilegeChildrenList `protobuf:"bytes,8,rep,name=children" json:"children"`
}

func (m *PrivilegeList) Reset()                    { *m = PrivilegeList{} }
func (m *PrivilegeList) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeList) ProtoMessage()               {}
func (*PrivilegeList) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{2} }

func (m *PrivilegeList) GetChildren() []*PrivilegeChildrenList {
	if m != nil {
		return m.Children
	}
	return nil
}

func init() {
	proto.RegisterType((*Privilege)(nil), "dbproto.Privilege")
	proto.RegisterType((*PrivilegeChildrenList)(nil), "dbproto.PrivilegeChildrenList")
	proto.RegisterType((*PrivilegeList)(nil), "dbproto.PrivilegeList")
}

func init() { proto.RegisterFile("privilege.proto", fileDescriptor21) }

var fileDescriptor21 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x91, 0x31, 0x4f, 0xbc, 0x40,
	0x10, 0xc5, 0xb3, 0x2c, 0x1c, 0x30, 0x97, 0xff, 0x5f, 0xdd, 0x68, 0x32, 0x95, 0x92, 0xab, 0xa8,
	0x28, 0xb4, 0xb3, 0xb5, 0x32, 0x5a, 0x18, 0x62, 0x7f, 0x81, 0xdb, 0x89, 0x37, 0x11, 0x8e, 0xcd,
	0xba, 0x31, 0xb1, 0xf4, 0x63, 0xf9, 0xed, 0x0c, 0xc3, 0x1d, 0x5a, 0xd8, 0xd9, 0xd8, 0xfd, 0xe6,
	0xf1, 0xd8, 0x7d, 0x6f, 0x16, 0x8e, 0x9c, 0xe7, 0x57, 0xee, 0xe8, 0x89, 0x2a, 0xe7, 0x87, 0x30,
	0x98, 0xd4, 0xb6, 0x02, 0xab, 0x0f, 0x05, 0xf9, 0xc3, 0xe1, 0xa3, 0xf9, 0x0f, 0x11, 0x5b, 0x54,
	0x85, 0x2a, 0x75, 0x1d, 0xb1, 0x35, 0x06, 0xe2, 0x5d, 0xd3, 0x13, 0x46, 0x85, 0x2a, 0xf3, 0x5a,
	0xd8, 0x1c, 0x83, 0x7e, 0xa6, 0x37, 0xd4, 0x22, 0x8d, 0x38, 0xba, 0x5c, 0x13, 0xb6, 0x18, 0x4f,
	0xae, 0x91, 0x0d, 0x42, 0xba, 0xf1, 0xd4, 0x84, 0xc1, 0x63, 0x22, 0xf2, 0x61, 0x34, 0x17, 0xb0,
	0x14, 0xa4, 0x75, 0xe0, 0x9e, 0x70, 0x51, 0xa8, 0x32, 0xa9, 0x61, 0x92, 0x1e, 0xb9, 0x27, 0x73,
	0x02, 0xb1, 0x5b, 0xb3, 0xc5, 0x54, 0x62, 0x68, 0x77, 0x6b, 0xcd, 0x29, 0x24, 0x5d, 0xd3, 0x52,
	0x87, 0x99, 0x9c, 0x35, 0x0d, 0xab, 0xf7, 0x08, 0xce, 0xe6, 0xec, 0x37, 0x5b, 0xee, 0xac, 0xa7,
	0xdd, 0x3d, 0xbf, 0x84, 0x3f, 0xdb, 0xe3, 0x1a, 0xb2, 0xcd, 0x3e, 0x27, 0x66, 0x85, 0x2e, 0x97,
	0x97, 0xe7, 0xd5, 0xfe, 0x25, 0xaa, 0x1f, 0x9b, 0xd4, 0xb3, 0xff, 0x6b, 0x07, 0xf9, 0xf7, 0x1d,
	0xdc, 0xc1, 0xbf, 0xf9, 0x47, 0xa9, 0xfe, 0x8b, 0x2b, 0xda, 0x85, 0xd8, 0xae, 0x3e, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x2a, 0xab, 0x3d, 0x8c, 0x2f, 0x02, 0x00, 0x00,
}
