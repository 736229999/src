// Code generated by protoc-gen-go. DO NOT EDIT.
// source: football.proto

package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 比赛信息
type GameInfo struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	GameNo    string `protobuf:"bytes,2,opt,name=gameNo" json:"gameNo"`
	GameType  string `protobuf:"bytes,3,opt,name=gameType" json:"gameType"`
	OpenTime  int64  `protobuf:"varint,4,opt,name=openTime" json:"openTime"`
	HomeTeam  string `protobuf:"bytes,5,opt,name=homeTeam" json:"homeTeam"`
	GuestTeam string `protobuf:"bytes,6,opt,name=guestTeam" json:"guestTeam"`
	Giveball  int64  `protobuf:"varint,7,opt,name=giveball" json:"giveball"`
	StartTime int64  `protobuf:"varint,8,opt,name=startTime" json:"startTime"`
	EndTime   int64  `protobuf:"varint,9,opt,name=endTime" json:"endTime"`
}

func (m *GameInfo) Reset()                    { *m = GameInfo{} }
func (m *GameInfo) String() string            { return proto.CompactTextString(m) }
func (*GameInfo) ProtoMessage()               {}
func (*GameInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

func (m *GameInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GameInfo) GetGameNo() string {
	if m != nil {
		return m.GameNo
	}
	return ""
}

func (m *GameInfo) GetGameType() string {
	if m != nil {
		return m.GameType
	}
	return ""
}

func (m *GameInfo) GetOpenTime() int64 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

func (m *GameInfo) GetHomeTeam() string {
	if m != nil {
		return m.HomeTeam
	}
	return ""
}

func (m *GameInfo) GetGuestTeam() string {
	if m != nil {
		return m.GuestTeam
	}
	return ""
}

func (m *GameInfo) GetGiveball() int64 {
	if m != nil {
		return m.Giveball
	}
	return 0
}

func (m *GameInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GameInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 玩法赔率信息
type PlayOdds struct {
	Id      int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Spf     string `protobuf:"bytes,2,opt,name=spf" json:"spf"`
	Rqspf   string `protobuf:"bytes,3,opt,name=rqspf" json:"rqspf"`
	Zjqs    string `protobuf:"bytes,4,opt,name=zjqs" json:"zjqs"`
	Bf      string `protobuf:"bytes,5,opt,name=bf" json:"bf"`
	Bqc     string `protobuf:"bytes,6,opt,name=bqc" json:"bqc"`
	Spfdg   bool   `protobuf:"varint,7,opt,name=spfdg" json:"spfdg"`
	Rqspfdg bool   `protobuf:"varint,8,opt,name=rqspfdg" json:"rqspfdg"`
	Zjqsdg  bool   `protobuf:"varint,9,opt,name=zjqsdg" json:"zjqsdg"`
	Bfdg    bool   `protobuf:"varint,10,opt,name=bfdg" json:"bfdg"`
	Bqcdg   bool   `protobuf:"varint,11,opt,name=bqcdg" json:"bqcdg"`
}

func (m *PlayOdds) Reset()                    { *m = PlayOdds{} }
func (m *PlayOdds) String() string            { return proto.CompactTextString(m) }
func (*PlayOdds) ProtoMessage()               {}
func (*PlayOdds) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{1} }

func (m *PlayOdds) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayOdds) GetSpf() string {
	if m != nil {
		return m.Spf
	}
	return ""
}

func (m *PlayOdds) GetRqspf() string {
	if m != nil {
		return m.Rqspf
	}
	return ""
}

func (m *PlayOdds) GetZjqs() string {
	if m != nil {
		return m.Zjqs
	}
	return ""
}

func (m *PlayOdds) GetBf() string {
	if m != nil {
		return m.Bf
	}
	return ""
}

func (m *PlayOdds) GetBqc() string {
	if m != nil {
		return m.Bqc
	}
	return ""
}

func (m *PlayOdds) GetSpfdg() bool {
	if m != nil {
		return m.Spfdg
	}
	return false
}

func (m *PlayOdds) GetRqspfdg() bool {
	if m != nil {
		return m.Rqspfdg
	}
	return false
}

func (m *PlayOdds) GetZjqsdg() bool {
	if m != nil {
		return m.Zjqsdg
	}
	return false
}

func (m *PlayOdds) GetBfdg() bool {
	if m != nil {
		return m.Bfdg
	}
	return false
}

func (m *PlayOdds) GetBqcdg() bool {
	if m != nil {
		return m.Bqcdg
	}
	return false
}

// 开奖表信息
type FbGameresult struct {
	Id         int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Homeball   int64  `protobuf:"varint,2,opt,name=homeball" json:"homeball"`
	Guestball  int64  `protobuf:"varint,3,opt,name=guestball" json:"guestball"`
	HomeHball  int64  `protobuf:"varint,4,opt,name=homeHball" json:"homeHball"`
	GuestHball int64  `protobuf:"varint,5,opt,name=guestHball" json:"guestHball"`
	Spf        string `protobuf:"bytes,6,opt,name=spf" json:"spf"`
	Rqspf      string `protobuf:"bytes,7,opt,name=rqspf" json:"rqspf"`
	Zjqs       int64  `protobuf:"varint,8,opt,name=zjqs" json:"zjqs"`
	Bqc        string `protobuf:"bytes,9,opt,name=bqc" json:"bqc"`
	Ifopen     bool   `protobuf:"varint,10,opt,name=ifopen" json:"ifopen"`
}

func (m *FbGameresult) Reset()                    { *m = FbGameresult{} }
func (m *FbGameresult) String() string            { return proto.CompactTextString(m) }
func (*FbGameresult) ProtoMessage()               {}
func (*FbGameresult) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{2} }

func (m *FbGameresult) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FbGameresult) GetHomeball() int64 {
	if m != nil {
		return m.Homeball
	}
	return 0
}

func (m *FbGameresult) GetGuestball() int64 {
	if m != nil {
		return m.Guestball
	}
	return 0
}

func (m *FbGameresult) GetHomeHball() int64 {
	if m != nil {
		return m.HomeHball
	}
	return 0
}

func (m *FbGameresult) GetGuestHball() int64 {
	if m != nil {
		return m.GuestHball
	}
	return 0
}

func (m *FbGameresult) GetSpf() string {
	if m != nil {
		return m.Spf
	}
	return ""
}

func (m *FbGameresult) GetRqspf() string {
	if m != nil {
		return m.Rqspf
	}
	return ""
}

func (m *FbGameresult) GetZjqs() int64 {
	if m != nil {
		return m.Zjqs
	}
	return 0
}

func (m *FbGameresult) GetBqc() string {
	if m != nil {
		return m.Bqc
	}
	return ""
}

func (m *FbGameresult) GetIfopen() bool {
	if m != nil {
		return m.Ifopen
	}
	return false
}

// 联赛信息
type FbLeagueInfo struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name"`
}

func (m *FbLeagueInfo) Reset()                    { *m = FbLeagueInfo{} }
func (m *FbLeagueInfo) String() string            { return proto.CompactTextString(m) }
func (*FbLeagueInfo) ProtoMessage()               {}
func (*FbLeagueInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{3} }

func (m *FbLeagueInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FbLeagueInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 球队信息
type FbTeamInfo struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name"`
	Url  string `protobuf:"bytes,3,opt,name=url" json:"url"`
}

func (m *FbTeamInfo) Reset()                    { *m = FbTeamInfo{} }
func (m *FbTeamInfo) String() string            { return proto.CompactTextString(m) }
func (*FbTeamInfo) ProtoMessage()               {}
func (*FbTeamInfo) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{4} }

func (m *FbTeamInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FbTeamInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FbTeamInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// 比赛信息查询参数
type QueryFbGameArg struct {
	Team     int64 `protobuf:"varint,1,opt,name=team" json:"team"`
	Start    int64 `protobuf:"varint,2,opt,name=start" json:"start"`
	End      int64 `protobuf:"varint,3,opt,name=end" json:"end"`
	Page     int64 `protobuf:"varint,4,opt,name=page" json:"page"`
	PageSize int64 `protobuf:"varint,5,opt,name=pageSize" json:"pageSize"`
}

func (m *QueryFbGameArg) Reset()                    { *m = QueryFbGameArg{} }
func (m *QueryFbGameArg) String() string            { return proto.CompactTextString(m) }
func (*QueryFbGameArg) ProtoMessage()               {}
func (*QueryFbGameArg) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{5} }

func (m *QueryFbGameArg) GetTeam() int64 {
	if m != nil {
		return m.Team
	}
	return 0
}

func (m *QueryFbGameArg) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *QueryFbGameArg) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *QueryFbGameArg) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *QueryFbGameArg) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// 开奖信息查询参数
type QueryOpencaiArg struct {
	Date     int64 `protobuf:"varint,1,opt,name=date" json:"date"`
	Page     int64 `protobuf:"varint,2,opt,name=page" json:"page"`
	PageSize int64 `protobuf:"varint,3,opt,name=pageSize" json:"pageSize"`
}

func (m *QueryOpencaiArg) Reset()                    { *m = QueryOpencaiArg{} }
func (m *QueryOpencaiArg) String() string            { return proto.CompactTextString(m) }
func (*QueryOpencaiArg) ProtoMessage()               {}
func (*QueryOpencaiArg) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{6} }

func (m *QueryOpencaiArg) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *QueryOpencaiArg) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *QueryOpencaiArg) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// 球队信息查询参数
type QueryFbTeamArg struct {
	Page     int64  `protobuf:"varint,1,opt,name=page" json:"page"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize" json:"pageSize"`
	Name     string `protobuf:"bytes,3,opt,name=Name" json:"Name"`
}

func (m *QueryFbTeamArg) Reset()                    { *m = QueryFbTeamArg{} }
func (m *QueryFbTeamArg) String() string            { return proto.CompactTextString(m) }
func (*QueryFbTeamArg) ProtoMessage()               {}
func (*QueryFbTeamArg) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{7} }

func (m *QueryFbTeamArg) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *QueryFbTeamArg) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *QueryFbTeamArg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 联赛信息查询参数
type QueryFbLeagueArg struct {
	Page     int64  `protobuf:"varint,1,opt,name=page" json:"page"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize" json:"pageSize"`
	Name     string `protobuf:"bytes,3,opt,name=Name" json:"Name"`
}

func (m *QueryFbLeagueArg) Reset()                    { *m = QueryFbLeagueArg{} }
func (m *QueryFbLeagueArg) String() string            { return proto.CompactTextString(m) }
func (*QueryFbLeagueArg) ProtoMessage()               {}
func (*QueryFbLeagueArg) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{8} }

func (m *QueryFbLeagueArg) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *QueryFbLeagueArg) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *QueryFbLeagueArg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 比赛和开奖信息
type FbOpencai struct {
	Game   *GameInfo     `protobuf:"bytes,1,opt,name=game" json:"game"`
	Result *FbGameresult `protobuf:"bytes,2,opt,name=result" json:"result"`
}

func (m *FbOpencai) Reset()                    { *m = FbOpencai{} }
func (m *FbOpencai) String() string            { return proto.CompactTextString(m) }
func (*FbOpencai) ProtoMessage()               {}
func (*FbOpencai) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{9} }

func (m *FbOpencai) GetGame() *GameInfo {
	if m != nil {
		return m.Game
	}
	return nil
}

func (m *FbOpencai) GetResult() *FbGameresult {
	if m != nil {
		return m.Result
	}
	return nil
}

type FbGameList struct {
	List  []*GameInfo `protobuf:"bytes,1,rep,name=list" json:"list"`
	Total int64       `protobuf:"varint,2,opt,name=total" json:"total"`
}

func (m *FbGameList) Reset()                    { *m = FbGameList{} }
func (m *FbGameList) String() string            { return proto.CompactTextString(m) }
func (*FbGameList) ProtoMessage()               {}
func (*FbGameList) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{10} }

func (m *FbGameList) GetList() []*GameInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *FbGameList) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type FbLeagueList struct {
	List  []*FbLeagueInfo `protobuf:"bytes,1,rep,name=list" json:"list"`
	Total int64           `protobuf:"varint,2,opt,name=total" json:"total"`
}

func (m *FbLeagueList) Reset()                    { *m = FbLeagueList{} }
func (m *FbLeagueList) String() string            { return proto.CompactTextString(m) }
func (*FbLeagueList) ProtoMessage()               {}
func (*FbLeagueList) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{11} }

func (m *FbLeagueList) GetList() []*FbLeagueInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *FbLeagueList) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type FbTeamList struct {
	List  []*FbTeamInfo `protobuf:"bytes,1,rep,name=list" json:"list"`
	Total int64         `protobuf:"varint,2,opt,name=total" json:"total"`
}

func (m *FbTeamList) Reset()                    { *m = FbTeamList{} }
func (m *FbTeamList) String() string            { return proto.CompactTextString(m) }
func (*FbTeamList) ProtoMessage()               {}
func (*FbTeamList) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{12} }

func (m *FbTeamList) GetList() []*FbTeamInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *FbTeamList) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type FbOpencaiList struct {
	List  []*FbOpencai `protobuf:"bytes,1,rep,name=list" json:"list"`
	Total int64        `protobuf:"varint,2,opt,name=total" json:"total"`
}

func (m *FbOpencaiList) Reset()                    { *m = FbOpencaiList{} }
func (m *FbOpencaiList) String() string            { return proto.CompactTextString(m) }
func (*FbOpencaiList) ProtoMessage()               {}
func (*FbOpencaiList) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{13} }

func (m *FbOpencaiList) GetList() []*FbOpencai {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *FbOpencaiList) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*GameInfo)(nil), "dbproto.GameInfo")
	proto.RegisterType((*PlayOdds)(nil), "dbproto.PlayOdds")
	proto.RegisterType((*FbGameresult)(nil), "dbproto.FbGameresult")
	proto.RegisterType((*FbLeagueInfo)(nil), "dbproto.FbLeagueInfo")
	proto.RegisterType((*FbTeamInfo)(nil), "dbproto.FbTeamInfo")
	proto.RegisterType((*QueryFbGameArg)(nil), "dbproto.QueryFbGameArg")
	proto.RegisterType((*QueryOpencaiArg)(nil), "dbproto.QueryOpencaiArg")
	proto.RegisterType((*QueryFbTeamArg)(nil), "dbproto.QueryFbTeamArg")
	proto.RegisterType((*QueryFbLeagueArg)(nil), "dbproto.QueryFbLeagueArg")
	proto.RegisterType((*FbOpencai)(nil), "dbproto.FbOpencai")
	proto.RegisterType((*FbGameList)(nil), "dbproto.FbGameList")
	proto.RegisterType((*FbLeagueList)(nil), "dbproto.FbLeagueList")
	proto.RegisterType((*FbTeamList)(nil), "dbproto.FbTeamList")
	proto.RegisterType((*FbOpencaiList)(nil), "dbproto.FbOpencaiList")
}

func init() { proto.RegisterFile("football.proto", fileDescriptor14) }

var fileDescriptor14 = []byte{
	// 663 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0x65, 0x27, 0x75, 0xec, 0xe9, 0xf3, 0x94, 0xb2, 0x40, 0x65, 0x55, 0x08, 0x55, 0x96,
	0x80, 0x72, 0xa0, 0x87, 0xf2, 0x09, 0xe0, 0x50, 0xa8, 0x28, 0x2d, 0x98, 0xc0, 0x7d, 0xb7, 0xbb,
	0x36, 0x46, 0x7e, 0x8b, 0xbd, 0x41, 0x6a, 0xc5, 0x27, 0xe6, 0x13, 0x70, 0xe0, 0x80, 0x66, 0x76,
	0xd7, 0x4e, 0xe8, 0x8b, 0x38, 0x70, 0xca, 0xbc, 0xf9, 0x37, 0x99, 0xff, 0x8c, 0x0d, 0x5b, 0x59,
	0xd3, 0x68, 0xc1, 0xcb, 0xf2, 0xa0, 0xed, 0x1a, 0xdd, 0xb0, 0x99, 0x14, 0x64, 0xec, 0x82, 0xe0,
	0xbd, 0x32, 0xc1, 0xe4, 0xa7, 0x07, 0xe1, 0x6b, 0x5e, 0xa9, 0xe3, 0x3a, 0x6b, 0xd8, 0x16, 0xf8,
	0x85, 0x8c, 0xbd, 0x3d, 0x6f, 0x7f, 0x92, 0xfa, 0x85, 0x64, 0x3b, 0x10, 0xe4, 0xbc, 0x52, 0xa7,
	0x4d, 0xec, 0xef, 0x79, 0xfb, 0x51, 0x6a, 0x3d, 0xb6, 0x0b, 0x21, 0x5a, 0xf3, 0x8b, 0x56, 0xc5,
	0x13, 0xca, 0x0c, 0x3e, 0xe6, 0x9a, 0x56, 0xd5, 0xf3, 0xa2, 0x52, 0xf1, 0x94, 0x48, 0x83, 0x8f,
	0xb9, 0x2f, 0x4d, 0xa5, 0xe6, 0x8a, 0x57, 0xf1, 0x86, 0x79, 0xce, 0xf9, 0xec, 0x21, 0x44, 0xf9,
	0x52, 0xf5, 0x9a, 0x92, 0x01, 0x25, 0xc7, 0x00, 0x75, 0x2c, 0xbe, 0x29, 0x9c, 0x26, 0x9e, 0x19,
	0xaa, 0xf3, 0xf1, 0xc9, 0x5e, 0xf3, 0x4e, 0x53, 0xcb, 0x90, 0x92, 0x63, 0x80, 0xc5, 0x30, 0x53,
	0xb5, 0xa4, 0x5c, 0x44, 0x39, 0xe7, 0x26, 0x3f, 0x3c, 0x08, 0xdf, 0x97, 0xfc, 0xe2, 0x4c, 0xca,
	0xfe, 0xca, 0xe8, 0xdb, 0x30, 0xe9, 0xdb, 0xcc, 0xce, 0x8d, 0x26, 0xbb, 0x0f, 0x1b, 0xdd, 0x02,
	0x63, 0x66, 0x62, 0xe3, 0x30, 0x06, 0xd3, 0xcb, 0xaf, 0x8b, 0x9e, 0x46, 0x8d, 0x52, 0xb2, 0x91,
	0x25, 0x32, 0x3b, 0xa0, 0x2f, 0x32, 0x64, 0x89, 0xc5, 0xb9, 0x1d, 0x0a, 0x4d, 0x64, 0xf5, 0x6d,
	0x26, 0x73, 0x9a, 0x25, 0x4c, 0x8d, 0x83, 0x7f, 0x95, 0xa0, 0x32, 0xa7, 0x31, 0xc2, 0xd4, 0xb9,
	0xb8, 0x08, 0x24, 0xcb, 0x9c, 0x66, 0x08, 0x53, 0xeb, 0x61, 0x77, 0x81, 0xe5, 0x40, 0x51, 0xb2,
	0x91, 0x2d, 0x16, 0xe7, 0x32, 0x8f, 0x37, 0x0d, 0x9b, 0x9c, 0xe4, 0x97, 0x07, 0xff, 0x1d, 0x09,
	0xdc, 0x74, 0xa7, 0xfa, 0x65, 0xa9, 0xaf, 0x0c, 0x6c, 0x77, 0x43, 0x0a, 0xfb, 0x46, 0x61, 0xe7,
	0x0f, 0xbb, 0xa1, 0xe4, 0xc4, 0x28, 0x3c, 0x04, 0x30, 0x8b, 0x95, 0x6f, 0x28, 0x6b, 0x56, 0x3e,
	0x06, 0xd8, 0x23, 0x00, 0x2a, 0x35, 0xe9, 0x0d, 0x4a, 0xaf, 0x44, 0x9c, 0xd0, 0xc1, 0x35, 0x42,
	0xcf, 0xae, 0x13, 0xda, 0x2c, 0xd8, 0x08, 0x6d, 0x85, 0x8d, 0x46, 0x61, 0x77, 0x20, 0x28, 0x32,
	0xbc, 0x37, 0x2b, 0x89, 0xf5, 0x92, 0x43, 0x9c, 0xfe, 0x44, 0xf1, 0x7c, 0x79, 0xfd, 0xa5, 0x33,
	0x98, 0xd6, 0xbc, 0x52, 0x76, 0xdf, 0x64, 0x27, 0xaf, 0x00, 0x8e, 0x04, 0x5e, 0xdf, 0xdf, 0x3e,
	0x81, 0xff, 0x67, 0xd9, 0x95, 0xf6, 0x40, 0xd0, 0x4c, 0xbe, 0xc3, 0xd6, 0x87, 0xa5, 0xea, 0x2e,
	0x8c, 0xf4, 0x2f, 0x3b, 0x5a, 0x99, 0xc6, 0x13, 0x37, 0x24, 0xb2, 0xe9, 0x1c, 0xf0, 0x60, 0xad,
	0xf0, 0xc6, 0x41, 0x9a, 0xaa, 0xa5, 0xd5, 0x1b, 0x4d, 0x7c, 0xb6, 0xe5, 0xb9, 0x7b, 0xaf, 0xc8,
	0xc6, 0xbd, 0xe1, 0xef, 0xc7, 0xe2, 0x52, 0x59, 0x75, 0x07, 0x3f, 0xf9, 0x04, 0x77, 0xa8, 0xfb,
	0x59, 0xab, 0xea, 0x73, 0x5e, 0xd8, 0xf6, 0x92, 0x6b, 0xe5, 0xda, 0xa3, 0x3d, 0x60, 0xfd, 0x1b,
	0xb0, 0x93, 0x3f, 0xb0, 0xf3, 0x61, 0x28, 0x54, 0xc7, 0x52, 0x89, 0xe0, 0xdd, 0x40, 0xf0, 0xd7,
	0x09, 0x58, 0x7f, 0x8a, 0xe2, 0x19, 0xa5, 0xc8, 0x4e, 0x3e, 0xc3, 0xb6, 0xa5, 0x9a, 0x3d, 0xfd,
	0x2b, 0x2e, 0x87, 0xe8, 0x48, 0x58, 0x05, 0xd8, 0x63, 0x98, 0xe2, 0x97, 0x8a, 0x80, 0x9b, 0x87,
	0x77, 0x0f, 0xec, 0x27, 0xf1, 0xc0, 0x7d, 0x02, 0x53, 0x4a, 0xb3, 0xe7, 0x10, 0x98, 0xd7, 0x84,
	0x3a, 0x6c, 0x1e, 0x3e, 0x18, 0x0a, 0x57, 0xdf, 0xa1, 0xd4, 0x16, 0x25, 0xc7, 0x78, 0x29, 0x18,
	0x3f, 0x29, 0x7a, 0x8d, 0x3d, 0xca, 0xa2, 0xd7, 0xb1, 0xb7, 0x37, 0xb9, 0xa1, 0x07, 0xa6, 0x71,
	0xe9, 0xba, 0xd1, 0xdc, 0xbd, 0x6d, 0xc6, 0x49, 0xce, 0xc6, 0x43, 0x25, 0xd8, 0xb3, 0x35, 0xd8,
	0xea, 0xff, 0x18, 0xaf, 0xf9, 0x56, 0xe0, 0x5b, 0x77, 0xc5, 0x84, 0x7b, 0xba, 0x86, 0xbb, 0xb7,
	0x82, 0x73, 0x87, 0x7e, 0x2b, 0xec, 0x1d, 0xfc, 0x3f, 0x68, 0x49, 0xbc, 0x27, 0x6b, 0x3c, 0xb6,
	0xc2, 0xb3, 0x55, 0xb7, 0xe1, 0x44, 0x40, 0xc5, 0x2f, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x1f,
	0x35, 0xed, 0x4a, 0xaa, 0x06, 0x00, 0x00,
}
