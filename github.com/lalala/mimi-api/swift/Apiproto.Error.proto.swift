/// Generated by the Protocol Buffers 3.2.0 compiler.  DO NOT EDIT!
/// Protobuf-swift version: 3.0.13
/// Source file "error.proto"
/// Syntax "Proto3"

import Foundation
import ProtocolBuffers


public extension Apiproto{}

public extension Apiproto {
    public struct ErrorRoot {
        public static let `default` = ErrorRoot()
        public var extensionRegistry:ExtensionRegistry

        init() {
            extensionRegistry = ExtensionRegistry()
            registerAllExtensions(registry: extensionRegistry)
        }
        public func registerAllExtensions(registry: ExtensionRegistry) {
        }
    }



    //Enum type declaration start 

    public enum RespCode:Int32, CustomDebugStringConvertible, CustomStringConvertible, Hashable {
        /// 成功
        case success = 0

        /// 服务器错误
        case fail = -1

        /// 需要升级客户端, 返回值为StringValue， 如果不为空则为App下载地址
        case upgrade = -2
        public func toString() -> String {
            switch self {
            case .success: return "Success"
            case .fail: return "Fail"
            case .upgrade: return "Upgrade"
            }
        }
        public static func fromString(str:String) throws -> Apiproto.RespCode {
            switch str {
            case "Success":    return .success
            case "Fail":    return .fail
            case "Upgrade":    return .upgrade
            default: throw ProtocolBuffersError.invalidProtocolBuffer("Conversion String to Enum has failed.")
            }
        }
        public var debugDescription:String { return getDescription() }
        public var description:String { return getDescription() }
        private func getDescription() -> String { 
            switch self {
            case .success: return ".success"
            case .fail: return ".fail"
            case .upgrade: return ".upgrade"
            }
        }
        public var hashValue:Int {
            return self.rawValue.hashValue
        }
        public static func ==(lhs:RespCode, rhs:RespCode) -> Bool {
            return lhs.hashValue == rhs.hashValue
        }
    }

    //Enum type declaration end 

}

// @@protoc_insertion_point(global_scope)
