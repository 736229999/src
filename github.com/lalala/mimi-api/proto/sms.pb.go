// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sms.proto

package apiproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SmsType int32

const (
	SmsType_Regist       SmsType = 0
	SmsType_ResetPwd     SmsType = 1
	SmsType_BindPhone    SmsType = 2
	SmsType_BindBankcard SmsType = 3
	SmsType_ForgotPayPwd SmsType = 4
)

var SmsType_name = map[int32]string{
	0: "Regist",
	1: "ResetPwd",
	2: "BindPhone",
	3: "BindBankcard",
	4: "ForgotPayPwd",
}
var SmsType_value = map[string]int32{
	"Regist":       0,
	"ResetPwd":     1,
	"BindPhone":    2,
	"BindBankcard": 3,
	"ForgotPayPwd": 4,
}

func (x SmsType) String() string {
	return proto.EnumName(SmsType_name, int32(x))
}
func (SmsType) EnumDescriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

type SmsRequest struct {
	Phone string  `protobuf:"bytes,1,opt,name=phone" json:"phone"`
	Type  SmsType `protobuf:"varint,2,opt,name=type,enum=apiproto.SmsType" json:"type"`
}

func (m *SmsRequest) Reset()                    { *m = SmsRequest{} }
func (m *SmsRequest) String() string            { return proto.CompactTextString(m) }
func (*SmsRequest) ProtoMessage()               {}
func (*SmsRequest) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

func (m *SmsRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *SmsRequest) GetType() SmsType {
	if m != nil {
		return m.Type
	}
	return SmsType_Regist
}

func init() {
	proto.RegisterType((*SmsRequest)(nil), "apiproto.SmsRequest")
	proto.RegisterEnum("apiproto.SmsType", SmsType_name, SmsType_value)
}

func init() { proto.RegisterFile("sms.proto", fileDescriptor13) }

var fileDescriptor13 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8d, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0x4d, 0xff, 0xd9, 0x0e, 0x55, 0x62, 0xf0, 0xd0, 0x63, 0x11, 0x84, 0xe2, 0xa1, 0x07,
	0xfd, 0x06, 0x39, 0x08, 0xde, 0x42, 0x2a, 0xde, 0xa3, 0x1d, 0x6a, 0x91, 0x34, 0xb1, 0x93, 0x65,
	0xe9, 0xb7, 0x5f, 0xd2, 0xdd, 0xbd, 0xcd, 0x7b, 0xc3, 0xef, 0xfd, 0xa0, 0x22, 0x4b, 0xbd, 0x5f,
	0x5d, 0x70, 0xa2, 0x34, 0x7e, 0xde, 0xaf, 0xa7, 0x0f, 0x80, 0xc1, 0x92, 0xc6, 0xff, 0x03, 0x52,
	0x10, 0x8f, 0x90, 0xfb, 0x5f, 0xb7, 0x60, 0xc3, 0x5a, 0xd6, 0x55, 0xfa, 0x1c, 0xc4, 0x33, 0x64,
	0x61, 0xf3, 0xd8, 0x24, 0x2d, 0xeb, 0xee, 0x5f, 0x1f, 0xfa, 0x2b, 0xdc, 0x0f, 0x96, 0x3e, 0x37,
	0x8f, 0x7a, 0x7f, 0xbf, 0x7c, 0xc1, 0xed, 0xa5, 0x10, 0x00, 0x85, 0xc6, 0x69, 0xa6, 0xc0, 0x6f,
	0x44, 0x0d, 0xa5, 0x46, 0xc2, 0xa0, 0x8e, 0x23, 0x67, 0xe2, 0x0e, 0x2a, 0x39, 0x2f, 0xa3, 0x8a,
	0xc3, 0x3c, 0x11, 0x1c, 0xea, 0x18, 0xa5, 0x59, 0xfe, 0x7e, 0xcc, 0x3a, 0xf2, 0x34, 0x36, 0xef,
	0x6e, 0x9d, 0x5c, 0x50, 0x66, 0x8b, 0x48, 0x26, 0x6b, 0xc8, 0x55, 0xd4, 0xc9, 0x74, 0xb0, 0xf4,
	0x5d, 0xec, 0xea, 0xb7, 0x53, 0x00, 0x00, 0x00, 0xff, 0xff, 0x13, 0x2a, 0x3a, 0x52, 0xce, 0x00,
	0x00, 0x00,
}
