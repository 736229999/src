// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fund.proto

package apiproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Bankname int32

const (
	Bankname_UnknownBank  Bankname = 0
	Bankname_IcbcBank     Bankname = 1
	Bankname_CebBank      Bankname = 2
	Bankname_CgbChinaBank Bankname = 3
	Bankname_HxbBank      Bankname = 4
	Bankname_CcbBank      Bankname = 5
	Bankname_CommBank     Bankname = 6
	Bankname_CmbcBank     Bankname = 7
	Bankname_AbcChinaBank Bankname = 8
	Bankname_PinganBank   Bankname = 9
	Bankname_SpdBank      Bankname = 10
	Bankname_CibBank      Bankname = 11
	Bankname_PsbcBank     Bankname = 12
	Bankname_CmbChinaBank Bankname = 13
	Bankname_BocBank      Bankname = 14
	Bankname_CityBank     Bankname = 15
)

var Bankname_name = map[int32]string{
	0:  "UnknownBank",
	1:  "IcbcBank",
	2:  "CebBank",
	3:  "CgbChinaBank",
	4:  "HxbBank",
	5:  "CcbBank",
	6:  "CommBank",
	7:  "CmbcBank",
	8:  "AbcChinaBank",
	9:  "PinganBank",
	10: "SpdBank",
	11: "CibBank",
	12: "PsbcBank",
	13: "CmbChinaBank",
	14: "BocBank",
	15: "CityBank",
}
var Bankname_value = map[string]int32{
	"UnknownBank":  0,
	"IcbcBank":     1,
	"CebBank":      2,
	"CgbChinaBank": 3,
	"HxbBank":      4,
	"CcbBank":      5,
	"CommBank":     6,
	"CmbcBank":     7,
	"AbcChinaBank": 8,
	"PinganBank":   9,
	"SpdBank":      10,
	"CibBank":      11,
	"PsbcBank":     12,
	"CmbChinaBank": 13,
	"BocBank":      14,
	"CityBank":     15,
}

func (x Bankname) String() string {
	return proto.EnumName(Bankname_name, int32(x))
}
func (Bankname) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type TicketStatus int32

const (
	TicketStatus_WaitUse   TicketStatus = 0
	TicketStatus_WaitValid TicketStatus = 1
	TicketStatus_Used      TicketStatus = 2
	TicketStatus_Expired   TicketStatus = 3
)

var TicketStatus_name = map[int32]string{
	0: "WaitUse",
	1: "WaitValid",
	2: "Used",
	3: "Expired",
}
var TicketStatus_value = map[string]int32{
	"WaitUse":   0,
	"WaitValid": 1,
	"Used":      2,
	"Expired":   3,
}

func (x TicketStatus) String() string {
	return proto.EnumName(TicketStatus_name, int32(x))
}
func (TicketStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

type FundHistoryPage_ChangeType int32

const (
	FundHistoryPage_All      FundHistoryPage_ChangeType = 0
	FundHistoryPage_Recharge FundHistoryPage_ChangeType = 1
	FundHistoryPage_Withdraw FundHistoryPage_ChangeType = 2
	FundHistoryPage_Buycai   FundHistoryPage_ChangeType = 3
	FundHistoryPage_Win      FundHistoryPage_ChangeType = 4
)

var FundHistoryPage_ChangeType_name = map[int32]string{
	0: "All",
	1: "Recharge",
	2: "Withdraw",
	3: "Buycai",
	4: "Win",
}
var FundHistoryPage_ChangeType_value = map[string]int32{
	"All":      0,
	"Recharge": 1,
	"Withdraw": 2,
	"Buycai":   3,
	"Win":      4,
}

func (x FundHistoryPage_ChangeType) String() string {
	return proto.EnumName(FundHistoryPage_ChangeType_name, int32(x))
}
func (FundHistoryPage_ChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor7, []int{6, 0}
}

type FundHistoryPage_TimeRange int32

const (
	FundHistoryPage_AllTime    FundHistoryPage_TimeRange = 0
	FundHistoryPage_Today      FundHistoryPage_TimeRange = 1
	FundHistoryPage_Week       FundHistoryPage_TimeRange = 2
	FundHistoryPage_Month      FundHistoryPage_TimeRange = 3
	FundHistoryPage_ThreeMonth FundHistoryPage_TimeRange = 4
)

var FundHistoryPage_TimeRange_name = map[int32]string{
	0: "AllTime",
	1: "Today",
	2: "Week",
	3: "Month",
	4: "ThreeMonth",
}
var FundHistoryPage_TimeRange_value = map[string]int32{
	"AllTime":    0,
	"Today":      1,
	"Week":       2,
	"Month":      3,
	"ThreeMonth": 4,
}

func (x FundHistoryPage_TimeRange) String() string {
	return proto.EnumName(FundHistoryPage_TimeRange_name, int32(x))
}
func (FundHistoryPage_TimeRange) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{6, 1} }

type FundInfo struct {
	Total   float64 `protobuf:"fixed64,1,opt,name=total" json:"total"`
	Balance float64 `protobuf:"fixed64,2,opt,name=balance" json:"balance"`
	Cai     float64 `protobuf:"fixed64,3,opt,name=cai" json:"cai"`
	Freeze  float64 `protobuf:"fixed64,4,opt,name=freeze" json:"freeze"`
	Credits int32   `protobuf:"varint,5,opt,name=credits" json:"credits"`
	Kxd     int32   `protobuf:"varint,6,opt,name=kxd" json:"kxd"`
}

func (m *FundInfo) Reset()                    { *m = FundInfo{} }
func (m *FundInfo) String() string            { return proto.CompactTextString(m) }
func (*FundInfo) ProtoMessage()               {}
func (*FundInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *FundInfo) GetTotal() float64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *FundInfo) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *FundInfo) GetCai() float64 {
	if m != nil {
		return m.Cai
	}
	return 0
}

func (m *FundInfo) GetFreeze() float64 {
	if m != nil {
		return m.Freeze
	}
	return 0
}

func (m *FundInfo) GetCredits() int32 {
	if m != nil {
		return m.Credits
	}
	return 0
}

func (m *FundInfo) GetKxd() int32 {
	if m != nil {
		return m.Kxd
	}
	return 0
}

type Bankcard struct {
	Id       int64    `protobuf:"varint,1,opt,name=id" json:"id"`
	Cardno   string   `protobuf:"bytes,2,opt,name=cardno" json:"cardno"`
	Bankname Bankname `protobuf:"varint,3,opt,name=bankname,enum=apiproto.Bankname" json:"bankname"`
	Cardtype string   `protobuf:"bytes,4,opt,name=cardtype" json:"cardtype"`
}

func (m *Bankcard) Reset()                    { *m = Bankcard{} }
func (m *Bankcard) String() string            { return proto.CompactTextString(m) }
func (*Bankcard) ProtoMessage()               {}
func (*Bankcard) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *Bankcard) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Bankcard) GetCardno() string {
	if m != nil {
		return m.Cardno
	}
	return ""
}

func (m *Bankcard) GetBankname() Bankname {
	if m != nil {
		return m.Bankname
	}
	return Bankname_UnknownBank
}

func (m *Bankcard) GetCardtype() string {
	if m != nil {
		return m.Cardtype
	}
	return ""
}

type AddBankcardRequest struct {
	Phone    string   `protobuf:"bytes,1,opt,name=phone" json:"phone"`
	SmsCode  string   `protobuf:"bytes,2,opt,name=sms_code,json=smsCode" json:"sms_code"`
	Cardno   string   `protobuf:"bytes,3,opt,name=cardno" json:"cardno"`
	Bankname Bankname `protobuf:"varint,4,opt,name=bankname,enum=apiproto.Bankname" json:"bankname"`
}

func (m *AddBankcardRequest) Reset()                    { *m = AddBankcardRequest{} }
func (m *AddBankcardRequest) String() string            { return proto.CompactTextString(m) }
func (*AddBankcardRequest) ProtoMessage()               {}
func (*AddBankcardRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *AddBankcardRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AddBankcardRequest) GetSmsCode() string {
	if m != nil {
		return m.SmsCode
	}
	return ""
}

func (m *AddBankcardRequest) GetCardno() string {
	if m != nil {
		return m.Cardno
	}
	return ""
}

func (m *AddBankcardRequest) GetBankname() Bankname {
	if m != nil {
		return m.Bankname
	}
	return Bankname_UnknownBank
}

type BuycaiTicket struct {
	Id           int64        `protobuf:"varint,1,opt,name=id" json:"id"`
	UseBase      int32        `protobuf:"varint,2,opt,name=use_base,json=useBase" json:"use_base"`
	UseSub       int32        `protobuf:"varint,3,opt,name=use_sub,json=useSub" json:"use_sub"`
	MaxStack     int32        `protobuf:"varint,4,opt,name=max_stack,json=maxStack" json:"max_stack"`
	ValidStart   int64        `protobuf:"varint,5,opt,name=valid_start,json=validStart" json:"valid_start"`
	ValidEnd     int64        `protobuf:"varint,6,opt,name=valid_end,json=validEnd" json:"valid_end"`
	Addtime      int64        `protobuf:"varint,7,opt,name=addtime" json:"addtime"`
	Title        string       `protobuf:"bytes,8,opt,name=title" json:"title"`
	RestrictDesc string       `protobuf:"bytes,9,opt,name=restrict_desc,json=restrictDesc" json:"restrict_desc"`
	RestrictType int32        `protobuf:"varint,10,opt,name=restrict_type,json=restrictType" json:"restrict_type"`
	RestrictId   int32        `protobuf:"varint,11,opt,name=restrict_id,json=restrictId" json:"restrict_id"`
	Status       TicketStatus `protobuf:"varint,12,opt,name=status,enum=apiproto.TicketStatus" json:"status"`
}

func (m *BuycaiTicket) Reset()                    { *m = BuycaiTicket{} }
func (m *BuycaiTicket) String() string            { return proto.CompactTextString(m) }
func (*BuycaiTicket) ProtoMessage()               {}
func (*BuycaiTicket) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *BuycaiTicket) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuycaiTicket) GetUseBase() int32 {
	if m != nil {
		return m.UseBase
	}
	return 0
}

func (m *BuycaiTicket) GetUseSub() int32 {
	if m != nil {
		return m.UseSub
	}
	return 0
}

func (m *BuycaiTicket) GetMaxStack() int32 {
	if m != nil {
		return m.MaxStack
	}
	return 0
}

func (m *BuycaiTicket) GetValidStart() int64 {
	if m != nil {
		return m.ValidStart
	}
	return 0
}

func (m *BuycaiTicket) GetValidEnd() int64 {
	if m != nil {
		return m.ValidEnd
	}
	return 0
}

func (m *BuycaiTicket) GetAddtime() int64 {
	if m != nil {
		return m.Addtime
	}
	return 0
}

func (m *BuycaiTicket) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BuycaiTicket) GetRestrictDesc() string {
	if m != nil {
		return m.RestrictDesc
	}
	return ""
}

func (m *BuycaiTicket) GetRestrictType() int32 {
	if m != nil {
		return m.RestrictType
	}
	return 0
}

func (m *BuycaiTicket) GetRestrictId() int32 {
	if m != nil {
		return m.RestrictId
	}
	return 0
}

func (m *BuycaiTicket) GetStatus() TicketStatus {
	if m != nil {
		return m.Status
	}
	return TicketStatus_WaitUse
}

type BuycaiTicketInfo struct {
	Tickets []*BuycaiTicket `protobuf:"bytes,1,rep,name=tickets" json:"tickets"`
}

func (m *BuycaiTicketInfo) Reset()                    { *m = BuycaiTicketInfo{} }
func (m *BuycaiTicketInfo) String() string            { return proto.CompactTextString(m) }
func (*BuycaiTicketInfo) ProtoMessage()               {}
func (*BuycaiTicketInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *BuycaiTicketInfo) GetTickets() []*BuycaiTicket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

// ---------------------------------------------------------------------------------------------------------------
// 资金变动记录
type FundChangeRecord struct {
	Title           string  `protobuf:"bytes,1,opt,name=title" json:"title"`
	Desc            string  `protobuf:"bytes,2,opt,name=desc" json:"desc"`
	Time            int64   `protobuf:"varint,3,opt,name=time" json:"time"`
	Val             float64 `protobuf:"fixed64,4,opt,name=val" json:"val"`
	Remain          float64 `protobuf:"fixed64,5,opt,name=remain" json:"remain"`
	Name            string  `protobuf:"bytes,6,opt,name=name" json:"name"`
	UserOrderId     int64   `protobuf:"varint,7,opt,name=user_order_id,json=userOrderId" json:"user_order_id"`
	VendorOrderId   int64   `protobuf:"varint,8,opt,name=vendor_order_id,json=vendorOrderId" json:"vendor_order_id"`
	WithdrawApplyId int64   `protobuf:"varint,9,opt,name=withdraw_apply_id,json=withdrawApplyId" json:"withdraw_apply_id"`
	Direct          int32   `protobuf:"varint,10,opt,name=direct" json:"direct"`
}

func (m *FundChangeRecord) Reset()                    { *m = FundChangeRecord{} }
func (m *FundChangeRecord) String() string            { return proto.CompactTextString(m) }
func (*FundChangeRecord) ProtoMessage()               {}
func (*FundChangeRecord) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *FundChangeRecord) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *FundChangeRecord) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *FundChangeRecord) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *FundChangeRecord) GetVal() float64 {
	if m != nil {
		return m.Val
	}
	return 0
}

func (m *FundChangeRecord) GetRemain() float64 {
	if m != nil {
		return m.Remain
	}
	return 0
}

func (m *FundChangeRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FundChangeRecord) GetUserOrderId() int64 {
	if m != nil {
		return m.UserOrderId
	}
	return 0
}

func (m *FundChangeRecord) GetVendorOrderId() int64 {
	if m != nil {
		return m.VendorOrderId
	}
	return 0
}

func (m *FundChangeRecord) GetWithdrawApplyId() int64 {
	if m != nil {
		return m.WithdrawApplyId
	}
	return 0
}

func (m *FundChangeRecord) GetDirect() int32 {
	if m != nil {
		return m.Direct
	}
	return 0
}

type FundHistoryPage struct {
	Type  FundHistoryPage_ChangeType `protobuf:"varint,1,opt,name=type,enum=apiproto.FundHistoryPage_ChangeType" json:"type"`
	Page  int32                      `protobuf:"varint,2,opt,name=page" json:"page"`
	Range FundHistoryPage_TimeRange  `protobuf:"varint,3,opt,name=range,enum=apiproto.FundHistoryPage_TimeRange" json:"range"`
}

func (m *FundHistoryPage) Reset()                    { *m = FundHistoryPage{} }
func (m *FundHistoryPage) String() string            { return proto.CompactTextString(m) }
func (*FundHistoryPage) ProtoMessage()               {}
func (*FundHistoryPage) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *FundHistoryPage) GetType() FundHistoryPage_ChangeType {
	if m != nil {
		return m.Type
	}
	return FundHistoryPage_All
}

func (m *FundHistoryPage) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *FundHistoryPage) GetRange() FundHistoryPage_TimeRange {
	if m != nil {
		return m.Range
	}
	return FundHistoryPage_AllTime
}

type FundHistory struct {
	Recharge float64             `protobuf:"fixed64,1,opt,name=recharge" json:"recharge"`
	Withdraw float64             `protobuf:"fixed64,2,opt,name=withdraw" json:"withdraw"`
	Buycai   float64             `protobuf:"fixed64,3,opt,name=buycai" json:"buycai"`
	Win      float64             `protobuf:"fixed64,4,opt,name=win" json:"win"`
	PageSize int32               `protobuf:"varint,5,opt,name=page_size,json=pageSize" json:"page_size"`
	List     []*FundChangeRecord `protobuf:"bytes,6,rep,name=list" json:"list"`
}

func (m *FundHistory) Reset()                    { *m = FundHistory{} }
func (m *FundHistory) String() string            { return proto.CompactTextString(m) }
func (*FundHistory) ProtoMessage()               {}
func (*FundHistory) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *FundHistory) GetRecharge() float64 {
	if m != nil {
		return m.Recharge
	}
	return 0
}

func (m *FundHistory) GetWithdraw() float64 {
	if m != nil {
		return m.Withdraw
	}
	return 0
}

func (m *FundHistory) GetBuycai() float64 {
	if m != nil {
		return m.Buycai
	}
	return 0
}

func (m *FundHistory) GetWin() float64 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *FundHistory) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *FundHistory) GetList() []*FundChangeRecord {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*FundInfo)(nil), "apiproto.FundInfo")
	proto.RegisterType((*Bankcard)(nil), "apiproto.Bankcard")
	proto.RegisterType((*AddBankcardRequest)(nil), "apiproto.AddBankcardRequest")
	proto.RegisterType((*BuycaiTicket)(nil), "apiproto.BuycaiTicket")
	proto.RegisterType((*BuycaiTicketInfo)(nil), "apiproto.BuycaiTicketInfo")
	proto.RegisterType((*FundChangeRecord)(nil), "apiproto.FundChangeRecord")
	proto.RegisterType((*FundHistoryPage)(nil), "apiproto.FundHistoryPage")
	proto.RegisterType((*FundHistory)(nil), "apiproto.FundHistory")
	proto.RegisterEnum("apiproto.Bankname", Bankname_name, Bankname_value)
	proto.RegisterEnum("apiproto.TicketStatus", TicketStatus_name, TicketStatus_value)
	proto.RegisterEnum("apiproto.FundHistoryPage_ChangeType", FundHistoryPage_ChangeType_name, FundHistoryPage_ChangeType_value)
	proto.RegisterEnum("apiproto.FundHistoryPage_TimeRange", FundHistoryPage_TimeRange_name, FundHistoryPage_TimeRange_value)
}

func init() { proto.RegisterFile("fund.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 1018 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xcd, 0x6e, 0xe3, 0x36,
	0x10, 0x5e, 0x59, 0xfe, 0x91, 0xc7, 0x76, 0xa2, 0x12, 0xc5, 0x56, 0xbb, 0x3d, 0x74, 0xa1, 0x2d,
	0x8a, 0x45, 0x0e, 0x46, 0xd1, 0x5e, 0xda, 0xa3, 0xed, 0xdd, 0x45, 0x72, 0x28, 0x1a, 0xc8, 0x49,
	0x73, 0x34, 0x28, 0x91, 0xb1, 0x09, 0x4b, 0x94, 0x2b, 0x52, 0x49, 0x9c, 0x43, 0xdf, 0xa0, 0x40,
	0x9f, 0xa0, 0x4f, 0xd0, 0x47, 0xe8, 0x6b, 0x15, 0xe8, 0xb1, 0x98, 0xa1, 0xe4, 0x78, 0x5b, 0x2c,
	0x7a, 0xe3, 0xf7, 0xf1, 0xe3, 0xf8, 0xd3, 0x37, 0x43, 0x1a, 0xe0, 0xb6, 0xd6, 0x62, 0xba, 0xab,
	0x4a, 0x5b, 0xb2, 0x80, 0xef, 0x14, 0xad, 0xe2, 0xdf, 0x3c, 0x08, 0xde, 0xd7, 0x5a, 0x5c, 0xe8,
	0xdb, 0x92, 0x7d, 0x0a, 0x3d, 0x5b, 0x5a, 0x9e, 0x47, 0xde, 0x2b, 0xef, 0x8d, 0x97, 0x38, 0xc0,
	0x22, 0x18, 0xa4, 0x3c, 0xe7, 0x3a, 0x93, 0x51, 0x87, 0xf8, 0x16, 0xb2, 0x10, 0xfc, 0x8c, 0xab,
	0xc8, 0x27, 0x16, 0x97, 0xec, 0x39, 0xf4, 0x6f, 0x2b, 0x29, 0x1f, 0x65, 0xd4, 0x25, 0xb2, 0x41,
	0x58, 0x23, 0xab, 0xa4, 0x50, 0xd6, 0x44, 0xbd, 0x57, 0xde, 0x9b, 0x5e, 0xd2, 0x42, 0xac, 0xb1,
	0x7d, 0x10, 0x51, 0x9f, 0x58, 0x5c, 0xc6, 0xbf, 0x40, 0x30, 0xe7, 0x7a, 0x9b, 0xf1, 0x4a, 0xb0,
	0x13, 0xe8, 0x28, 0x41, 0x76, 0xfc, 0xa4, 0xa3, 0x04, 0xd6, 0x47, 0x5e, 0x97, 0x64, 0x65, 0x98,
	0x34, 0x88, 0x4d, 0x21, 0x48, 0xb9, 0xde, 0x6a, 0x5e, 0x48, 0xb2, 0x73, 0xf2, 0x0d, 0x9b, 0xb6,
	0xdf, 0x38, 0x9d, 0x37, 0x3b, 0xc9, 0x41, 0xc3, 0x5e, 0x42, 0x80, 0x27, 0xed, 0x7e, 0xe7, 0x9c,
	0x0e, 0x93, 0x03, 0x8e, 0x7f, 0xf5, 0x80, 0xcd, 0x84, 0x68, 0x3d, 0x24, 0xf2, 0xe7, 0x5a, 0x1a,
	0x8b, 0xe1, 0xec, 0x36, 0xa5, 0x96, 0xe4, 0x66, 0x98, 0x38, 0xc0, 0x5e, 0x40, 0x60, 0x0a, 0xb3,
	0xca, 0x4a, 0x21, 0x1b, 0x4b, 0x03, 0x53, 0x98, 0x45, 0x29, 0xe4, 0x91, 0x57, 0xff, 0xa3, 0x5e,
	0xbb, 0xff, 0xef, 0x35, 0xfe, 0xbb, 0x03, 0xe3, 0x79, 0xbd, 0xcf, 0xb8, 0xba, 0x52, 0xd9, 0x56,
	0xda, 0xff, 0x84, 0xf2, 0x02, 0x82, 0xda, 0xc8, 0x55, 0xca, 0x8d, 0xf3, 0xd0, 0x4b, 0x06, 0xb5,
	0x91, 0x73, 0x6e, 0x24, 0xfb, 0x0c, 0x70, 0xb9, 0x32, 0x75, 0x4a, 0x26, 0x7a, 0x49, 0xbf, 0x36,
	0x72, 0x59, 0xa7, 0xec, 0x73, 0x18, 0x16, 0xfc, 0x61, 0x65, 0x2c, 0xcf, 0xb6, 0xe4, 0xa2, 0x97,
	0x04, 0x05, 0x7f, 0x58, 0x22, 0x66, 0x5f, 0xc0, 0xe8, 0x8e, 0xe7, 0x4a, 0xe0, 0x76, 0x65, 0xa9,
	0x63, 0x7e, 0x02, 0x44, 0x2d, 0x91, 0xc1, 0xd3, 0x4e, 0x20, 0xb5, 0x6b, 0x9d, 0x9f, 0x04, 0x44,
	0xbc, 0xd3, 0x02, 0x7b, 0xcd, 0x85, 0xb0, 0xaa, 0x90, 0xd1, 0x80, 0xb6, 0x5a, 0x48, 0xf3, 0xa5,
	0x6c, 0x2e, 0xa3, 0xc0, 0x45, 0x48, 0x80, 0xbd, 0x86, 0x49, 0x25, 0x8d, 0xad, 0x54, 0x66, 0x57,
	0x42, 0x9a, 0x2c, 0x1a, 0xd2, 0xee, 0xb8, 0x25, 0xdf, 0x4a, 0x93, 0x7d, 0x20, 0xa2, 0xae, 0x01,
	0x79, 0x3e, 0x88, 0xae, 0xf6, 0x3b, 0x89, 0xbe, 0x0f, 0x22, 0x25, 0xa2, 0x11, 0x49, 0xa0, 0xa5,
	0x2e, 0x04, 0x9b, 0x42, 0xdf, 0x58, 0x6e, 0x6b, 0x13, 0x8d, 0x29, 0xf8, 0xe7, 0x4f, 0xc1, 0xbb,
	0x6c, 0x97, 0xb4, 0x9b, 0x34, 0xaa, 0xf8, 0x2d, 0x84, 0xc7, 0xc9, 0xd3, 0x25, 0xf9, 0x1a, 0x06,
	0x96, 0x90, 0x89, 0xbc, 0x57, 0xfe, 0x9b, 0xd1, 0x71, 0x91, 0x63, 0x71, 0xd2, 0xca, 0xe2, 0xdf,
	0x3b, 0x10, 0xe2, 0x1d, 0x5b, 0x6c, 0xb8, 0x5e, 0xcb, 0x44, 0x66, 0x65, 0x25, 0x9e, 0xb2, 0xf0,
	0x8e, 0xb3, 0x60, 0xd0, 0xa5, 0x08, 0xdc, 0x28, 0xd1, 0x1a, 0x39, 0x0a, 0xd3, 0xa7, 0x30, 0x69,
	0x8d, 0xb7, 0xe6, 0x8e, 0xe7, 0xcd, 0x25, 0xc3, 0x25, 0x4e, 0x5b, 0x25, 0x0b, 0xae, 0x34, 0xb5,
	0xcb, 0x4b, 0x1a, 0x84, 0xa7, 0x69, 0xd2, 0xfa, 0xae, 0x22, 0x4d, 0x7f, 0x0c, 0x93, 0xda, 0xc8,
	0x6a, 0x55, 0x56, 0x42, 0x56, 0x98, 0x94, 0xeb, 0xd3, 0x08, 0xc9, 0x1f, 0x91, 0xbb, 0x10, 0xec,
	0x2b, 0x38, 0xbd, 0x93, 0x5a, 0x94, 0x47, 0xaa, 0x80, 0x54, 0x13, 0x47, 0xb7, 0xba, 0x33, 0xf8,
	0xe4, 0x5e, 0xd9, 0x8d, 0xa8, 0xf8, 0xfd, 0x8a, 0xef, 0x76, 0xf9, 0x1e, 0x95, 0x43, 0x52, 0x9e,
	0xb6, 0x1b, 0x33, 0xe4, 0x2f, 0xe8, 0xf6, 0x0a, 0x55, 0xc9, 0xcc, 0x36, 0xdd, 0x6b, 0x50, 0xfc,
	0x47, 0x07, 0x4e, 0x31, 0xa0, 0x73, 0x65, 0x6c, 0x59, 0xed, 0x2f, 0xf9, 0x5a, 0xb2, 0xef, 0xa0,
	0x4b, 0x7d, 0xf6, 0xa8, 0x51, 0x5f, 0x3e, 0x65, 0xfc, 0x2f, 0xe1, 0xd4, 0xa5, 0x8a, 0xfd, 0x4f,
	0xe8, 0x04, 0x7e, 0xf1, 0x8e, 0xaf, 0xdb, 0xab, 0x40, 0x6b, 0xf6, 0x3d, 0xf4, 0x2a, 0x94, 0x35,
	0x8f, 0xc3, 0xeb, 0x8f, 0x97, 0xbb, 0x52, 0x85, 0x4c, 0xa8, 0x4f, 0xee, 0x44, 0xfc, 0x1e, 0xe0,
	0xe9, 0x27, 0xd8, 0x00, 0xfc, 0x59, 0x9e, 0x87, 0xcf, 0xd8, 0x18, 0x82, 0x44, 0x66, 0x1b, 0x5e,
	0xad, 0x65, 0xe8, 0x21, 0xba, 0x69, 0x3e, 0x36, 0xec, 0x30, 0x80, 0xbe, 0x9b, 0x84, 0xd0, 0xc7,
	0x03, 0x37, 0x4a, 0x87, 0xdd, 0xf8, 0x1c, 0x86, 0x87, 0xda, 0x6c, 0x04, 0x83, 0x59, 0x9e, 0x23,
	0x0e, 0x9f, 0xb1, 0x21, 0xf4, 0xae, 0x4a, 0xc1, 0xf7, 0xa1, 0xc7, 0x02, 0xe8, 0xde, 0x48, 0xb9,
	0x0d, 0x3b, 0x48, 0xfe, 0x50, 0x6a, 0xbb, 0x09, 0x7d, 0x76, 0x02, 0x70, 0xb5, 0xa9, 0xa4, 0x74,
	0xb8, 0x1b, 0xff, 0xe9, 0xc1, 0xe8, 0xc8, 0x36, 0x3e, 0x66, 0x55, 0x63, 0xa5, 0x79, 0xb9, 0x0f,
	0x18, 0xf7, 0xda, 0x2e, 0x34, 0xaf, 0xf7, 0x01, 0x63, 0x3b, 0x52, 0xb2, 0xd9, 0xbc, 0xe0, 0x0d,
	0xc2, 0xe1, 0xba, 0x57, 0xba, 0x1d, 0xae, 0x7b, 0xa5, 0xf1, 0xbe, 0x63, 0x8c, 0x2b, 0xa3, 0x1e,
	0x65, 0xf3, 0x80, 0x07, 0x48, 0x2c, 0xd5, 0xa3, 0x64, 0x53, 0xe8, 0xe6, 0xca, 0xd8, 0xa8, 0x4f,
	0xb7, 0xe1, 0xe5, 0x87, 0xd1, 0x1e, 0xcf, 0x7c, 0x42, 0xba, 0xb3, 0xbf, 0x3c, 0xf7, 0xc0, 0xd3,
	0x28, 0x9e, 0xc2, 0xe8, 0x5a, 0x6f, 0x75, 0x79, 0xaf, 0x91, 0x72, 0xb9, 0x5e, 0x64, 0x69, 0x46,
	0xc8, 0xc3, 0x9c, 0x16, 0x32, 0x25, 0xd0, 0x61, 0x21, 0x8c, 0x17, 0xeb, 0x74, 0xb1, 0x51, 0x9a,
	0x13, 0xe3, 0xe3, 0xf6, 0xf9, 0x83, 0xdb, 0xee, 0x92, 0x36, 0x73, 0xa0, 0x87, 0x65, 0x16, 0x65,
	0x51, 0x10, 0xea, 0x13, 0x2a, 0x9a, 0xa2, 0x03, 0xac, 0x33, 0x4b, 0xb3, 0xa7, 0x3a, 0x01, 0x26,
	0x7c, 0xa9, 0xf4, 0x9a, 0x3b, 0x13, 0x43, 0x2c, 0xb5, 0xdc, 0xd1, 0x3f, 0x40, 0x08, 0x54, 0x57,
	0xb9, 0xba, 0x23, 0xac, 0x74, 0x69, 0x9a, 0x4a, 0x63, 0x72, 0x54, 0x1c, 0x39, 0x9a, 0xa0, 0x78,
	0x5e, 0xba, 0xed, 0x13, 0xfa, 0x59, 0x65, 0xf7, 0x84, 0x4e, 0xcf, 0x66, 0x30, 0x3e, 0x7e, 0x64,
	0x50, 0x7a, 0xc3, 0x95, 0xbd, 0x36, 0x38, 0x03, 0x13, 0x18, 0x22, 0xf8, 0x09, 0x1f, 0x51, 0x37,
	0x07, 0xd7, 0x46, 0x8a, 0xb0, 0x83, 0xaa, 0x77, 0x0f, 0x3b, 0x55, 0x49, 0x11, 0xfa, 0xf3, 0x09,
	0xf4, 0x2e, 0x31, 0xda, 0x79, 0x17, 0xb3, 0x4d, 0xfb, 0x94, 0xf3, 0xb7, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x66, 0x2b, 0x71, 0xfd, 0xdb, 0x07, 0x00, 0x00,
}
