// Code generated by protoc-gen-go. DO NOT EDIT.
// source: credits.proto

package apiproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreditsTask_TaskType int32

const (
	CreditsTask_Buycai        CreditsTask_TaskType = 0
	CreditsTask_InviteFriend  CreditsTask_TaskType = 1
	CreditsTask_FirstWin      CreditsTask_TaskType = 2
	CreditsTask_FirstBuycai   CreditsTask_TaskType = 3
	CreditsTask_AuthRealname  CreditsTask_TaskType = 4
	CreditsTask_BindPhone     CreditsTask_TaskType = 5
	CreditsTask_RegistAccount CreditsTask_TaskType = 6
)

var CreditsTask_TaskType_name = map[int32]string{
	0: "Buycai",
	1: "InviteFriend",
	2: "FirstWin",
	3: "FirstBuycai",
	4: "AuthRealname",
	5: "BindPhone",
	6: "RegistAccount",
}
var CreditsTask_TaskType_value = map[string]int32{
	"Buycai":        0,
	"InviteFriend":  1,
	"FirstWin":      2,
	"FirstBuycai":   3,
	"AuthRealname":  4,
	"BindPhone":     5,
	"RegistAccount": 6,
}

func (x CreditsTask_TaskType) String() string {
	return proto.EnumName(CreditsTask_TaskType_name, int32(x))
}
func (CreditsTask_TaskType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 0} }

type CreditsTask struct {
	AwardCredits int32                `protobuf:"varint,1,opt,name=award_credits,json=awardCredits" json:"award_credits"`
	Type         CreditsTask_TaskType `protobuf:"varint,2,opt,name=type,enum=apiproto.CreditsTask_TaskType" json:"type"`
	Title        string               `protobuf:"bytes,3,opt,name=title" json:"title"`
	Desc         string               `protobuf:"bytes,4,opt,name=desc" json:"desc"`
	IsFinish     bool                 `protobuf:"varint,5,opt,name=is_finish,json=isFinish" json:"is_finish"`
}

func (m *CreditsTask) Reset()                    { *m = CreditsTask{} }
func (m *CreditsTask) String() string            { return proto.CompactTextString(m) }
func (*CreditsTask) ProtoMessage()               {}
func (*CreditsTask) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *CreditsTask) GetAwardCredits() int32 {
	if m != nil {
		return m.AwardCredits
	}
	return 0
}

func (m *CreditsTask) GetType() CreditsTask_TaskType {
	if m != nil {
		return m.Type
	}
	return CreditsTask_Buycai
}

func (m *CreditsTask) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreditsTask) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CreditsTask) GetIsFinish() bool {
	if m != nil {
		return m.IsFinish
	}
	return false
}

type CreditsTaskInfo struct {
	Credits  int32          `protobuf:"varint,1,opt,name=credits" json:"credits"`
	TaskList []*CreditsTask `protobuf:"bytes,2,rep,name=task_list,json=taskList" json:"task_list"`
}

func (m *CreditsTaskInfo) Reset()                    { *m = CreditsTaskInfo{} }
func (m *CreditsTaskInfo) String() string            { return proto.CompactTextString(m) }
func (*CreditsTaskInfo) ProtoMessage()               {}
func (*CreditsTaskInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *CreditsTaskInfo) GetCredits() int32 {
	if m != nil {
		return m.Credits
	}
	return 0
}

func (m *CreditsTaskInfo) GetTaskList() []*CreditsTask {
	if m != nil {
		return m.TaskList
	}
	return nil
}

func init() {
	proto.RegisterType((*CreditsTask)(nil), "apiproto.CreditsTask")
	proto.RegisterType((*CreditsTaskInfo)(nil), "apiproto.CreditsTaskInfo")
	proto.RegisterEnum("apiproto.CreditsTask_TaskType", CreditsTask_TaskType_name, CreditsTask_TaskType_value)
}

func init() { proto.RegisterFile("credits.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x4d, 0x9a, 0xb4, 0xc9, 0xb4, 0xb1, 0xeb, 0xa0, 0x10, 0x10, 0x24, 0xd4, 0x4b, 0x4e,
	0x39, 0xc4, 0x5f, 0xd0, 0x08, 0x85, 0x82, 0x87, 0x12, 0x0a, 0x1e, 0xc3, 0x9a, 0x6c, 0xed, 0xd0,
	0xba, 0x09, 0xd9, 0xad, 0x52, 0xfc, 0x47, 0xfe, 0x4a, 0xc9, 0x36, 0x85, 0x0a, 0x5e, 0x96, 0x79,
	0xf3, 0xbe, 0xf7, 0x60, 0x07, 0x82, 0xb2, 0x15, 0x15, 0x69, 0x95, 0x34, 0x6d, 0xad, 0x6b, 0xf4,
	0x78, 0x43, 0x66, 0x9a, 0xfd, 0xd8, 0x30, 0x7e, 0x3e, 0x79, 0x6b, 0xae, 0x76, 0xf8, 0x08, 0x01,
	0xff, 0xe2, 0x6d, 0x55, 0xf4, 0x81, 0xd0, 0x8a, 0xac, 0xd8, 0xcd, 0x27, 0x66, 0xd9, 0x83, 0x98,
	0x82, 0xa3, 0x8f, 0x8d, 0x08, 0xed, 0xc8, 0x8a, 0xaf, 0xd3, 0x87, 0xe4, 0xdc, 0x96, 0x5c, 0x34,
	0x25, 0xdd, 0xb3, 0x3e, 0x36, 0x22, 0x37, 0x2c, 0xde, 0x82, 0xab, 0x49, 0xef, 0x45, 0x38, 0x88,
	0xac, 0xd8, 0xcf, 0x4f, 0x02, 0x11, 0x9c, 0x4a, 0xa8, 0x32, 0x74, 0xcc, 0xd2, 0xcc, 0x78, 0x0f,
	0x3e, 0xa9, 0x62, 0x43, 0x92, 0xd4, 0x36, 0x74, 0x23, 0x2b, 0xf6, 0x72, 0x8f, 0xd4, 0xc2, 0xe8,
	0xd9, 0x37, 0x78, 0xe7, 0x62, 0x04, 0x18, 0x66, 0x87, 0x63, 0xc9, 0x89, 0x5d, 0x21, 0x83, 0xc9,
	0x52, 0x7e, 0x92, 0x16, 0x8b, 0x96, 0x84, 0xac, 0x98, 0x85, 0x13, 0xf0, 0x16, 0xd4, 0x2a, 0xfd,
	0x4a, 0x92, 0xd9, 0x38, 0x85, 0xb1, 0x51, 0x7d, 0x60, 0xd0, 0x05, 0xe6, 0x07, 0xbd, 0xcd, 0x05,
	0xdf, 0x4b, 0xfe, 0x21, 0x98, 0x83, 0x01, 0xf8, 0x19, 0xc9, 0x6a, 0xb5, 0xad, 0xa5, 0x60, 0x2e,
	0xde, 0x40, 0x90, 0x8b, 0x77, 0x52, 0x7a, 0x5e, 0x96, 0xf5, 0x41, 0x6a, 0x36, 0x9c, 0x15, 0x30,
	0xbd, 0xf8, 0xe1, 0x52, 0x6e, 0x6a, 0x0c, 0x61, 0xf4, 0xf7, 0x52, 0x67, 0x89, 0x29, 0xf8, 0x9a,
	0xab, 0x5d, 0xb1, 0x27, 0xa5, 0x43, 0x3b, 0x1a, 0xc4, 0xe3, 0xf4, 0xee, 0xdf, 0x4b, 0xe5, 0x5e,
	0xc7, 0xbd, 0x90, 0xd2, 0x19, 0x03, 0x77, 0xd5, 0xd9, 0xd9, 0xa8, 0xf7, 0xdf, 0x86, 0x06, 0x7f,
	0xfa, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x5d, 0xb7, 0xb3, 0xc1, 0x01, 0x00, 0x00,
}
