// Code generated by protoc-gen-go. DO NOT EDIT.
// source: options.proto

package apiproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Banner_TargetType int32

const (
	Banner_TargetType_All      Banner_TargetType = 0
	Banner_TargetType_News     Banner_TargetType = 1
	Banner_TargetType_Activity Banner_TargetType = 2
	Banner_TargetType_Link     Banner_TargetType = 3
)

var Banner_TargetType_name = map[int32]string{
	0: "TargetType_All",
	1: "TargetType_News",
	2: "TargetType_Activity",
	3: "TargetType_Link",
}
var Banner_TargetType_value = map[string]int32{
	"TargetType_All":      0,
	"TargetType_News":     1,
	"TargetType_Activity": 2,
	"TargetType_Link":     3,
}

func (x Banner_TargetType) String() string {
	return proto.EnumName(Banner_TargetType_name, int32(x))
}
func (Banner_TargetType) EnumDescriptor() ([]byte, []int) { return fileDescriptor11, []int{2, 0} }

type Banner_Location int32

const (
	Banner_Location_All      Banner_Location = 0
	Banner_Location_Home     Banner_Location = 1
	Banner_Location_Discover Banner_Location = 2
)

var Banner_Location_name = map[int32]string{
	0: "Location_All",
	1: "Location_Home",
	2: "Location_Discover",
}
var Banner_Location_value = map[string]int32{
	"Location_All":      0,
	"Location_Home":     1,
	"Location_Discover": 2,
}

func (x Banner_Location) String() string {
	return proto.EnumName(Banner_Location_name, int32(x))
}
func (Banner_Location) EnumDescriptor() ([]byte, []int) { return fileDescriptor11, []int{2, 1} }

type LotteryOptions struct {
	Id          int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	LotteryName string `protobuf:"bytes,2,opt,name=lottery_name,json=lotteryName" json:"lottery_name"`
	IsPlusAward bool   `protobuf:"varint,3,opt,name=is_plus_award,json=isPlusAward" json:"is_plus_award"`
	Info        string `protobuf:"bytes,4,opt,name=info" json:"info"`
	StopSale    bool   `protobuf:"varint,5,opt,name=stop_sale,json=stopSale" json:"stop_sale"`
	CreateTime  int64  `protobuf:"varint,6,opt,name=create_time,json=createTime" json:"create_time"`
	UpdateTime  int64  `protobuf:"varint,7,opt,name=update_time,json=updateTime" json:"update_time"`
}

func (m *LotteryOptions) Reset()                    { *m = LotteryOptions{} }
func (m *LotteryOptions) String() string            { return proto.CompactTextString(m) }
func (*LotteryOptions) ProtoMessage()               {}
func (*LotteryOptions) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *LotteryOptions) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LotteryOptions) GetLotteryName() string {
	if m != nil {
		return m.LotteryName
	}
	return ""
}

func (m *LotteryOptions) GetIsPlusAward() bool {
	if m != nil {
		return m.IsPlusAward
	}
	return false
}

func (m *LotteryOptions) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *LotteryOptions) GetStopSale() bool {
	if m != nil {
		return m.StopSale
	}
	return false
}

func (m *LotteryOptions) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *LotteryOptions) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type WiningList struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Info string `protobuf:"bytes,2,opt,name=info" json:"info"`
}

func (m *WiningList) Reset()                    { *m = WiningList{} }
func (m *WiningList) String() string            { return proto.CompactTextString(m) }
func (*WiningList) ProtoMessage()               {}
func (*WiningList) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *WiningList) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WiningList) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type Banner struct {
	Id          int64             `protobuf:"varint,1,opt,name=id" json:"id"`
	Url         string            `protobuf:"bytes,2,opt,name=url" json:"url"`
	TargetLink  string            `protobuf:"bytes,3,opt,name=targetLink" json:"targetLink"`
	IsVisible   bool              `protobuf:"varint,4,opt,name=isVisible" json:"isVisible"`
	Description string            `protobuf:"bytes,5,opt,name=description" json:"description"`
	Created     int64             `protobuf:"varint,6,opt,name=created" json:"created"`
	Sort        int64             `protobuf:"varint,7,opt,name=sort" json:"sort"`
	TargetId    int64             `protobuf:"varint,8,opt,name=targetId" json:"targetId"`
	TargetType  Banner_TargetType `protobuf:"varint,9,opt,name=targetType,enum=apiproto.Banner_TargetType" json:"targetType"`
	Location    Banner_Location   `protobuf:"varint,10,opt,name=location,enum=apiproto.Banner_Location" json:"location"`
	Updated     int64             `protobuf:"varint,11,opt,name=updated" json:"updated"`
}

func (m *Banner) Reset()                    { *m = Banner{} }
func (m *Banner) String() string            { return proto.CompactTextString(m) }
func (*Banner) ProtoMessage()               {}
func (*Banner) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *Banner) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Banner) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Banner) GetTargetLink() string {
	if m != nil {
		return m.TargetLink
	}
	return ""
}

func (m *Banner) GetIsVisible() bool {
	if m != nil {
		return m.IsVisible
	}
	return false
}

func (m *Banner) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Banner) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Banner) GetSort() int64 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *Banner) GetTargetId() int64 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *Banner) GetTargetType() Banner_TargetType {
	if m != nil {
		return m.TargetType
	}
	return Banner_TargetType_All
}

func (m *Banner) GetLocation() Banner_Location {
	if m != nil {
		return m.Location
	}
	return Banner_Location_All
}

func (m *Banner) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type BannerList struct {
	List  []*Banner `protobuf:"bytes,1,rep,name=list" json:"list"`
	Total int64     `protobuf:"varint,2,opt,name=total" json:"total"`
}

func (m *BannerList) Reset()                    { *m = BannerList{} }
func (m *BannerList) String() string            { return proto.CompactTextString(m) }
func (*BannerList) ProtoMessage()               {}
func (*BannerList) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *BannerList) GetList() []*Banner {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *BannerList) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type HomeParams struct {
	LotteryOptions map[int32]*LotteryOptions `protobuf:"bytes,1,rep,name=lottery_options,json=lotteryOptions" json:"lottery_options" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WinList        []string                  `protobuf:"bytes,2,rep,name=win_list,json=winList" json:"win_list"`
	Banner         []*Banner                 `protobuf:"bytes,3,rep,name=banner" json:"banner"`
}

func (m *HomeParams) Reset()                    { *m = HomeParams{} }
func (m *HomeParams) String() string            { return proto.CompactTextString(m) }
func (*HomeParams) ProtoMessage()               {}
func (*HomeParams) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{4} }

func (m *HomeParams) GetLotteryOptions() map[int32]*LotteryOptions {
	if m != nil {
		return m.LotteryOptions
	}
	return nil
}

func (m *HomeParams) GetWinList() []string {
	if m != nil {
		return m.WinList
	}
	return nil
}

func (m *HomeParams) GetBanner() []*Banner {
	if m != nil {
		return m.Banner
	}
	return nil
}

type Contact struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Qq       string `protobuf:"bytes,2,opt,name=qq" json:"qq"`
	Wechat   string `protobuf:"bytes,3,opt,name=wechat" json:"wechat"`
	Email    string `protobuf:"bytes,4,opt,name=email" json:"email"`
	Telphone string `protobuf:"bytes,5,opt,name=telphone" json:"telphone"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *Contact) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Contact) GetQq() string {
	if m != nil {
		return m.Qq
	}
	return ""
}

func (m *Contact) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

func (m *Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Contact) GetTelphone() string {
	if m != nil {
		return m.Telphone
	}
	return ""
}

type Faq struct {
	Id         int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Title      string `protobuf:"bytes,2,opt,name=title" json:"title"`
	Content    string `protobuf:"bytes,3,opt,name=content" json:"content"`
	ContentUrl string `protobuf:"bytes,4,opt,name=contentUrl" json:"contentUrl"`
	Html       string `protobuf:"bytes,5,opt,name=html" json:"html"`
	IsVisible  bool   `protobuf:"varint,6,opt,name=isVisible" json:"isVisible"`
	CreateTime int64  `protobuf:"varint,7,opt,name=createTime" json:"createTime"`
	UpdateTime int64  `protobuf:"varint,8,opt,name=updateTime" json:"updateTime"`
}

func (m *Faq) Reset()                    { *m = Faq{} }
func (m *Faq) String() string            { return proto.CompactTextString(m) }
func (*Faq) ProtoMessage()               {}
func (*Faq) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{6} }

func (m *Faq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Faq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Faq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Faq) GetContentUrl() string {
	if m != nil {
		return m.ContentUrl
	}
	return ""
}

func (m *Faq) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func (m *Faq) GetIsVisible() bool {
	if m != nil {
		return m.IsVisible
	}
	return false
}

func (m *Faq) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Faq) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type FaqId struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id"`
}

func (m *FaqId) Reset()                    { *m = FaqId{} }
func (m *FaqId) String() string            { return proto.CompactTextString(m) }
func (*FaqId) ProtoMessage()               {}
func (*FaqId) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{7} }

func (m *FaqId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FaqList struct {
	List  []*Faq `protobuf:"bytes,1,rep,name=list" json:"list"`
	Total int64  `protobuf:"varint,2,opt,name=total" json:"total"`
}

func (m *FaqList) Reset()                    { *m = FaqList{} }
func (m *FaqList) String() string            { return proto.CompactTextString(m) }
func (*FaqList) ProtoMessage()               {}
func (*FaqList) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{8} }

func (m *FaqList) GetList() []*Faq {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *FaqList) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*LotteryOptions)(nil), "apiproto.LotteryOptions")
	proto.RegisterType((*WiningList)(nil), "apiproto.WiningList")
	proto.RegisterType((*Banner)(nil), "apiproto.Banner")
	proto.RegisterType((*BannerList)(nil), "apiproto.BannerList")
	proto.RegisterType((*HomeParams)(nil), "apiproto.HomeParams")
	proto.RegisterType((*Contact)(nil), "apiproto.Contact")
	proto.RegisterType((*Faq)(nil), "apiproto.Faq")
	proto.RegisterType((*FaqId)(nil), "apiproto.FaqId")
	proto.RegisterType((*FaqList)(nil), "apiproto.FaqList")
	proto.RegisterEnum("apiproto.Banner_TargetType", Banner_TargetType_name, Banner_TargetType_value)
	proto.RegisterEnum("apiproto.Banner_Location", Banner_Location_name, Banner_Location_value)
}

func init() { proto.RegisterFile("options.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 761 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x4b, 0x6f, 0xeb, 0x44,
	0x14, 0xc6, 0x76, 0x1e, 0xce, 0xc9, 0x4d, 0xae, 0xef, 0x14, 0xb8, 0x6e, 0x8b, 0x4a, 0x6a, 0xb1,
	0xf0, 0x2a, 0x42, 0x45, 0x48, 0x08, 0x56, 0x0d, 0x10, 0xb5, 0x52, 0x54, 0x8a, 0x29, 0xb0, 0x60,
	0x11, 0x4d, 0xed, 0xa1, 0x1d, 0x75, 0xfc, 0x9c, 0x49, 0xa3, 0x2c, 0xf9, 0x05, 0xfc, 0x3c, 0x24,
	0x7e, 0x0d, 0x9a, 0x87, 0x1f, 0x49, 0x80, 0xdd, 0x39, 0x9f, 0xbf, 0xf1, 0xf9, 0xce, 0xcc, 0xf9,
	0x0e, 0x4c, 0xf2, 0x42, 0xd0, 0x3c, 0xe3, 0xf3, 0xa2, 0xca, 0x45, 0x8e, 0x5c, 0x5c, 0x50, 0x15,
	0x05, 0x7f, 0x5b, 0x30, 0x5d, 0xe5, 0x42, 0x90, 0x6a, 0xf7, 0x83, 0xa6, 0xa0, 0x29, 0xd8, 0x34,
	0xf1, 0xad, 0x99, 0x15, 0x3a, 0x91, 0x4d, 0x13, 0x74, 0x09, 0x6f, 0x98, 0x66, 0xac, 0x33, 0x9c,
	0x12, 0xdf, 0x9e, 0x59, 0xe1, 0x28, 0x1a, 0x1b, 0xec, 0x0e, 0xa7, 0x04, 0x05, 0x30, 0xa1, 0x7c,
	0x5d, 0xb0, 0x0d, 0x5f, 0xe3, 0x2d, 0xae, 0x12, 0xdf, 0x99, 0x59, 0xa1, 0x1b, 0x8d, 0x29, 0xbf,
	0x67, 0x1b, 0x7e, 0x2d, 0x21, 0x84, 0xa0, 0x47, 0xb3, 0xdf, 0x73, 0xbf, 0xa7, 0x8e, 0xab, 0x18,
	0x9d, 0xc3, 0x88, 0x8b, 0xbc, 0x58, 0x73, 0xcc, 0x88, 0xdf, 0x57, 0x67, 0x5c, 0x09, 0xfc, 0x84,
	0x19, 0x41, 0x9f, 0xc2, 0x38, 0xae, 0x08, 0x16, 0x64, 0x2d, 0x68, 0x4a, 0xfc, 0x81, 0x12, 0x04,
	0x1a, 0x7a, 0xa0, 0xa9, 0x22, 0x6c, 0x8a, 0xa4, 0x21, 0x0c, 0x35, 0x41, 0x43, 0x92, 0x10, 0x7c,
	0x0e, 0xf0, 0x2b, 0xcd, 0x68, 0xf6, 0xb4, 0xa2, 0x5c, 0x1c, 0xf5, 0x55, 0x0b, 0xb2, 0x5b, 0x41,
	0xc1, 0x9f, 0x3d, 0x18, 0x2c, 0x70, 0x96, 0x91, 0xea, 0x88, 0xee, 0x81, 0xb3, 0xa9, 0x98, 0x61,
	0xcb, 0x10, 0x5d, 0x00, 0x08, 0x5c, 0x3d, 0x11, 0xb1, 0xa2, 0xd9, 0x8b, 0x6a, 0x79, 0x14, 0x75,
	0x10, 0xf4, 0x09, 0x8c, 0x28, 0xff, 0x85, 0x72, 0xfa, 0xc8, 0x88, 0x6a, 0xdb, 0x8d, 0x5a, 0x00,
	0xcd, 0x60, 0x9c, 0x10, 0x1e, 0x57, 0x54, 0x5d, 0xbb, 0xea, 0x7e, 0x14, 0x75, 0x21, 0xe4, 0xc3,
	0x50, 0x77, 0x9b, 0x98, 0xe6, 0xeb, 0x54, 0x4a, 0xe7, 0x79, 0x25, 0x4c, 0xcb, 0x2a, 0x46, 0x67,
	0xe0, 0xea, 0xda, 0xb7, 0x89, 0xef, 0x2a, 0xbc, 0xc9, 0xd1, 0x37, 0xb5, 0xd2, 0x87, 0x5d, 0x41,
	0xfc, 0xd1, 0xcc, 0x0a, 0xa7, 0x57, 0xe7, 0xf3, 0x7a, 0x08, 0xe6, 0xba, 0xe3, 0xf9, 0x43, 0x43,
	0x89, 0x3a, 0x74, 0xf4, 0x25, 0xb8, 0x2c, 0x8f, 0xb1, 0x52, 0x09, 0xea, 0xe8, 0xe9, 0xd1, 0xd1,
	0x95, 0x21, 0x44, 0x0d, 0x55, 0xaa, 0xd7, 0x4f, 0x91, 0xf8, 0x63, 0xad, 0xde, 0xa4, 0x41, 0x0c,
	0xd0, 0x96, 0x42, 0x08, 0xa6, 0x6d, 0xb6, 0xbe, 0x66, 0xcc, 0xfb, 0x00, 0x9d, 0xc0, 0xdb, 0x0e,
	0x76, 0x47, 0xb6, 0xdc, 0xb3, 0xd0, 0x7b, 0x38, 0xe9, 0x12, 0x63, 0x41, 0x5f, 0xa9, 0xd8, 0x79,
	0xf6, 0x01, 0x5b, 0x5e, 0xbd, 0xe7, 0x04, 0x4b, 0x70, 0x6b, 0x51, 0xc8, 0x83, 0x37, 0x75, 0x6c,
	0x0a, 0xbc, 0x83, 0x49, 0x83, 0xdc, 0xe4, 0x29, 0xf1, 0x2c, 0xf4, 0x11, 0xbc, 0x6b, 0xa0, 0xef,
	0x28, 0x8f, 0xf3, 0x57, 0x52, 0x79, 0x76, 0x70, 0x03, 0xa0, 0x7b, 0x54, 0x33, 0xf4, 0x19, 0xf4,
	0x18, 0xe5, 0xc2, 0xb7, 0x66, 0x4e, 0x38, 0xbe, 0xf2, 0x0e, 0xef, 0x21, 0x52, 0x5f, 0xd1, 0x87,
	0xd0, 0x17, 0xb9, 0xc0, 0x7a, 0x58, 0x9c, 0x48, 0x27, 0xc1, 0x1f, 0x36, 0x80, 0xac, 0x75, 0x8f,
	0x2b, 0x9c, 0x72, 0xf4, 0x23, 0xbc, 0xad, 0x6d, 0x65, 0xcc, 0x69, 0xfe, 0x1a, 0xb6, 0x7f, 0x6d,
	0xe9, 0xf3, 0x7d, 0x93, 0x7e, 0x9f, 0x89, 0x6a, 0x17, 0x4d, 0xd9, 0xbe, 0x73, 0x4f, 0xc1, 0xdd,
	0xd2, 0x6c, 0xad, 0x14, 0xda, 0x33, 0x27, 0x1c, 0x45, 0xc3, 0x2d, 0xcd, 0x94, 0xf0, 0x10, 0x06,
	0x8f, 0x4a, 0xa2, 0xef, 0xfc, 0x87, 0x74, 0xf3, 0xfd, 0xec, 0x37, 0x38, 0xf9, 0x97, 0x5a, 0x72,
	0xfc, 0x5f, 0xc8, 0x4e, 0xf9, 0xa1, 0x1f, 0xc9, 0x10, 0xcd, 0xa1, 0xff, 0x8a, 0xd9, 0x46, 0x2f,
	0x84, 0xf1, 0x95, 0xdf, 0xfe, 0x71, 0xff, 0x7c, 0xa4, 0x69, 0x5f, 0xdb, 0x5f, 0x59, 0x01, 0x87,
	0xe1, 0xb7, 0x79, 0x26, 0x70, 0x7c, 0x6c, 0xc7, 0x29, 0xd8, 0x65, 0x69, 0xec, 0x65, 0x97, 0x25,
	0xfa, 0x18, 0x06, 0x5b, 0x12, 0x3f, 0x63, 0x61, 0x9c, 0x65, 0x32, 0x79, 0xb9, 0x24, 0xc5, 0x94,
	0x99, 0x45, 0xa2, 0x13, 0x35, 0xfd, 0x84, 0x15, 0xcf, 0x79, 0x46, 0x8c, 0x95, 0x9a, 0x3c, 0xf8,
	0xcb, 0x02, 0x67, 0x89, 0xcb, 0xa3, 0x8a, 0xf2, 0x99, 0xa8, 0x60, 0xf5, 0x46, 0xd3, 0x89, 0x72,
	0x5d, 0x9e, 0x09, 0x92, 0xd5, 0x85, 0xeb, 0x54, 0xfa, 0xdd, 0x84, 0x3f, 0x57, 0x75, 0xf9, 0x0e,
	0x22, 0x5d, 0xf9, 0x2c, 0x52, 0x66, 0xea, 0xab, 0x78, 0x7f, 0x07, 0x0c, 0x0e, 0x77, 0x80, 0xfc,
	0x63, 0xb3, 0xcf, 0xea, 0x05, 0xd6, 0xd9, 0x70, 0x17, 0xd0, 0x59, 0x67, 0xc6, 0xd5, 0xdd, 0x05,
	0xf7, 0x1e, 0xfa, 0x4b, 0x5c, 0xde, 0x26, 0x87, 0xad, 0x05, 0x0b, 0x18, 0x2e, 0x71, 0xa9, 0x5e,
	0xfe, 0x72, 0x6f, 0x64, 0x27, 0xed, 0x2b, 0x2d, 0x71, 0xf9, 0x7f, 0xf3, 0xba, 0xf0, 0xa0, 0x7f,
	0x2f, 0x89, 0x8b, 0xa1, 0x79, 0xc8, 0xc7, 0x81, 0x3a, 0xf8, 0xc5, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xbf, 0x06, 0x43, 0xb8, 0x4e, 0x06, 0x00, 0x00,
}
