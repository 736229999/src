// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notify.proto

package apiproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NotifyType int32

const (
	NotifyType_Announce NotifyType = 0
	NotifyType_Remind   NotifyType = 1
	NotifyType_Message  NotifyType = 2
	NotifyType_All      NotifyType = 3
)

var NotifyType_name = map[int32]string{
	0: "Announce",
	1: "Remind",
	2: "Message",
	3: "All",
}
var NotifyType_value = map[string]int32{
	"Announce": 0,
	"Remind":   1,
	"Message":  2,
	"All":      3,
}

func (x NotifyType) String() string {
	return proto.EnumName(NotifyType_name, int32(x))
}
func (NotifyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

type Notify struct {
	Id            int64      `protobuf:"varint,1,opt,name=id" json:"id"`
	Content       string     `protobuf:"bytes,2,opt,name=content" json:"content"`
	Type          NotifyType `protobuf:"varint,3,opt,name=type,enum=apiproto.NotifyType" json:"type"`
	Target        int64      `protobuf:"varint,4,opt,name=target" json:"target"`
	TargetType    string     `protobuf:"bytes,5,opt,name=targetType" json:"targetType"`
	Action        string     `protobuf:"bytes,6,opt,name=action" json:"action"`
	Sender        int64      `protobuf:"varint,7,opt,name=sender" json:"sender"`
	Created       int64      `protobuf:"varint,8,opt,name=created" json:"created"`
	Updated       int64      `protobuf:"varint,9,opt,name=updated" json:"updated"`
	ContentLength int64      `protobuf:"varint,10,opt,name=contentLength" json:"contentLength"`
}

func (m *Notify) Reset()                    { *m = Notify{} }
func (m *Notify) String() string            { return proto.CompactTextString(m) }
func (*Notify) ProtoMessage()               {}
func (*Notify) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Notify) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Notify) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Notify) GetType() NotifyType {
	if m != nil {
		return m.Type
	}
	return NotifyType_Announce
}

func (m *Notify) GetTarget() int64 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *Notify) GetTargetType() string {
	if m != nil {
		return m.TargetType
	}
	return ""
}

func (m *Notify) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Notify) GetSender() int64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *Notify) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Notify) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Notify) GetContentLength() int64 {
	if m != nil {
		return m.ContentLength
	}
	return 0
}

type UserNotify struct {
	Account    int64      `protobuf:"varint,1,opt,name=account" json:"account"`
	Notify     int64      `protobuf:"varint,2,opt,name=notify" json:"notify"`
	IsRead     bool       `protobuf:"varint,3,opt,name=isRead" json:"isRead"`
	NotifyType NotifyType `protobuf:"varint,4,opt,name=notifyType,enum=apiproto.NotifyType" json:"notifyType"`
	Created    int64      `protobuf:"varint,5,opt,name=created" json:"created"`
}

func (m *UserNotify) Reset()                    { *m = UserNotify{} }
func (m *UserNotify) String() string            { return proto.CompactTextString(m) }
func (*UserNotify) ProtoMessage()               {}
func (*UserNotify) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *UserNotify) GetAccount() int64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *UserNotify) GetNotify() int64 {
	if m != nil {
		return m.Notify
	}
	return 0
}

func (m *UserNotify) GetIsRead() bool {
	if m != nil {
		return m.IsRead
	}
	return false
}

func (m *UserNotify) GetNotifyType() NotifyType {
	if m != nil {
		return m.NotifyType
	}
	return NotifyType_Announce
}

func (m *UserNotify) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

type QueryUserNotifyArg struct {
	Account    int64      `protobuf:"varint,1,opt,name=account" json:"account"`
	NotifyType NotifyType `protobuf:"varint,2,opt,name=notifyType,enum=apiproto.NotifyType" json:"notifyType"`
	Page       int64      `protobuf:"varint,3,opt,name=page" json:"page"`
	PageSize   int64      `protobuf:"varint,4,opt,name=pageSize" json:"pageSize"`
}

func (m *QueryUserNotifyArg) Reset()                    { *m = QueryUserNotifyArg{} }
func (m *QueryUserNotifyArg) String() string            { return proto.CompactTextString(m) }
func (*QueryUserNotifyArg) ProtoMessage()               {}
func (*QueryUserNotifyArg) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *QueryUserNotifyArg) GetAccount() int64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *QueryUserNotifyArg) GetNotifyType() NotifyType {
	if m != nil {
		return m.NotifyType
	}
	return NotifyType_Announce
}

func (m *QueryUserNotifyArg) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *QueryUserNotifyArg) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ReadNotifyArg struct {
	NotifyId  int64 `protobuf:"varint,1,opt,name=notifyId" json:"notifyId"`
	AccountId int64 `protobuf:"varint,2,opt,name=accountId" json:"accountId"`
}

func (m *ReadNotifyArg) Reset()                    { *m = ReadNotifyArg{} }
func (m *ReadNotifyArg) String() string            { return proto.CompactTextString(m) }
func (*ReadNotifyArg) ProtoMessage()               {}
func (*ReadNotifyArg) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *ReadNotifyArg) GetNotifyId() int64 {
	if m != nil {
		return m.NotifyId
	}
	return 0
}

func (m *ReadNotifyArg) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type UserNotifyInfo struct {
	UserNotify *UserNotify `protobuf:"bytes,1,opt,name=userNotify" json:"userNotify"`
	Notify     *Notify     `protobuf:"bytes,2,opt,name=notify" json:"notify"`
}

func (m *UserNotifyInfo) Reset()                    { *m = UserNotifyInfo{} }
func (m *UserNotifyInfo) String() string            { return proto.CompactTextString(m) }
func (*UserNotifyInfo) ProtoMessage()               {}
func (*UserNotifyInfo) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *UserNotifyInfo) GetUserNotify() *UserNotify {
	if m != nil {
		return m.UserNotify
	}
	return nil
}

func (m *UserNotifyInfo) GetNotify() *Notify {
	if m != nil {
		return m.Notify
	}
	return nil
}

type QueryUserNotifyRes struct {
	List []*UserNotifyInfo `protobuf:"bytes,1,rep,name=list" json:"list"`
}

func (m *QueryUserNotifyRes) Reset()                    { *m = QueryUserNotifyRes{} }
func (m *QueryUserNotifyRes) String() string            { return proto.CompactTextString(m) }
func (*QueryUserNotifyRes) ProtoMessage()               {}
func (*QueryUserNotifyRes) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *QueryUserNotifyRes) GetList() []*UserNotifyInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*Notify)(nil), "apiproto.Notify")
	proto.RegisterType((*UserNotify)(nil), "apiproto.UserNotify")
	proto.RegisterType((*QueryUserNotifyArg)(nil), "apiproto.QueryUserNotifyArg")
	proto.RegisterType((*ReadNotifyArg)(nil), "apiproto.ReadNotifyArg")
	proto.RegisterType((*UserNotifyInfo)(nil), "apiproto.UserNotifyInfo")
	proto.RegisterType((*QueryUserNotifyRes)(nil), "apiproto.QueryUserNotifyRes")
	proto.RegisterEnum("apiproto.NotifyType", NotifyType_name, NotifyType_value)
}

func init() { proto.RegisterFile("notify.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0xcf, 0x93, 0x4c,
	0x14, 0x7d, 0x81, 0x16, 0xe8, 0x6d, 0x9f, 0x86, 0xdc, 0xbc, 0x9a, 0xc9, 0x13, 0x63, 0x1a, 0xe2,
	0x82, 0x18, 0xd3, 0x45, 0x75, 0xe9, 0xa6, 0x75, 0xd5, 0x44, 0x8d, 0x8e, 0xfa, 0x03, 0x10, 0xee,
	0x83, 0x93, 0xd4, 0x81, 0xc0, 0xb0, 0xa8, 0xbf, 0xc3, 0xb5, 0x4b, 0x7f, 0xa7, 0x99, 0x0f, 0x0a,
	0xf5, 0x2b, 0xae, 0x3a, 0xe7, 0x9e, 0xdb, 0x33, 0xe7, 0x9c, 0x01, 0x56, 0xb2, 0x56, 0xe2, 0xee,
	0xbc, 0x6d, 0xda, 0x5a, 0xd5, 0x18, 0xe7, 0x8d, 0x30, 0xa7, 0xf4, 0x9b, 0x0f, 0xe1, 0x6b, 0x43,
	0xe1, 0x1a, 0x7c, 0x51, 0x32, 0x6f, 0xe3, 0x65, 0x01, 0xf7, 0x45, 0x89, 0x0c, 0xa2, 0xa2, 0x96,
	0x8a, 0xa4, 0x62, 0xfe, 0xc6, 0xcb, 0x16, 0x7c, 0x80, 0x98, 0xc1, 0x4c, 0x9d, 0x1b, 0x62, 0xc1,
	0xc6, 0xcb, 0xd6, 0xbb, 0xff, 0xb7, 0x83, 0xda, 0xd6, 0x2a, 0xbd, 0x3f, 0x37, 0xc4, 0xcd, 0x06,
	0xde, 0x87, 0x50, 0xe5, 0x6d, 0x45, 0x8a, 0xcd, 0x8c, 0xae, 0x43, 0xf8, 0x10, 0xc0, 0x9e, 0xf4,
	0x2e, 0x9b, 0x1b, 0xf9, 0xc9, 0x44, 0xff, 0x2f, 0x2f, 0x94, 0xa8, 0x25, 0x0b, 0x0d, 0xe7, 0x90,
	0x9e, 0x77, 0x24, 0x4b, 0x6a, 0x59, 0x64, 0xf5, 0x2c, 0x32, 0x5e, 0x5b, 0xca, 0x15, 0x95, 0x2c,
	0x36, 0xc4, 0x00, 0x35, 0xd3, 0x37, 0xa5, 0x61, 0x16, 0x96, 0x71, 0x10, 0x1f, 0xc1, 0x8d, 0x0b,
	0xf4, 0x92, 0x64, 0xa5, 0x3e, 0x31, 0x30, 0xfc, 0xf5, 0x30, 0xfd, 0xee, 0x01, 0x7c, 0xe8, 0xa8,
	0x75, 0x25, 0x31, 0x88, 0xf2, 0xa2, 0xa8, 0x7b, 0xa9, 0x5c, 0x53, 0x03, 0xd4, 0xd6, 0x6c, 0xc7,
	0xa6, 0xad, 0x80, 0x3b, 0xa4, 0xe7, 0xa2, 0xe3, 0x94, 0x97, 0xa6, 0xae, 0x98, 0x3b, 0x84, 0xcf,
	0x00, 0xe4, 0xa5, 0x2e, 0x53, 0xcf, 0x9f, 0xaa, 0x9c, 0xec, 0x4d, 0x83, 0xce, 0xaf, 0x82, 0xa6,
	0x5f, 0x3d, 0xc0, 0xb7, 0x3d, 0xb5, 0xe7, 0xd1, 0xed, 0xbe, 0xad, 0xfe, 0x62, 0xf8, 0xda, 0x80,
	0xff, 0x8f, 0x06, 0x10, 0x66, 0x4d, 0x5e, 0xd9, 0xb7, 0x0f, 0xb8, 0x39, 0xe3, 0x2d, 0xc4, 0xfa,
	0xf7, 0x9d, 0xf8, 0x42, 0xee, 0x9d, 0x2f, 0x38, 0x3d, 0xc2, 0x8d, 0x8e, 0x3b, 0x1a, 0xba, 0x85,
	0xd8, 0xca, 0x1d, 0x87, 0x8f, 0xed, 0x82, 0xf1, 0x01, 0x2c, 0x9c, 0xbb, 0x63, 0xe9, 0x6a, 0x1c,
	0x07, 0x69, 0x03, 0xeb, 0x31, 0xdb, 0x51, 0xde, 0xd5, 0x3a, 0x42, 0x7f, 0x99, 0x18, 0xb5, 0xe5,
	0x34, 0xc2, 0xb8, 0xcd, 0x27, 0x7b, 0x98, 0x5d, 0xbd, 0xd4, 0x72, 0x97, 0xfc, 0x1c, 0x7a, 0x78,
	0xbb, 0xf4, 0xf0, 0x4b, 0xa5, 0x9c, 0x3a, 0x7c, 0x02, 0xb3, 0x93, 0xe8, 0x74, 0x9f, 0x41, 0xb6,
	0xdc, 0xb1, 0xdf, 0xdd, 0xa7, 0xdd, 0x71, 0xb3, 0xf5, 0xf8, 0x39, 0xc0, 0x58, 0x25, 0xae, 0x20,
	0xde, 0x4b, 0x59, 0xf7, 0xb2, 0xa0, 0xe4, 0x3f, 0x04, 0x08, 0x39, 0x7d, 0x16, 0xb2, 0x4c, 0x3c,
	0x5c, 0x42, 0xf4, 0x8a, 0xba, 0x2e, 0xaf, 0x28, 0xf1, 0x31, 0x82, 0x60, 0x7f, 0x3a, 0x25, 0xc1,
	0xe1, 0x1e, 0xcc, 0xdf, 0x68, 0xed, 0xc3, 0xca, 0x8a, 0xbc, 0x20, 0xa9, 0xa8, 0xfd, 0x18, 0x9a,
	0x0b, 0x9f, 0xfe, 0x08, 0x00, 0x00, 0xff, 0xff, 0xab, 0x39, 0x90, 0x77, 0xd7, 0x03, 0x00, 0x00,
}
