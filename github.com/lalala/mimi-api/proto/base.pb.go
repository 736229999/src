// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base.proto

package apiproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Nil struct {
}

func (m *Nil) Reset()                    { *m = Nil{} }
func (m *Nil) String() string            { return proto.CompactTextString(m) }
func (*Nil) ProtoMessage()               {}
func (*Nil) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type StringList struct {
	List []string `protobuf:"bytes,1,rep,name=list" json:"list"`
}

func (m *StringList) Reset()                    { *m = StringList{} }
func (m *StringList) String() string            { return proto.CompactTextString(m) }
func (*StringList) ProtoMessage()               {}
func (*StringList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *StringList) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

type IntValue struct {
	Value int64 `protobuf:"varint,1,opt,name=value" json:"value"`
}

func (m *IntValue) Reset()                    { *m = IntValue{} }
func (m *IntValue) String() string            { return proto.CompactTextString(m) }
func (*IntValue) ProtoMessage()               {}
func (*IntValue) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *IntValue) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type StringValue struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value"`
}

func (m *StringValue) Reset()                    { *m = StringValue{} }
func (m *StringValue) String() string            { return proto.CompactTextString(m) }
func (*StringValue) ProtoMessage()               {}
func (*StringValue) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *StringValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Response struct {
	Code   RespCode `protobuf:"varint,1,opt,name=code,enum=apiproto.RespCode" json:"code"`
	Desc   string   `protobuf:"bytes,2,opt,name=desc" json:"desc"`
	Api    string   `protobuf:"bytes,3,opt,name=api" json:"api"`
	Result []byte   `protobuf:"bytes,4,opt,name=result,proto3" json:"result"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Response) GetCode() RespCode {
	if m != nil {
		return m.Code
	}
	return RespCode_Success
}

func (m *Response) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Response) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *Response) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Nil)(nil), "apiproto.Nil")
	proto.RegisterType((*StringList)(nil), "apiproto.StringList")
	proto.RegisterType((*IntValue)(nil), "apiproto.IntValue")
	proto.RegisterType((*StringValue)(nil), "apiproto.StringValue")
	proto.RegisterType((*Response)(nil), "apiproto.Response")
}

func init() { proto.RegisterFile("base.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8e, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xa9, 0x69, 0x97, 0xee, 0xac, 0x8a, 0x0c, 0x22, 0xc1, 0x53, 0xa8, 0x20, 0x3d, 0xf5,
	0xa0, 0xff, 0xa0, 0x9e, 0x04, 0x11, 0x89, 0xe0, 0x3d, 0xbb, 0x1d, 0x24, 0x10, 0x9a, 0x90, 0xc9,
	0xfa, 0xfb, 0x25, 0x89, 0xbd, 0x79, 0xfb, 0xe6, 0xe5, 0xe3, 0xe5, 0x01, 0x1c, 0x0d, 0xd3, 0x14,
	0xa2, 0x4f, 0x1e, 0x7b, 0x13, 0x6c, 0xa1, 0xfb, 0x03, 0xc5, 0xe8, 0x63, 0x8d, 0x87, 0x0e, 0xc4,
	0xbb, 0x75, 0x83, 0x02, 0xf8, 0x4c, 0xd1, 0xae, 0xdf, 0x6f, 0x96, 0x13, 0x22, 0xb4, 0xce, 0x72,
	0x92, 0x8d, 0x12, 0xe3, 0x5e, 0x17, 0x1e, 0x14, 0xf4, 0xaf, 0x6b, 0xfa, 0x32, 0xee, 0x4c, 0x78,
	0x0b, 0xdd, 0x4f, 0x06, 0xd9, 0xa8, 0x66, 0x14, 0xba, 0x1e, 0xc3, 0x03, 0x1c, 0x6a, 0xc7, 0x3f,
	0xd2, 0x7e, 0x93, 0x02, 0xf4, 0x9a, 0x38, 0xf8, 0x95, 0x09, 0x1f, 0xa1, 0x3d, 0xf9, 0xa5, 0x0a,
	0xd7, 0x4f, 0x38, 0x6d, 0x0b, 0xa7, 0x6c, 0xbc, 0xf8, 0x85, 0x74, 0x79, 0xcf, 0x73, 0x16, 0xe2,
	0x93, 0xbc, 0x28, 0x45, 0x85, 0xf1, 0x06, 0x84, 0x09, 0x56, 0x8a, 0x12, 0x65, 0xc4, 0x3b, 0xd8,
	0x45, 0xe2, 0xb3, 0x4b, 0xb2, 0x55, 0xcd, 0x78, 0xa9, 0xff, 0xae, 0xf9, 0x0a, 0xba, 0x8f, 0xdc,
	0x3a, 0xb7, 0xb3, 0x61, 0x3a, 0xee, 0xca, 0x17, 0xcf, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x18,
	0x00, 0xa4, 0xd9, 0x1c, 0x01, 0x00, 0x00,
}
