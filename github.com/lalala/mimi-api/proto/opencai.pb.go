// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opencai.proto

package apiproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LotteryType int32

const (
	LotteryType_AllType  LotteryType = 0
	LotteryType_LowFreq  LotteryType = 1
	LotteryType_HighFreq LotteryType = 2
	LotteryType_Comp     LotteryType = 3
)

var LotteryType_name = map[int32]string{
	0: "AllType",
	1: "LowFreq",
	2: "HighFreq",
	3: "Comp",
}
var LotteryType_value = map[string]int32{
	"AllType":  0,
	"LowFreq":  1,
	"HighFreq": 2,
	"Comp":     3,
}

func (x LotteryType) String() string {
	return proto.EnumName(LotteryType_name, int32(x))
}
func (LotteryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

type LotteryId int32

const (
	LotteryId_AllId  LotteryId = 0
	LotteryId_Dlt    LotteryId = 1
	LotteryId_Fc3d   LotteryId = 2
	LotteryId_Ssq    LotteryId = 3
	LotteryId_Cqssc  LotteryId = 4
	LotteryId_Bjpk10 LotteryId = 5
	LotteryId_Gd11x5 LotteryId = 6
	LotteryId_Pl3    LotteryId = 7
	LotteryId_Pl5    LotteryId = 8
	LotteryId_Jczq   LotteryId = 9
	LotteryId_Jclq   LotteryId = 10
)

var LotteryId_name = map[int32]string{
	0:  "AllId",
	1:  "Dlt",
	2:  "Fc3d",
	3:  "Ssq",
	4:  "Cqssc",
	5:  "Bjpk10",
	6:  "Gd11x5",
	7:  "Pl3",
	8:  "Pl5",
	9:  "Jczq",
	10: "Jclq",
}
var LotteryId_value = map[string]int32{
	"AllId":  0,
	"Dlt":    1,
	"Fc3d":   2,
	"Ssq":    3,
	"Cqssc":  4,
	"Bjpk10": 5,
	"Gd11x5": 6,
	"Pl3":    7,
	"Pl5":    8,
	"Jczq":   9,
	"Jclq":   10,
}

func (x LotteryId) String() string {
	return proto.EnumName(LotteryId_name, int32(x))
}
func (LotteryId) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

type BonusDetail struct {
	Name  string  `protobuf:"bytes,1,opt,name=name" json:"name"`
	Num   int32   `protobuf:"varint,2,opt,name=num" json:"num"`
	Money float64 `protobuf:"fixed64,3,opt,name=money" json:"money"`
}

func (m *BonusDetail) Reset()                    { *m = BonusDetail{} }
func (m *BonusDetail) String() string            { return proto.CompactTextString(m) }
func (*BonusDetail) ProtoMessage()               {}
func (*BonusDetail) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *BonusDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BonusDetail) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *BonusDetail) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

// 开奖详细
type OpenDetail struct {
	Sale      float64        `protobuf:"fixed64,1,opt,name=sale" json:"sale"`
	Pool      float64        `protobuf:"fixed64,2,opt,name=pool" json:"pool"`
	BonusList []*BonusDetail `protobuf:"bytes,3,rep,name=bonus_list,json=bonusList" json:"bonus_list"`
}

func (m *OpenDetail) Reset()                    { *m = OpenDetail{} }
func (m *OpenDetail) String() string            { return proto.CompactTextString(m) }
func (*OpenDetail) ProtoMessage()               {}
func (*OpenDetail) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *OpenDetail) GetSale() float64 {
	if m != nil {
		return m.Sale
	}
	return 0
}

func (m *OpenDetail) GetPool() float64 {
	if m != nil {
		return m.Pool
	}
	return 0
}

func (m *OpenDetail) GetBonusList() []*BonusDetail {
	if m != nil {
		return m.BonusList
	}
	return nil
}

type OpenInfo struct {
	Type     LotteryType `protobuf:"varint,1,opt,name=type,enum=apiproto.LotteryType" json:"type"`
	Id       LotteryId   `protobuf:"varint,2,opt,name=id,enum=apiproto.LotteryId" json:"id"`
	Name     string      `protobuf:"bytes,3,opt,name=name" json:"name"`
	Issue    string      `protobuf:"bytes,4,opt,name=issue" json:"issue"`
	No       int32       `protobuf:"varint,5,opt,name=no" json:"no"`
	OpenTime int64       `protobuf:"varint,6,opt,name=open_time,json=openTime" json:"open_time"`
	Balls    []string    `protobuf:"bytes,7,rep,name=balls" json:"balls"`
	BlueNum  int32       `protobuf:"varint,8,opt,name=blue_num,json=blueNum" json:"blue_num"`
	Detail   *OpenDetail `protobuf:"bytes,9,opt,name=detail" json:"detail"`
}

func (m *OpenInfo) Reset()                    { *m = OpenInfo{} }
func (m *OpenInfo) String() string            { return proto.CompactTextString(m) }
func (*OpenInfo) ProtoMessage()               {}
func (*OpenInfo) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *OpenInfo) GetType() LotteryType {
	if m != nil {
		return m.Type
	}
	return LotteryType_AllType
}

func (m *OpenInfo) GetId() LotteryId {
	if m != nil {
		return m.Id
	}
	return LotteryId_AllId
}

func (m *OpenInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpenInfo) GetIssue() string {
	if m != nil {
		return m.Issue
	}
	return ""
}

func (m *OpenInfo) GetNo() int32 {
	if m != nil {
		return m.No
	}
	return 0
}

func (m *OpenInfo) GetOpenTime() int64 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

func (m *OpenInfo) GetBalls() []string {
	if m != nil {
		return m.Balls
	}
	return nil
}

func (m *OpenInfo) GetBlueNum() int32 {
	if m != nil {
		return m.BlueNum
	}
	return 0
}

func (m *OpenInfo) GetDetail() *OpenDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

type LotteryCollection struct {
	Name string      `protobuf:"bytes,1,opt,name=name" json:"name"`
	Type LotteryType `protobuf:"varint,2,opt,name=type,enum=apiproto.LotteryType" json:"type"`
}

func (m *LotteryCollection) Reset()                    { *m = LotteryCollection{} }
func (m *LotteryCollection) String() string            { return proto.CompactTextString(m) }
func (*LotteryCollection) ProtoMessage()               {}
func (*LotteryCollection) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *LotteryCollection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LotteryCollection) GetType() LotteryType {
	if m != nil {
		return m.Type
	}
	return LotteryType_AllType
}

// 最新开奖信息
type LatestOpen struct {
	List []*OpenInfo          `protobuf:"bytes,1,rep,name=list" json:"list"`
	Tabs []*LotteryCollection `protobuf:"bytes,2,rep,name=tabs" json:"tabs"`
}

func (m *LatestOpen) Reset()                    { *m = LatestOpen{} }
func (m *LatestOpen) String() string            { return proto.CompactTextString(m) }
func (*LatestOpen) ProtoMessage()               {}
func (*LatestOpen) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

func (m *LatestOpen) GetList() []*OpenInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *LatestOpen) GetTabs() []*LotteryCollection {
	if m != nil {
		return m.Tabs
	}
	return nil
}

type DayHistory struct {
	Name string      `protobuf:"bytes,1,opt,name=name" json:"name"`
	Date string      `protobuf:"bytes,2,opt,name=date" json:"date"`
	List []*OpenInfo `protobuf:"bytes,3,rep,name=list" json:"list"`
}

func (m *DayHistory) Reset()                    { *m = DayHistory{} }
func (m *DayHistory) String() string            { return proto.CompactTextString(m) }
func (*DayHistory) ProtoMessage()               {}
func (*DayHistory) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{5} }

func (m *DayHistory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DayHistory) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *DayHistory) GetList() []*OpenInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type History struct {
	Days []*DayHistory `protobuf:"bytes,1,rep,name=days" json:"days"`
}

func (m *History) Reset()                    { *m = History{} }
func (m *History) String() string            { return proto.CompactTextString(m) }
func (*History) ProtoMessage()               {}
func (*History) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{6} }

func (m *History) GetDays() []*DayHistory {
	if m != nil {
		return m.Days
	}
	return nil
}

// 开奖信息摘要
type OpenInfoDigest struct {
	Issue    string   `protobuf:"bytes,1,opt,name=issue" json:"issue"`
	Balls    []string `protobuf:"bytes,2,rep,name=balls" json:"balls"`
	TryBalls []string `protobuf:"bytes,3,rep,name=try_balls,json=tryBalls" json:"try_balls"`
	BlueNum  int32    `protobuf:"varint,4,opt,name=blue_num,json=blueNum" json:"blue_num"`
}

func (m *OpenInfoDigest) Reset()                    { *m = OpenInfoDigest{} }
func (m *OpenInfoDigest) String() string            { return proto.CompactTextString(m) }
func (*OpenInfoDigest) ProtoMessage()               {}
func (*OpenInfoDigest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{7} }

func (m *OpenInfoDigest) GetIssue() string {
	if m != nil {
		return m.Issue
	}
	return ""
}

func (m *OpenInfoDigest) GetBalls() []string {
	if m != nil {
		return m.Balls
	}
	return nil
}

func (m *OpenInfoDigest) GetTryBalls() []string {
	if m != nil {
		return m.TryBalls
	}
	return nil
}

func (m *OpenInfoDigest) GetBlueNum() int32 {
	if m != nil {
		return m.BlueNum
	}
	return 0
}

type DigestHistory struct {
	List []*OpenInfoDigest `protobuf:"bytes,1,rep,name=list" json:"list"`
}

func (m *DigestHistory) Reset()                    { *m = DigestHistory{} }
func (m *DigestHistory) String() string            { return proto.CompactTextString(m) }
func (*DigestHistory) ProtoMessage()               {}
func (*DigestHistory) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{8} }

func (m *DigestHistory) GetList() []*OpenInfoDigest {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*BonusDetail)(nil), "apiproto.BonusDetail")
	proto.RegisterType((*OpenDetail)(nil), "apiproto.OpenDetail")
	proto.RegisterType((*OpenInfo)(nil), "apiproto.OpenInfo")
	proto.RegisterType((*LotteryCollection)(nil), "apiproto.LotteryCollection")
	proto.RegisterType((*LatestOpen)(nil), "apiproto.LatestOpen")
	proto.RegisterType((*DayHistory)(nil), "apiproto.DayHistory")
	proto.RegisterType((*History)(nil), "apiproto.History")
	proto.RegisterType((*OpenInfoDigest)(nil), "apiproto.OpenInfoDigest")
	proto.RegisterType((*DigestHistory)(nil), "apiproto.DigestHistory")
	proto.RegisterEnum("apiproto.LotteryType", LotteryType_name, LotteryType_value)
	proto.RegisterEnum("apiproto.LotteryId", LotteryId_name, LotteryId_value)
}

func init() { proto.RegisterFile("opencai.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x5d, 0xfe, 0xb4, 0x49, 0x6e, 0x7f, 0xab, 0xfc, 0x33, 0x43, 0x0a, 0xda, 0x4b, 0x14, 0x24,
	0x14, 0xa6, 0x69, 0xb0, 0x95, 0x3d, 0x22, 0xb4, 0xae, 0x1a, 0x2b, 0xaa, 0xd8, 0x64, 0xf6, 0x88,
	0x54, 0xa5, 0x8d, 0x19, 0x1e, 0x6e, 0x9c, 0xd6, 0xae, 0x20, 0xf0, 0x25, 0xf8, 0xc8, 0xc8, 0xf6,
	0xda, 0x66, 0xea, 0x04, 0x6f, 0xe7, 0xda, 0xa7, 0xe7, 0x9e, 0x7b, 0xae, 0x1b, 0xd8, 0x15, 0x15,
	0x2d, 0xa7, 0x39, 0x3b, 0xaa, 0x16, 0x42, 0x09, 0x1c, 0xe6, 0x15, 0x33, 0x28, 0x1d, 0x42, 0xa7,
	0x2f, 0xca, 0xa5, 0x1c, 0x50, 0x95, 0x33, 0x8e, 0x31, 0xf8, 0x65, 0x3e, 0xa3, 0xb1, 0x93, 0x38,
	0x59, 0x44, 0x0c, 0xc6, 0x08, 0xbc, 0x72, 0x39, 0x8b, 0xdd, 0xc4, 0xc9, 0x5a, 0x44, 0x43, 0xbc,
	0x07, 0xad, 0x99, 0x28, 0x69, 0x1d, 0x7b, 0x89, 0x93, 0x39, 0xc4, 0x16, 0xe9, 0x1d, 0xc0, 0x55,
	0x45, 0xcb, 0x8d, 0x92, 0xcc, 0xb9, 0x55, 0x72, 0x88, 0xc1, 0xfa, 0xac, 0x12, 0x82, 0x1b, 0x29,
	0x87, 0x18, 0x8c, 0xdf, 0x00, 0x4c, 0xb4, 0x81, 0x31, 0x67, 0x52, 0xc5, 0x5e, 0xe2, 0x65, 0x9d,
	0x93, 0xa7, 0x47, 0x2b, 0x7f, 0x47, 0x0d, 0x73, 0x24, 0x32, 0xc4, 0x11, 0x93, 0x2a, 0xfd, 0xed,
	0x42, 0xa8, 0x9b, 0x0d, 0xcb, 0x2f, 0x02, 0xbf, 0x04, 0x5f, 0xd5, 0x95, 0x6d, 0xd5, 0x6d, 0xfe,
	0x78, 0x24, 0x94, 0xa2, 0x8b, 0xfa, 0xa6, 0xae, 0x28, 0x31, 0x14, 0xfc, 0x1c, 0x5c, 0x56, 0x98,
	0xfe, 0xdd, 0x93, 0x27, 0x5b, 0xc4, 0x61, 0x41, 0x5c, 0x56, 0xac, 0x43, 0xf0, 0x1a, 0x21, 0xec,
	0x41, 0x8b, 0x49, 0xb9, 0xa4, 0xb1, 0x6f, 0x0e, 0x6d, 0x81, 0xbb, 0xe0, 0x96, 0x22, 0x6e, 0x99,
	0x64, 0xdc, 0x52, 0xe0, 0x7d, 0x88, 0x74, 0xd0, 0x63, 0xc5, 0x66, 0x34, 0x6e, 0x27, 0x4e, 0xe6,
	0x91, 0x50, 0x1f, 0xdc, 0x30, 0x2b, 0x31, 0xc9, 0x39, 0x97, 0x71, 0x90, 0x78, 0x5a, 0xc2, 0x14,
	0xf8, 0x19, 0x84, 0x13, 0xbe, 0xa4, 0x63, 0x1d, 0x71, 0x68, 0x84, 0x02, 0x5d, 0x7f, 0x5c, 0xce,
	0xf0, 0x21, 0xb4, 0x0b, 0x33, 0x79, 0x1c, 0x25, 0x4e, 0xd6, 0x39, 0xd9, 0xdb, 0x18, 0xde, 0x04,
	0x4d, 0xee, 0x39, 0x29, 0x81, 0xff, 0xef, 0xc7, 0x38, 0x17, 0x9c, 0xd3, 0xa9, 0x62, 0xa2, 0x7c,
	0x74, 0x9f, 0xab, 0xb8, 0xdc, 0x7f, 0xc6, 0x95, 0x52, 0x80, 0x51, 0xae, 0xa8, 0x54, 0xba, 0x1f,
	0x7e, 0x01, 0xbe, 0x59, 0x92, 0x63, 0x96, 0x84, 0x1f, 0xba, 0xd1, 0x9b, 0x20, 0xe6, 0x1e, 0xbf,
	0x02, 0x5f, 0xe5, 0x13, 0x19, 0xbb, 0x86, 0xb7, 0xbf, 0xd5, 0x60, 0xe3, 0x8f, 0x18, 0x62, 0xfa,
	0x19, 0x60, 0x90, 0xd7, 0x97, 0x4c, 0x2a, 0xb1, 0xa8, 0x1f, 0xf5, 0x8c, 0xc1, 0x2f, 0x72, 0x65,
	0x3d, 0x47, 0xc4, 0xe0, 0xb5, 0x1d, 0xef, 0xef, 0x76, 0xd2, 0x1e, 0x04, 0x2b, 0xe9, 0x4c, 0xcb,
	0xd4, 0xf2, 0x7e, 0x82, 0x46, 0x9e, 0x9b, 0xf6, 0xc4, 0x30, 0x52, 0x05, 0xdd, 0x95, 0xcc, 0x80,
	0xdd, 0x52, 0xa9, 0x36, 0x2f, 0xc0, 0x69, 0xbe, 0x80, 0xf5, 0x52, 0xdd, 0xe6, 0x52, 0xf7, 0x21,
	0x52, 0x8b, 0x7a, 0x6c, 0x6f, 0x3c, 0x73, 0x13, 0xaa, 0x45, 0xdd, 0xdf, 0xda, 0xb8, 0xff, 0x60,
	0xe3, 0xe9, 0x5b, 0xd8, 0xb5, 0xdd, 0x56, 0x86, 0x0f, 0x1f, 0x44, 0x1e, 0x6f, 0xcf, 0x68, 0xe9,
	0x76, 0xd2, 0x83, 0x77, 0xd0, 0x69, 0xec, 0x10, 0x77, 0x20, 0x38, 0xe3, 0x5c, 0x43, 0xb4, 0xa3,
	0x8b, 0x91, 0xf8, 0x7e, 0xb1, 0xa0, 0x73, 0xe4, 0xe0, 0xff, 0x20, 0xbc, 0x64, 0xb7, 0x5f, 0x4d,
	0xe5, 0xe2, 0x10, 0xfc, 0x73, 0x31, 0xab, 0x90, 0x77, 0xf0, 0x0b, 0xa2, 0xf5, 0x5f, 0x01, 0x47,
	0xd0, 0x3a, 0xe3, 0x7c, 0x58, 0xa0, 0x1d, 0x1c, 0x80, 0x37, 0xe0, 0x0a, 0x39, 0x9a, 0x7a, 0x31,
	0xed, 0x15, 0xc8, 0xd5, 0x47, 0x9f, 0xe4, 0x1c, 0x79, 0x9a, 0x76, 0x3e, 0x97, 0x72, 0x8a, 0x7c,
	0x0c, 0xd0, 0xee, 0xdf, 0x55, 0xdf, 0x8e, 0x5f, 0xa3, 0x96, 0xc6, 0xef, 0x8b, 0xe3, 0xe3, 0x1f,
	0xa7, 0xa8, 0xad, 0xb9, 0xd7, 0xbc, 0x87, 0x02, 0x0b, 0x4e, 0x51, 0xa8, 0x75, 0x3e, 0x4c, 0x7f,
	0xce, 0x51, 0x64, 0x11, 0x9f, 0x23, 0xe8, 0x23, 0x68, 0x5d, 0xeb, 0xd9, 0xfa, 0xc1, 0x95, 0xfd,
	0x58, 0x4d, 0xda, 0x66, 0xd6, 0xde, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x0e, 0xbf, 0x97,
	0xbe, 0x04, 0x00, 0x00,
}
