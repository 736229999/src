// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fund.proto

package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// --------------------------------------------------------------------------------------------------------
// 资金变动类型
type FundChangeType int32

const (
	FundChangeType_UNKNOWN  FundChangeType = 0
	FundChangeType_RECHARGE FundChangeType = 1
	FundChangeType_WIN      FundChangeType = 2
	FundChangeType_WITHDRAW FundChangeType = 3
	FundChangeType_FREEZE   FundChangeType = 4
	FundChangeType_UNFREEZE FundChangeType = 5
	FundChangeType_BUYCAI   FundChangeType = 6
	FundChangeType_ACTIVITY FundChangeType = 7
)

var FundChangeType_name = map[int32]string{
	0: "UNKNOWN",
	1: "RECHARGE",
	2: "WIN",
	3: "WITHDRAW",
	4: "FREEZE",
	5: "UNFREEZE",
	6: "BUYCAI",
	7: "ACTIVITY",
}
var FundChangeType_value = map[string]int32{
	"UNKNOWN":  0,
	"RECHARGE": 1,
	"WIN":      2,
	"WITHDRAW": 3,
	"FREEZE":   4,
	"UNFREEZE": 5,
	"BUYCAI":   6,
	"ACTIVITY": 7,
}

func (x FundChangeType) String() string {
	return proto.EnumName(FundChangeType_name, int32(x))
}
func (FundChangeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

type Fund struct {
	Balance       float64 `protobuf:"fixed64,1,opt,name=balance" json:"balance"`
	Cai           float64 `protobuf:"fixed64,2,opt,name=cai" json:"cai"`
	FreezeBalance float64 `protobuf:"fixed64,3,opt,name=freeze_balance,json=freezeBalance" json:"freeze_balance"`
	FreezeCai     float64 `protobuf:"fixed64,4,opt,name=freeze_cai,json=freezeCai" json:"freeze_cai"`
	TotalRecharge float64 `protobuf:"fixed64,5,opt,name=total_recharge,json=totalRecharge" json:"total_recharge"`
	TotalWin      float64 `protobuf:"fixed64,6,opt,name=total_win,json=totalWin" json:"total_win"`
	TotalWithdraw float64 `protobuf:"fixed64,7,opt,name=total_withdraw,json=totalWithdraw" json:"total_withdraw"`
	TotalCai      float64 `protobuf:"fixed64,8,opt,name=total_cai,json=totalCai" json:"total_cai"`
	TotalBuycai   float64 `protobuf:"fixed64,9,opt,name=total_buycai,json=totalBuycai" json:"total_buycai"`
}

func (m *Fund) Reset()                    { *m = Fund{} }
func (m *Fund) String() string            { return proto.CompactTextString(m) }
func (*Fund) ProtoMessage()               {}
func (*Fund) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

func (m *Fund) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Fund) GetCai() float64 {
	if m != nil {
		return m.Cai
	}
	return 0
}

func (m *Fund) GetFreezeBalance() float64 {
	if m != nil {
		return m.FreezeBalance
	}
	return 0
}

func (m *Fund) GetFreezeCai() float64 {
	if m != nil {
		return m.FreezeCai
	}
	return 0
}

func (m *Fund) GetTotalRecharge() float64 {
	if m != nil {
		return m.TotalRecharge
	}
	return 0
}

func (m *Fund) GetTotalWin() float64 {
	if m != nil {
		return m.TotalWin
	}
	return 0
}

func (m *Fund) GetTotalWithdraw() float64 {
	if m != nil {
		return m.TotalWithdraw
	}
	return 0
}

func (m *Fund) GetTotalCai() float64 {
	if m != nil {
		return m.TotalCai
	}
	return 0
}

func (m *Fund) GetTotalBuycai() float64 {
	if m != nil {
		return m.TotalBuycai
	}
	return 0
}

type AccountBankcard struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	AccountId int64  `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id"`
	Cardno    string `protobuf:"bytes,3,opt,name=cardno" json:"cardno"`
	Bankname  int32  `protobuf:"varint,4,opt,name=bankname" json:"bankname"`
	Cardtype  string `protobuf:"bytes,5,opt,name=cardtype" json:"cardtype"`
	Phone     string `protobuf:"bytes,6,opt,name=phone" json:"phone"`
	Idno      string `protobuf:"bytes,7,opt,name=idno" json:"idno"`
	Realname  string `protobuf:"bytes,8,opt,name=realname" json:"realname"`
	AddTime   int64  `protobuf:"varint,9,opt,name=add_time,json=addTime" json:"add_time"`
}

func (m *AccountBankcard) Reset()                    { *m = AccountBankcard{} }
func (m *AccountBankcard) String() string            { return proto.CompactTextString(m) }
func (*AccountBankcard) ProtoMessage()               {}
func (*AccountBankcard) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{1} }

func (m *AccountBankcard) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AccountBankcard) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *AccountBankcard) GetCardno() string {
	if m != nil {
		return m.Cardno
	}
	return ""
}

func (m *AccountBankcard) GetBankname() int32 {
	if m != nil {
		return m.Bankname
	}
	return 0
}

func (m *AccountBankcard) GetCardtype() string {
	if m != nil {
		return m.Cardtype
	}
	return ""
}

func (m *AccountBankcard) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AccountBankcard) GetIdno() string {
	if m != nil {
		return m.Idno
	}
	return ""
}

func (m *AccountBankcard) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *AccountBankcard) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

type BuycaiTicket struct {
	Id           int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	UseBase      int32  `protobuf:"varint,2,opt,name=use_base,json=useBase" json:"use_base"`
	UseSub       int32  `protobuf:"varint,3,opt,name=use_sub,json=useSub" json:"use_sub"`
	MaxStack     int32  `protobuf:"varint,4,opt,name=max_stack,json=maxStack" json:"max_stack"`
	ValidStart   int64  `protobuf:"varint,5,opt,name=valid_start,json=validStart" json:"valid_start"`
	ValidEnd     int64  `protobuf:"varint,6,opt,name=valid_end,json=validEnd" json:"valid_end"`
	AddTime      int64  `protobuf:"varint,7,opt,name=add_time,json=addTime" json:"add_time"`
	Title        string `protobuf:"bytes,8,opt,name=title" json:"title"`
	AccountId    int64  `protobuf:"varint,9,opt,name=account_id,json=accountId" json:"account_id"`
	RestrictType int32  `protobuf:"varint,10,opt,name=restrict_type,json=restrictType" json:"restrict_type"`
	RestrictId   int32  `protobuf:"varint,11,opt,name=restrict_id,json=restrictId" json:"restrict_id"`
	OrderId      int64  `protobuf:"varint,12,opt,name=order_id,json=orderId" json:"order_id"`
}

func (m *BuycaiTicket) Reset()                    { *m = BuycaiTicket{} }
func (m *BuycaiTicket) String() string            { return proto.CompactTextString(m) }
func (*BuycaiTicket) ProtoMessage()               {}
func (*BuycaiTicket) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{2} }

func (m *BuycaiTicket) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuycaiTicket) GetUseBase() int32 {
	if m != nil {
		return m.UseBase
	}
	return 0
}

func (m *BuycaiTicket) GetUseSub() int32 {
	if m != nil {
		return m.UseSub
	}
	return 0
}

func (m *BuycaiTicket) GetMaxStack() int32 {
	if m != nil {
		return m.MaxStack
	}
	return 0
}

func (m *BuycaiTicket) GetValidStart() int64 {
	if m != nil {
		return m.ValidStart
	}
	return 0
}

func (m *BuycaiTicket) GetValidEnd() int64 {
	if m != nil {
		return m.ValidEnd
	}
	return 0
}

func (m *BuycaiTicket) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *BuycaiTicket) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BuycaiTicket) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *BuycaiTicket) GetRestrictType() int32 {
	if m != nil {
		return m.RestrictType
	}
	return 0
}

func (m *BuycaiTicket) GetRestrictId() int32 {
	if m != nil {
		return m.RestrictId
	}
	return 0
}

func (m *BuycaiTicket) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type InsertBuycaiTicketArg struct {
	List []*BuycaiTicket `protobuf:"bytes,1,rep,name=list" json:"list"`
}

func (m *InsertBuycaiTicketArg) Reset()                    { *m = InsertBuycaiTicketArg{} }
func (m *InsertBuycaiTicketArg) String() string            { return proto.CompactTextString(m) }
func (*InsertBuycaiTicketArg) ProtoMessage()               {}
func (*InsertBuycaiTicketArg) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{3} }

func (m *InsertBuycaiTicketArg) GetList() []*BuycaiTicket {
	if m != nil {
		return m.List
	}
	return nil
}

type DeleteBuycaiTicketArg struct {
	List []int64 `protobuf:"varint,1,rep,packed,name=list" json:"list"`
}

func (m *DeleteBuycaiTicketArg) Reset()                    { *m = DeleteBuycaiTicketArg{} }
func (m *DeleteBuycaiTicketArg) String() string            { return proto.CompactTextString(m) }
func (*DeleteBuycaiTicketArg) ProtoMessage()               {}
func (*DeleteBuycaiTicketArg) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{4} }

func (m *DeleteBuycaiTicketArg) GetList() []int64 {
	if m != nil {
		return m.List
	}
	return nil
}

// 资金变动记录
type FundChangeRecord struct {
	Id               int64          `protobuf:"varint,1,opt,name=id" json:"id"`
	AccountId        int64          `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id"`
	ChangeType       FundChangeType `protobuf:"varint,3,opt,name=change_type,json=changeType,enum=dbproto.FundChangeType" json:"change_type"`
	Balance          float64        `protobuf:"fixed64,4,opt,name=balance" json:"balance"`
	FreezeBalance    float64        `protobuf:"fixed64,5,opt,name=freeze_balance,json=freezeBalance" json:"freeze_balance"`
	Cai              float64        `protobuf:"fixed64,6,opt,name=cai" json:"cai"`
	FreezeCai        float64        `protobuf:"fixed64,7,opt,name=freeze_cai,json=freezeCai" json:"freeze_cai"`
	VarBalance       float64        `protobuf:"fixed64,8,opt,name=var_balance,json=varBalance" json:"var_balance"`
	VarFreezeBalance float64        `protobuf:"fixed64,9,opt,name=var_freeze_balance,json=varFreezeBalance" json:"var_freeze_balance"`
	VarCai           float64        `protobuf:"fixed64,10,opt,name=var_cai,json=varCai" json:"var_cai"`
	VarFreezeCai     float64        `protobuf:"fixed64,11,opt,name=var_freeze_cai,json=varFreezeCai" json:"var_freeze_cai"`
	RechargeOrderNo  string         `protobuf:"bytes,12,opt,name=recharge_order_no,json=rechargeOrderNo" json:"recharge_order_no"`
	VendorOrderId    int64          `protobuf:"varint,13,opt,name=vendor_order_id,json=vendorOrderId" json:"vendor_order_id"`
	UserOrderId      int64          `protobuf:"varint,14,opt,name=user_order_id,json=userOrderId" json:"user_order_id"`
	WithdrawApplyId  int64          `protobuf:"varint,15,opt,name=withdraw_apply_id,json=withdrawApplyId" json:"withdraw_apply_id"`
	ChangeTime       int64          `protobuf:"varint,16,opt,name=change_time,json=changeTime" json:"change_time"`
	ChangeComment    string         `protobuf:"bytes,17,opt,name=change_comment,json=changeComment" json:"change_comment"`
}

func (m *FundChangeRecord) Reset()                    { *m = FundChangeRecord{} }
func (m *FundChangeRecord) String() string            { return proto.CompactTextString(m) }
func (*FundChangeRecord) ProtoMessage()               {}
func (*FundChangeRecord) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{5} }

func (m *FundChangeRecord) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FundChangeRecord) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *FundChangeRecord) GetChangeType() FundChangeType {
	if m != nil {
		return m.ChangeType
	}
	return FundChangeType_UNKNOWN
}

func (m *FundChangeRecord) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *FundChangeRecord) GetFreezeBalance() float64 {
	if m != nil {
		return m.FreezeBalance
	}
	return 0
}

func (m *FundChangeRecord) GetCai() float64 {
	if m != nil {
		return m.Cai
	}
	return 0
}

func (m *FundChangeRecord) GetFreezeCai() float64 {
	if m != nil {
		return m.FreezeCai
	}
	return 0
}

func (m *FundChangeRecord) GetVarBalance() float64 {
	if m != nil {
		return m.VarBalance
	}
	return 0
}

func (m *FundChangeRecord) GetVarFreezeBalance() float64 {
	if m != nil {
		return m.VarFreezeBalance
	}
	return 0
}

func (m *FundChangeRecord) GetVarCai() float64 {
	if m != nil {
		return m.VarCai
	}
	return 0
}

func (m *FundChangeRecord) GetVarFreezeCai() float64 {
	if m != nil {
		return m.VarFreezeCai
	}
	return 0
}

func (m *FundChangeRecord) GetRechargeOrderNo() string {
	if m != nil {
		return m.RechargeOrderNo
	}
	return ""
}

func (m *FundChangeRecord) GetVendorOrderId() int64 {
	if m != nil {
		return m.VendorOrderId
	}
	return 0
}

func (m *FundChangeRecord) GetUserOrderId() int64 {
	if m != nil {
		return m.UserOrderId
	}
	return 0
}

func (m *FundChangeRecord) GetWithdrawApplyId() int64 {
	if m != nil {
		return m.WithdrawApplyId
	}
	return 0
}

func (m *FundChangeRecord) GetChangeTime() int64 {
	if m != nil {
		return m.ChangeTime
	}
	return 0
}

func (m *FundChangeRecord) GetChangeComment() string {
	if m != nil {
		return m.ChangeComment
	}
	return ""
}

type FundChangeHistory struct {
	List []*FundChangeRecord `protobuf:"bytes,1,rep,name=list" json:"list"`
}

func (m *FundChangeHistory) Reset()                    { *m = FundChangeHistory{} }
func (m *FundChangeHistory) String() string            { return proto.CompactTextString(m) }
func (*FundChangeHistory) ProtoMessage()               {}
func (*FundChangeHistory) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{6} }

func (m *FundChangeHistory) GetList() []*FundChangeRecord {
	if m != nil {
		return m.List
	}
	return nil
}

type QueryHistoryArg struct {
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	Limit     int32 `protobuf:"varint,2,opt,name=limit" json:"limit"`
	Offset    int32 `protobuf:"varint,3,opt,name=offset" json:"offset"`
}

func (m *QueryHistoryArg) Reset()                    { *m = QueryHistoryArg{} }
func (m *QueryHistoryArg) String() string            { return proto.CompactTextString(m) }
func (*QueryHistoryArg) ProtoMessage()               {}
func (*QueryHistoryArg) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{7} }

func (m *QueryHistoryArg) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *QueryHistoryArg) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *QueryHistoryArg) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type RechargeResult struct {
	AccountId int64   `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	OrderNo   string  `protobuf:"bytes,2,opt,name=order_no,json=orderNo" json:"order_no"`
	Money     float64 `protobuf:"fixed64,3,opt,name=money" json:"money"`
	Method    string  `protobuf:"bytes,4,opt,name=method" json:"method"`
}

func (m *RechargeResult) Reset()                    { *m = RechargeResult{} }
func (m *RechargeResult) String() string            { return proto.CompactTextString(m) }
func (*RechargeResult) ProtoMessage()               {}
func (*RechargeResult) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{8} }

func (m *RechargeResult) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *RechargeResult) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *RechargeResult) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *RechargeResult) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

type ChangeVirtualFundArg struct {
	AccountId int64  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	Reason    int32  `protobuf:"varint,2,opt,name=reason" json:"reason"`
	Var       int32  `protobuf:"varint,3,opt,name=var" json:"var"`
	Detail    string `protobuf:"bytes,4,opt,name=detail" json:"detail"`
}

func (m *ChangeVirtualFundArg) Reset()                    { *m = ChangeVirtualFundArg{} }
func (m *ChangeVirtualFundArg) String() string            { return proto.CompactTextString(m) }
func (*ChangeVirtualFundArg) ProtoMessage()               {}
func (*ChangeVirtualFundArg) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{9} }

func (m *ChangeVirtualFundArg) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ChangeVirtualFundArg) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

func (m *ChangeVirtualFundArg) GetVar() int32 {
	if m != nil {
		return m.Var
	}
	return 0
}

func (m *ChangeVirtualFundArg) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

type VirtualFundChangeRecord struct {
	Reason     int32  `protobuf:"varint,1,opt,name=reason" json:"reason"`
	ChangeTime int64  `protobuf:"varint,2,opt,name=change_time,json=changeTime" json:"change_time"`
	Remain     int32  `protobuf:"varint,3,opt,name=remain" json:"remain"`
	Var        int32  `protobuf:"varint,4,opt,name=var" json:"var"`
	Detail     string `protobuf:"bytes,5,opt,name=detail" json:"detail"`
}

func (m *VirtualFundChangeRecord) Reset()                    { *m = VirtualFundChangeRecord{} }
func (m *VirtualFundChangeRecord) String() string            { return proto.CompactTextString(m) }
func (*VirtualFundChangeRecord) ProtoMessage()               {}
func (*VirtualFundChangeRecord) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{10} }

func (m *VirtualFundChangeRecord) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

func (m *VirtualFundChangeRecord) GetChangeTime() int64 {
	if m != nil {
		return m.ChangeTime
	}
	return 0
}

func (m *VirtualFundChangeRecord) GetRemain() int32 {
	if m != nil {
		return m.Remain
	}
	return 0
}

func (m *VirtualFundChangeRecord) GetVar() int32 {
	if m != nil {
		return m.Var
	}
	return 0
}

func (m *VirtualFundChangeRecord) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

type VirtualFund struct {
	Credits int32 `protobuf:"varint,1,opt,name=credits" json:"credits"`
	Kxd     int32 `protobuf:"varint,2,opt,name=kxd" json:"kxd"`
}

func (m *VirtualFund) Reset()                    { *m = VirtualFund{} }
func (m *VirtualFund) String() string            { return proto.CompactTextString(m) }
func (*VirtualFund) ProtoMessage()               {}
func (*VirtualFund) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{11} }

func (m *VirtualFund) GetCredits() int32 {
	if m != nil {
		return m.Credits
	}
	return 0
}

func (m *VirtualFund) GetKxd() int32 {
	if m != nil {
		return m.Kxd
	}
	return 0
}

type QueryFundHistoryArg struct {
	AccountId  int64          `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	Limit      int32          `protobuf:"varint,2,opt,name=limit" json:"limit"`
	Offset     int32          `protobuf:"varint,3,opt,name=offset" json:"offset"`
	ChangeType FundChangeType `protobuf:"varint,4,opt,name=change_type,json=changeType,enum=dbproto.FundChangeType" json:"change_type"`
	TimeStart  int64          `protobuf:"varint,5,opt,name=time_start,json=timeStart" json:"time_start"`
	TimeEnd    int64          `protobuf:"varint,6,opt,name=time_end,json=timeEnd" json:"time_end"`
}

func (m *QueryFundHistoryArg) Reset()                    { *m = QueryFundHistoryArg{} }
func (m *QueryFundHistoryArg) String() string            { return proto.CompactTextString(m) }
func (*QueryFundHistoryArg) ProtoMessage()               {}
func (*QueryFundHistoryArg) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{12} }

func (m *QueryFundHistoryArg) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *QueryFundHistoryArg) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *QueryFundHistoryArg) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *QueryFundHistoryArg) GetChangeType() FundChangeType {
	if m != nil {
		return m.ChangeType
	}
	return FundChangeType_UNKNOWN
}

func (m *QueryFundHistoryArg) GetTimeStart() int64 {
	if m != nil {
		return m.TimeStart
	}
	return 0
}

func (m *QueryFundHistoryArg) GetTimeEnd() int64 {
	if m != nil {
		return m.TimeEnd
	}
	return 0
}

type FundHistoryStats struct {
	Recharge float64 `protobuf:"fixed64,1,opt,name=recharge" json:"recharge"`
	Withdraw float64 `protobuf:"fixed64,2,opt,name=withdraw" json:"withdraw"`
	Win      float64 `protobuf:"fixed64,3,opt,name=win" json:"win"`
	Buycai   float64 `protobuf:"fixed64,4,opt,name=buycai" json:"buycai"`
}

func (m *FundHistoryStats) Reset()                    { *m = FundHistoryStats{} }
func (m *FundHistoryStats) String() string            { return proto.CompactTextString(m) }
func (*FundHistoryStats) ProtoMessage()               {}
func (*FundHistoryStats) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{13} }

func (m *FundHistoryStats) GetRecharge() float64 {
	if m != nil {
		return m.Recharge
	}
	return 0
}

func (m *FundHistoryStats) GetWithdraw() float64 {
	if m != nil {
		return m.Withdraw
	}
	return 0
}

func (m *FundHistoryStats) GetWin() float64 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *FundHistoryStats) GetBuycai() float64 {
	if m != nil {
		return m.Buycai
	}
	return 0
}

type QueryFundHistoryStatsArg struct {
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	TimeStart int64 `protobuf:"varint,2,opt,name=time_start,json=timeStart" json:"time_start"`
	TimeEnd   int64 `protobuf:"varint,3,opt,name=time_end,json=timeEnd" json:"time_end"`
}

func (m *QueryFundHistoryStatsArg) Reset()                    { *m = QueryFundHistoryStatsArg{} }
func (m *QueryFundHistoryStatsArg) String() string            { return proto.CompactTextString(m) }
func (*QueryFundHistoryStatsArg) ProtoMessage()               {}
func (*QueryFundHistoryStatsArg) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{14} }

func (m *QueryFundHistoryStatsArg) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *QueryFundHistoryStatsArg) GetTimeStart() int64 {
	if m != nil {
		return m.TimeStart
	}
	return 0
}

func (m *QueryFundHistoryStatsArg) GetTimeEnd() int64 {
	if m != nil {
		return m.TimeEnd
	}
	return 0
}

type CreditsTask struct {
	SumVar int32 `protobuf:"varint,1,opt,name=sum_var,json=sumVar" json:"sum_var"`
	Reason int32 `protobuf:"varint,2,opt,name=reason" json:"reason"`
}

func (m *CreditsTask) Reset()                    { *m = CreditsTask{} }
func (m *CreditsTask) String() string            { return proto.CompactTextString(m) }
func (*CreditsTask) ProtoMessage()               {}
func (*CreditsTask) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{15} }

func (m *CreditsTask) GetSumVar() int32 {
	if m != nil {
		return m.SumVar
	}
	return 0
}

func (m *CreditsTask) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

type CreditsTaskInfo struct {
	Credits  int32          `protobuf:"varint,1,opt,name=credits" json:"credits"`
	TaskList []*CreditsTask `protobuf:"bytes,2,rep,name=task_list,json=taskList" json:"task_list"`
}

func (m *CreditsTaskInfo) Reset()                    { *m = CreditsTaskInfo{} }
func (m *CreditsTaskInfo) String() string            { return proto.CompactTextString(m) }
func (*CreditsTaskInfo) ProtoMessage()               {}
func (*CreditsTaskInfo) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{16} }

func (m *CreditsTaskInfo) GetCredits() int32 {
	if m != nil {
		return m.Credits
	}
	return 0
}

func (m *CreditsTaskInfo) GetTaskList() []*CreditsTask {
	if m != nil {
		return m.TaskList
	}
	return nil
}

func init() {
	proto.RegisterType((*Fund)(nil), "dbproto.Fund")
	proto.RegisterType((*AccountBankcard)(nil), "dbproto.AccountBankcard")
	proto.RegisterType((*BuycaiTicket)(nil), "dbproto.BuycaiTicket")
	proto.RegisterType((*InsertBuycaiTicketArg)(nil), "dbproto.InsertBuycaiTicketArg")
	proto.RegisterType((*DeleteBuycaiTicketArg)(nil), "dbproto.DeleteBuycaiTicketArg")
	proto.RegisterType((*FundChangeRecord)(nil), "dbproto.FundChangeRecord")
	proto.RegisterType((*FundChangeHistory)(nil), "dbproto.FundChangeHistory")
	proto.RegisterType((*QueryHistoryArg)(nil), "dbproto.QueryHistoryArg")
	proto.RegisterType((*RechargeResult)(nil), "dbproto.RechargeResult")
	proto.RegisterType((*ChangeVirtualFundArg)(nil), "dbproto.ChangeVirtualFundArg")
	proto.RegisterType((*VirtualFundChangeRecord)(nil), "dbproto.VirtualFundChangeRecord")
	proto.RegisterType((*VirtualFund)(nil), "dbproto.VirtualFund")
	proto.RegisterType((*QueryFundHistoryArg)(nil), "dbproto.QueryFundHistoryArg")
	proto.RegisterType((*FundHistoryStats)(nil), "dbproto.FundHistoryStats")
	proto.RegisterType((*QueryFundHistoryStatsArg)(nil), "dbproto.QueryFundHistoryStatsArg")
	proto.RegisterType((*CreditsTask)(nil), "dbproto.CreditsTask")
	proto.RegisterType((*CreditsTaskInfo)(nil), "dbproto.CreditsTaskInfo")
	proto.RegisterEnum("dbproto.FundChangeType", FundChangeType_name, FundChangeType_value)
}

func init() { proto.RegisterFile("fund.proto", fileDescriptor13) }

var fileDescriptor13 = []byte{
	// 1240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x5f, 0x8f, 0xdb, 0x44,
	0x10, 0x27, 0x7f, 0x1d, 0x4f, 0xee, 0x72, 0x39, 0x73, 0xed, 0xe5, 0x40, 0x55, 0x8b, 0xa1, 0xa8,
	0x14, 0xa8, 0x44, 0x79, 0x81, 0x17, 0xa4, 0x24, 0x4d, 0x69, 0x04, 0x4a, 0xc5, 0x5e, 0xda, 0x53,
	0x79, 0x20, 0xda, 0x78, 0xf7, 0x7a, 0x56, 0x62, 0xfb, 0xb4, 0x5e, 0xe7, 0x2e, 0x7c, 0x0e, 0xbe,
	0x01, 0xdf, 0x89, 0x47, 0x5e, 0x79, 0xe6, 0x1b, 0xa0, 0x99, 0x5d, 0x3b, 0x71, 0x7a, 0x2a, 0xe5,
	0x81, 0xb7, 0x9d, 0xdf, 0xfc, 0x76, 0x76, 0x67, 0xe6, 0xb7, 0x63, 0x03, 0x9c, 0x67, 0xb1, 0x78,
	0x74, 0xa9, 0x12, 0x9d, 0x78, 0x8e, 0x98, 0xd3, 0xc2, 0xff, 0xbd, 0x0a, 0xf5, 0xa7, 0x59, 0x2c,
	0xbc, 0x1e, 0x38, 0x73, 0xbe, 0xe4, 0x71, 0x20, 0x7b, 0x95, 0x7b, 0x95, 0x07, 0x15, 0x96, 0x9b,
	0x5e, 0x17, 0x6a, 0x01, 0x0f, 0x7b, 0x55, 0x42, 0x71, 0xe9, 0xdd, 0x87, 0xce, 0xb9, 0x92, 0xf2,
	0x57, 0x39, 0xcb, 0xb7, 0xd4, 0xc8, 0xb9, 0x6f, 0xd0, 0x81, 0xdd, 0x78, 0x07, 0xc0, 0xd2, 0x70,
	0x7f, 0x9d, 0x28, 0xae, 0x41, 0x86, 0x26, 0x8a, 0x4e, 0x34, 0x5f, 0xce, 0x94, 0x0c, 0x2e, 0xb8,
	0x7a, 0x2d, 0x7b, 0x0d, 0x13, 0x85, 0x50, 0x66, 0x41, 0xef, 0x43, 0x70, 0x0d, 0xed, 0x2a, 0x8c,
	0x7b, 0x4d, 0x62, 0xb4, 0x08, 0x38, 0x0b, 0xe3, 0x4d, 0x8c, 0xab, 0x50, 0x5f, 0x08, 0xc5, 0xaf,
	0x7a, 0xce, 0x56, 0x8c, 0x33, 0x0b, 0x6e, 0x62, 0xe0, 0x45, 0x5a, 0x5b, 0x31, 0xf0, 0x1e, 0x1f,
	0xc1, 0x9e, 0x71, 0xce, 0xb3, 0x35, 0xfa, 0x5d, 0xf2, 0xb7, 0x09, 0x1b, 0x10, 0xe4, 0xff, 0x5d,
	0x81, 0x83, 0x7e, 0x10, 0x24, 0x59, 0xac, 0x07, 0x3c, 0x5e, 0x04, 0x5c, 0x09, 0xaf, 0x03, 0xd5,
	0x50, 0x50, 0xad, 0x6a, 0xac, 0x1a, 0x0a, 0xcc, 0x96, 0x1b, 0xca, 0x2c, 0x14, 0x54, 0xad, 0x1a,
	0x73, 0x2d, 0x32, 0x16, 0xde, 0x6d, 0x68, 0xe2, 0xb6, 0x38, 0xa1, 0x5a, 0xb9, 0xcc, 0x5a, 0xde,
	0x07, 0xd0, 0x9a, 0xf3, 0x78, 0x11, 0xf3, 0x48, 0x52, 0x89, 0x1a, 0xac, 0xb0, 0xd1, 0x87, 0x2c,
	0xbd, 0xbe, 0x34, 0xb5, 0x71, 0x59, 0x61, 0x7b, 0x47, 0xd0, 0xb8, 0xbc, 0x48, 0x62, 0x49, 0x25,
	0x71, 0x99, 0x31, 0x3c, 0x0f, 0xea, 0x21, 0x9e, 0xe1, 0x10, 0x48, 0x6b, 0x8c, 0xa2, 0x24, 0x5f,
	0xd2, 0x09, 0x2d, 0x13, 0x25, 0xb7, 0xbd, 0x13, 0x68, 0x71, 0x21, 0x66, 0x3a, 0x8c, 0x24, 0xe5,
	0x5d, 0x63, 0x0e, 0x17, 0x62, 0x1a, 0x46, 0xd2, 0xff, 0xb3, 0x0a, 0x7b, 0x26, 0xfd, 0x69, 0x18,
	0x2c, 0xa4, 0x7e, 0x23, 0xe1, 0x13, 0x68, 0x65, 0x29, 0x4a, 0x20, 0x95, 0x94, 0x6e, 0x83, 0x39,
	0x59, 0x2a, 0x07, 0x3c, 0x95, 0xde, 0x31, 0xe0, 0x72, 0x96, 0x66, 0x73, 0xca, 0xb6, 0xc1, 0x9a,
	0x59, 0x2a, 0x4f, 0xb3, 0x39, 0x36, 0x22, 0xe2, 0xd7, 0xb3, 0x54, 0xf3, 0x60, 0x91, 0xa7, 0x1b,
	0xf1, 0xeb, 0x53, 0xb4, 0xbd, 0xbb, 0xd0, 0x5e, 0xf1, 0x65, 0x28, 0xd0, 0xad, 0x34, 0x65, 0x5c,
	0x63, 0x40, 0xd0, 0x29, 0x22, 0xb8, 0xdb, 0x10, 0x64, 0x2c, 0x28, 0xef, 0x1a, 0x6b, 0x11, 0x30,
	0x8a, 0x45, 0x29, 0x15, 0xa7, 0x94, 0x0a, 0xd6, 0x4a, 0x87, 0x7a, 0x99, 0xa7, 0x6f, 0x8c, 0x9d,
	0x86, 0xb9, 0xbb, 0x0d, 0xfb, 0x18, 0xf6, 0x95, 0x4c, 0xb5, 0x0a, 0x03, 0x3d, 0xa3, 0x0e, 0x00,
	0x5d, 0x77, 0x2f, 0x07, 0xa7, 0xd8, 0x85, 0xbb, 0xd0, 0x2e, 0x48, 0xa1, 0xe8, 0xb5, 0x89, 0x02,
	0x39, 0x34, 0xa6, 0x5b, 0x25, 0x4a, 0x48, 0x85, 0xde, 0x3d, 0x73, 0x2b, 0xb2, 0xc7, 0xc2, 0x1f,
	0xc0, 0xad, 0x71, 0x9c, 0x4a, 0xa5, 0xb7, 0xab, 0xdc, 0x57, 0xaf, 0xbd, 0xcf, 0xa0, 0xbe, 0x0c,
	0x53, 0xdd, 0xab, 0xdc, 0xab, 0x3d, 0x68, 0x3f, 0xbe, 0xf5, 0xc8, 0xbe, 0xd5, 0x47, 0xdb, 0x3c,
	0x46, 0x14, 0xff, 0x73, 0xb8, 0xf5, 0x44, 0x2e, 0xa5, 0x96, 0xbb, 0x31, 0xbc, 0xad, 0x18, 0x35,
	0x4b, 0xfe, 0xab, 0x0e, 0x5d, 0x7c, 0xeb, 0xc3, 0x0b, 0x1e, 0xbf, 0x96, 0x4c, 0x06, 0xc9, 0x7f,
	0x97, 0xf1, 0x37, 0xd0, 0x0e, 0x68, 0xbb, 0xa9, 0x09, 0x76, 0xb7, 0xf3, 0xf8, 0xb8, 0xb8, 0xe2,
	0x26, 0x3c, 0x96, 0x87, 0x41, 0x50, 0xac, 0xb7, 0x07, 0x4c, 0xbd, 0x3c, 0x60, 0xde, 0x1c, 0x27,
	0x8d, 0x9b, 0xc6, 0x89, 0x9d, 0x43, 0xcd, 0xcd, 0x1c, 0x2a, 0x0f, 0x18, 0x67, 0x77, 0xc0, 0x90,
	0x9e, 0x54, 0x11, 0xd4, 0xbc, 0x7b, 0x58, 0x71, 0x95, 0x47, 0xfc, 0x02, 0x3c, 0x24, 0xec, 0x1c,
	0x6e, 0xde, 0x7f, 0x77, 0xc5, 0xd5, 0xd3, 0xd2, 0xf9, 0xc7, 0xe0, 0x20, 0x1b, 0x8f, 0x02, 0xa2,
	0x34, 0x57, 0x5c, 0xe1, 0x39, 0x9f, 0x40, 0x67, 0x2b, 0x0c, 0xfa, 0xdb, 0xe4, 0xdf, 0x2b, 0x42,
	0x20, 0xeb, 0x21, 0x1c, 0xe6, 0x83, 0x6e, 0x66, 0x24, 0x11, 0x27, 0x24, 0x09, 0x97, 0x1d, 0xe4,
	0x8e, 0xe7, 0x88, 0x4f, 0x12, 0xef, 0x53, 0x38, 0x58, 0xc9, 0x58, 0x24, 0x6a, 0x56, 0x88, 0x67,
	0x9f, 0x3a, 0xb1, 0x6f, 0xe0, 0xe7, 0x46, 0x42, 0x9e, 0x0f, 0xfb, 0x59, 0x2a, 0xb7, 0x58, 0x1d,
	0x62, 0xb5, 0x11, 0xcc, 0x39, 0x0f, 0xe1, 0x30, 0x1f, 0x8e, 0x33, 0x7e, 0x79, 0xb9, 0x5c, 0x23,
	0xef, 0x80, 0x78, 0x07, 0xb9, 0xa3, 0x8f, 0xf8, 0x58, 0x60, 0xc5, 0xf2, 0xee, 0xe2, 0x33, 0xea,
	0x9a, 0x17, 0x68, 0x9b, 0x88, 0x2f, 0xe9, 0x3e, 0x74, 0x2c, 0x21, 0x48, 0xa2, 0x48, 0xc6, 0xba,
	0x77, 0x48, 0x19, 0xec, 0x1b, 0x74, 0x68, 0x40, 0x7f, 0x00, 0x87, 0x1b, 0x25, 0x3c, 0x0b, 0x53,
	0x9d, 0xa8, 0xb5, 0xf7, 0x65, 0x49, 0xd6, 0x27, 0x37, 0x68, 0xc6, 0x48, 0xd2, 0xaa, 0xf5, 0x17,
	0x38, 0xf8, 0x29, 0x93, 0x6a, 0x6d, 0xb7, 0xa3, 0xa8, 0xcb, 0xda, 0xac, 0xec, 0x6a, 0xf3, 0x08,
	0x1a, 0xcb, 0x30, 0x0a, 0xb5, 0x9d, 0x46, 0xc6, 0xc0, 0xc1, 0x9b, 0x9c, 0x9f, 0xa7, 0x52, 0xe7,
	0xa3, 0xc8, 0x58, 0xfe, 0x35, 0x74, 0xf2, 0x6f, 0x0c, 0x93, 0x69, 0xb6, 0xd4, 0xff, 0x16, 0xbe,
	0x78, 0xca, 0x71, 0x42, 0x27, 0xb8, 0xf6, 0x29, 0x4f, 0x12, 0x3c, 0x39, 0x4a, 0x62, 0xb9, 0xb6,
	0xdf, 0x41, 0x63, 0xe0, 0xc9, 0x91, 0xd4, 0x17, 0x89, 0x20, 0xc1, 0xbb, 0xcc, 0x5a, 0xfe, 0x15,
	0x1c, 0x99, 0x7c, 0x5f, 0x86, 0x4a, 0x67, 0x7c, 0x89, 0x05, 0x78, 0x87, 0xf4, 0x6e, 0x43, 0x53,
	0x49, 0x9e, 0x26, 0xb1, 0xcd, 0xcf, 0x5a, 0xf8, 0x2e, 0x56, 0x5c, 0xd9, 0xec, 0x70, 0x89, 0x4c,
	0x21, 0x35, 0x0f, 0x97, 0xf9, 0xc1, 0xc6, 0xf2, 0x7f, 0xab, 0xc0, 0xf1, 0xd6, 0x99, 0xa5, 0x39,
	0xb0, 0x89, 0x5e, 0x29, 0x45, 0xdf, 0x91, 0x44, 0xf5, 0x0d, 0x49, 0xd0, 0xc6, 0x88, 0x87, 0x71,
	0x5e, 0x5f, 0x63, 0xe5, 0xd7, 0xaa, 0xdf, 0x74, 0xad, 0x46, 0xe9, 0x5a, 0xdf, 0x42, 0x7b, 0xeb,
	0x56, 0x38, 0x28, 0x02, 0x25, 0x45, 0xa8, 0x53, 0x7b, 0x95, 0xdc, 0xc4, 0x90, 0x8b, 0x6b, 0x61,
	0xd3, 0xc7, 0xa5, 0xff, 0x47, 0x05, 0xde, 0x27, 0x95, 0xe0, 0xce, 0xff, 0x49, 0x29, 0xbb, 0x33,
	0xaf, 0xfe, 0xee, 0x33, 0xef, 0x0e, 0x00, 0x56, 0xad, 0xf4, 0x41, 0x73, 0x11, 0x31, 0xdf, 0xb3,
	0x13, 0x68, 0x91, 0x7b, 0xf3, 0x39, 0x73, 0xd0, 0x1e, 0xc5, 0xc2, 0xd7, 0x66, 0x54, 0xdb, 0x94,
	0x4e, 0x35, 0xd7, 0xa9, 0xf9, 0x90, 0xdb, 0x5f, 0x25, 0xf3, 0x8f, 0x56, 0xd8, 0xe8, 0x2b, 0x7e,
	0x81, 0xcc, 0x9f, 0x5a, 0x61, 0x63, 0xd9, 0xae, 0x6c, 0x7b, 0x2a, 0x0c, 0x97, 0x98, 0xa9, 0xfd,
	0xd9, 0x31, 0xa3, 0xd8, 0x5a, 0x7e, 0x0a, 0xbd, 0xdd, 0x6a, 0xd2, 0xd1, 0xef, 0x50, 0xd2, 0x72,
	0xaa, 0xd5, 0xb7, 0xa5, 0x5a, 0x2b, 0xa7, 0xfa, 0x1d, 0xb4, 0x87, 0xa6, 0xc1, 0x53, 0x9e, 0x2e,
	0x70, 0xcc, 0xa6, 0x59, 0x34, 0x43, 0xed, 0x58, 0x25, 0xa6, 0x59, 0xf4, 0xd2, 0xc8, 0xe7, 0x26,
	0xfd, 0xe3, 0xa0, 0xd8, 0xda, 0x3f, 0x8e, 0xcf, 0x93, 0xb7, 0x48, 0xe8, 0x2b, 0x70, 0x35, 0x4f,
	0x17, 0x33, 0x9a, 0x44, 0x55, 0x9a, 0x44, 0x47, 0x45, 0x27, 0xb7, 0xc2, 0xb0, 0x16, 0xd2, 0x7e,
	0x0c, 0x53, 0xfd, 0x70, 0x05, 0x9d, 0x72, 0x8b, 0xbd, 0x36, 0x38, 0x2f, 0x26, 0x3f, 0x4c, 0x9e,
	0x9f, 0x4d, 0xba, 0xef, 0x79, 0x7b, 0xd0, 0x62, 0xa3, 0xe1, 0xb3, 0x3e, 0xfb, 0x7e, 0xd4, 0xad,
	0x78, 0x0e, 0xd4, 0xce, 0xc6, 0x93, 0x6e, 0x15, 0xe1, 0xb3, 0xf1, 0xf4, 0xd9, 0x13, 0xd6, 0x3f,
	0xeb, 0xd6, 0x3c, 0x80, 0xe6, 0x53, 0x36, 0x1a, 0xfd, 0x3c, 0xea, 0xd6, 0xd1, 0xf3, 0x62, 0x62,
	0xad, 0x06, 0x7a, 0x06, 0x2f, 0x5e, 0x0d, 0xfb, 0xe3, 0x6e, 0x13, 0x3d, 0xfd, 0xe1, 0x74, 0xfc,
	0x72, 0x3c, 0x7d, 0xd5, 0x75, 0xe6, 0x4d, 0xba, 0xd4, 0xd7, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xaf, 0x4d, 0xbb, 0xcf, 0xb8, 0x0b, 0x00, 0x00,
}
