// Code generated by protoc-gen-go. DO NOT EDIT.
// source: buycai.proto

package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserOrderStatus int32

const (
	UserOrderStatus_UO_Doing      UserOrderStatus = 0
	UserOrderStatus_UO_FinishStop UserOrderStatus = 1
	UserOrderStatus_UO_CancelStop UserOrderStatus = 2
	UserOrderStatus_UO_WinStop    UserOrderStatus = 3
	UserOrderStatus_UO_FailStop   UserOrderStatus = 4
)

var UserOrderStatus_name = map[int32]string{
	0: "UO_Doing",
	1: "UO_FinishStop",
	2: "UO_CancelStop",
	3: "UO_WinStop",
	4: "UO_FailStop",
}
var UserOrderStatus_value = map[string]int32{
	"UO_Doing":      0,
	"UO_FinishStop": 1,
	"UO_CancelStop": 2,
	"UO_WinStop":    3,
	"UO_FailStop":   4,
}

func (x UserOrderStatus) String() string {
	return proto.EnumName(UserOrderStatus_name, int32(x))
}
func (UserOrderStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

type VendorOrderStatus int32

const (
	VendorOrderStatus_VO_NotBet     VendorOrderStatus = 0
	VendorOrderStatus_VO_BetFail    VendorOrderStatus = 1
	VendorOrderStatus_VO_BetSuccess VendorOrderStatus = 2
	VendorOrderStatus_VO_NotWin     VendorOrderStatus = 3
	VendorOrderStatus_VO_Win        VendorOrderStatus = 4
)

var VendorOrderStatus_name = map[int32]string{
	0: "VO_NotBet",
	1: "VO_BetFail",
	2: "VO_BetSuccess",
	3: "VO_NotWin",
	4: "VO_Win",
}
var VendorOrderStatus_value = map[string]int32{
	"VO_NotBet":     0,
	"VO_BetFail":    1,
	"VO_BetSuccess": 2,
	"VO_NotWin":     3,
	"VO_Win":        4,
}

func (x VendorOrderStatus) String() string {
	return proto.EnumName(VendorOrderStatus_name, int32(x))
}
func (VendorOrderStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

type Balls struct {
	List []int32 `protobuf:"varint,1,rep,packed,name=list" json:"list"`
}

func (m *Balls) Reset()                    { *m = Balls{} }
func (m *Balls) String() string            { return proto.CompactTextString(m) }
func (*Balls) ProtoMessage()               {}
func (*Balls) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *Balls) GetList() []int32 {
	if m != nil {
		return m.List
	}
	return nil
}

type BuycaiScheme struct {
	Type        string            `protobuf:"bytes,1,opt,name=type" json:"type"`
	SelectBalls map[string]*Balls `protobuf:"bytes,2,rep,name=select_balls,json=selectBalls" json:"select_balls" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Num         int32             `protobuf:"varint,3,opt,name=num" json:"num"`
	Money       float64           `protobuf:"fixed64,4,opt,name=money" json:"money"`
}

func (m *BuycaiScheme) Reset()                    { *m = BuycaiScheme{} }
func (m *BuycaiScheme) String() string            { return proto.CompactTextString(m) }
func (*BuycaiScheme) ProtoMessage()               {}
func (*BuycaiScheme) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *BuycaiScheme) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *BuycaiScheme) GetSelectBalls() map[string]*Balls {
	if m != nil {
		return m.SelectBalls
	}
	return nil
}

func (m *BuycaiScheme) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *BuycaiScheme) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

type IssueMultiple struct {
	Issue    string `protobuf:"bytes,1,opt,name=issue" json:"issue"`
	Multiple int32  `protobuf:"varint,2,opt,name=multiple" json:"multiple"`
}

func (m *IssueMultiple) Reset()                    { *m = IssueMultiple{} }
func (m *IssueMultiple) String() string            { return proto.CompactTextString(m) }
func (*IssueMultiple) ProtoMessage()               {}
func (*IssueMultiple) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *IssueMultiple) GetIssue() string {
	if m != nil {
		return m.Issue
	}
	return ""
}

func (m *IssueMultiple) GetMultiple() int32 {
	if m != nil {
		return m.Multiple
	}
	return 0
}

// 追号订单
type BuycaiUserOrder struct {
	Id             int64            `protobuf:"varint,1,opt,name=id" json:"id"`
	AccountId      int64            `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id"`
	LotteryId      int32            `protobuf:"varint,3,opt,name=lottery_id,json=lotteryId" json:"lottery_id"`
	OrderTime      int64            `protobuf:"varint,4,opt,name=order_time,json=orderTime" json:"order_time"`
	IssueNum       int32            `protobuf:"varint,5,opt,name=issue_num,json=issueNum" json:"issue_num"`
	ChaseNo        int32            `protobuf:"varint,6,opt,name=chase_no,json=chaseNo" json:"chase_no"`
	Cai            float64          `protobuf:"fixed64,7,opt,name=cai" json:"cai"`
	Balance        float64          `protobuf:"fixed64,8,opt,name=balance" json:"balance"`
	SumMoney       float64          `protobuf:"fixed64,9,opt,name=sum_money,json=sumMoney" json:"sum_money"`
	Issues         []*IssueMultiple `protobuf:"bytes,10,rep,name=issues" json:"issues"`
	TicketId       int64            `protobuf:"varint,11,opt,name=ticket_id,json=ticketId" json:"ticket_id"`
	TicketSubMoney float64          `protobuf:"fixed64,12,opt,name=ticket_sub_money,json=ticketSubMoney" json:"ticket_sub_money"`
	SchemeList     []*BuycaiScheme  `protobuf:"bytes,13,rep,name=scheme_list,json=schemeList" json:"scheme_list"`
	Status         int32            `protobuf:"varint,14,opt,name=status" json:"status"`
	IsWinStop      bool             `protobuf:"varint,15,opt,name=is_win_stop,json=isWinStop" json:"is_win_stop"`
	CostCai        float64          `protobuf:"fixed64,16,opt,name=cost_cai,json=costCai" json:"cost_cai"`
	CostBalance    float64          `protobuf:"fixed64,17,opt,name=cost_balance,json=costBalance" json:"cost_balance"`
	TotalWinMoney  float64          `protobuf:"fixed64,18,opt,name=total_win_money,json=totalWinMoney" json:"total_win_money"`
}

func (m *BuycaiUserOrder) Reset()                    { *m = BuycaiUserOrder{} }
func (m *BuycaiUserOrder) String() string            { return proto.CompactTextString(m) }
func (*BuycaiUserOrder) ProtoMessage()               {}
func (*BuycaiUserOrder) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *BuycaiUserOrder) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuycaiUserOrder) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *BuycaiUserOrder) GetLotteryId() int32 {
	if m != nil {
		return m.LotteryId
	}
	return 0
}

func (m *BuycaiUserOrder) GetOrderTime() int64 {
	if m != nil {
		return m.OrderTime
	}
	return 0
}

func (m *BuycaiUserOrder) GetIssueNum() int32 {
	if m != nil {
		return m.IssueNum
	}
	return 0
}

func (m *BuycaiUserOrder) GetChaseNo() int32 {
	if m != nil {
		return m.ChaseNo
	}
	return 0
}

func (m *BuycaiUserOrder) GetCai() float64 {
	if m != nil {
		return m.Cai
	}
	return 0
}

func (m *BuycaiUserOrder) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *BuycaiUserOrder) GetSumMoney() float64 {
	if m != nil {
		return m.SumMoney
	}
	return 0
}

func (m *BuycaiUserOrder) GetIssues() []*IssueMultiple {
	if m != nil {
		return m.Issues
	}
	return nil
}

func (m *BuycaiUserOrder) GetTicketId() int64 {
	if m != nil {
		return m.TicketId
	}
	return 0
}

func (m *BuycaiUserOrder) GetTicketSubMoney() float64 {
	if m != nil {
		return m.TicketSubMoney
	}
	return 0
}

func (m *BuycaiUserOrder) GetSchemeList() []*BuycaiScheme {
	if m != nil {
		return m.SchemeList
	}
	return nil
}

func (m *BuycaiUserOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BuycaiUserOrder) GetIsWinStop() bool {
	if m != nil {
		return m.IsWinStop
	}
	return false
}

func (m *BuycaiUserOrder) GetCostCai() float64 {
	if m != nil {
		return m.CostCai
	}
	return 0
}

func (m *BuycaiUserOrder) GetCostBalance() float64 {
	if m != nil {
		return m.CostBalance
	}
	return 0
}

func (m *BuycaiUserOrder) GetTotalWinMoney() float64 {
	if m != nil {
		return m.TotalWinMoney
	}
	return 0
}

type BuycaiVendorOrder struct {
	Id             int64           `protobuf:"varint,1,opt,name=id" json:"id"`
	AccountId      int64           `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id"`
	UserOrderId    int64           `protobuf:"varint,3,opt,name=user_order_id,json=userOrderId" json:"user_order_id"`
	LotteryId      int32           `protobuf:"varint,4,opt,name=lottery_id,json=lotteryId" json:"lottery_id"`
	Issue          string          `protobuf:"bytes,5,opt,name=issue" json:"issue"`
	SumNum         int32           `protobuf:"varint,6,opt,name=sum_num,json=sumNum" json:"sum_num"`
	Multiple       int32           `protobuf:"varint,7,opt,name=multiple" json:"multiple"`
	Money          float64         `protobuf:"fixed64,8,opt,name=money" json:"money"`
	Cai            float64         `protobuf:"fixed64,9,opt,name=cai" json:"cai"`
	Balance        float64         `protobuf:"fixed64,10,opt,name=balance" json:"balance"`
	ChaseNo        int32           `protobuf:"varint,11,opt,name=chase_no,json=chaseNo" json:"chase_no"`
	Vendor         string          `protobuf:"bytes,12,opt,name=vendor" json:"vendor"`
	SchemeList     []*BuycaiScheme `protobuf:"bytes,13,rep,name=scheme_list,json=schemeList" json:"scheme_list"`
	AddTime        int64           `protobuf:"varint,14,opt,name=add_time,json=addTime" json:"add_time"`
	Status         int32           `protobuf:"varint,15,opt,name=status" json:"status"`
	StatusDesc     string          `protobuf:"bytes,16,opt,name=status_desc,json=statusDesc" json:"status_desc"`
	VendorReqTime  int64           `protobuf:"varint,17,opt,name=vendor_req_time,json=vendorReqTime" json:"vendor_req_time"`
	VendorRespTime int64           `protobuf:"varint,18,opt,name=vendor_resp_time,json=vendorRespTime" json:"vendor_resp_time"`
	VendorRespId   string          `protobuf:"bytes,19,opt,name=vendor_resp_id,json=vendorRespId" json:"vendor_resp_id"`
	WinMoney       float64         `protobuf:"fixed64,20,opt,name=win_money,json=winMoney" json:"win_money"`
}

func (m *BuycaiVendorOrder) Reset()                    { *m = BuycaiVendorOrder{} }
func (m *BuycaiVendorOrder) String() string            { return proto.CompactTextString(m) }
func (*BuycaiVendorOrder) ProtoMessage()               {}
func (*BuycaiVendorOrder) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

func (m *BuycaiVendorOrder) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuycaiVendorOrder) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *BuycaiVendorOrder) GetUserOrderId() int64 {
	if m != nil {
		return m.UserOrderId
	}
	return 0
}

func (m *BuycaiVendorOrder) GetLotteryId() int32 {
	if m != nil {
		return m.LotteryId
	}
	return 0
}

func (m *BuycaiVendorOrder) GetIssue() string {
	if m != nil {
		return m.Issue
	}
	return ""
}

func (m *BuycaiVendorOrder) GetSumNum() int32 {
	if m != nil {
		return m.SumNum
	}
	return 0
}

func (m *BuycaiVendorOrder) GetMultiple() int32 {
	if m != nil {
		return m.Multiple
	}
	return 0
}

func (m *BuycaiVendorOrder) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *BuycaiVendorOrder) GetCai() float64 {
	if m != nil {
		return m.Cai
	}
	return 0
}

func (m *BuycaiVendorOrder) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *BuycaiVendorOrder) GetChaseNo() int32 {
	if m != nil {
		return m.ChaseNo
	}
	return 0
}

func (m *BuycaiVendorOrder) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *BuycaiVendorOrder) GetSchemeList() []*BuycaiScheme {
	if m != nil {
		return m.SchemeList
	}
	return nil
}

func (m *BuycaiVendorOrder) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *BuycaiVendorOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BuycaiVendorOrder) GetStatusDesc() string {
	if m != nil {
		return m.StatusDesc
	}
	return ""
}

func (m *BuycaiVendorOrder) GetVendorReqTime() int64 {
	if m != nil {
		return m.VendorReqTime
	}
	return 0
}

func (m *BuycaiVendorOrder) GetVendorRespTime() int64 {
	if m != nil {
		return m.VendorRespTime
	}
	return 0
}

func (m *BuycaiVendorOrder) GetVendorRespId() string {
	if m != nil {
		return m.VendorRespId
	}
	return ""
}

func (m *BuycaiVendorOrder) GetWinMoney() float64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

type BuycaiVendorResp struct {
	AccountId     int64  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	VendorOrderId int64  `protobuf:"varint,2,opt,name=vendor_order_id,json=vendorOrderId" json:"vendor_order_id"`
	RespTime      int64  `protobuf:"varint,3,opt,name=resp_time,json=respTime" json:"resp_time"`
	RespStatus    string `protobuf:"bytes,4,opt,name=resp_status,json=respStatus" json:"resp_status"`
	RespId        string `protobuf:"bytes,5,opt,name=resp_id,json=respId" json:"resp_id"`
	IsSuccess     bool   `protobuf:"varint,6,opt,name=is_success,json=isSuccess" json:"is_success"`
}

func (m *BuycaiVendorResp) Reset()                    { *m = BuycaiVendorResp{} }
func (m *BuycaiVendorResp) String() string            { return proto.CompactTextString(m) }
func (*BuycaiVendorResp) ProtoMessage()               {}
func (*BuycaiVendorResp) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{5} }

func (m *BuycaiVendorResp) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *BuycaiVendorResp) GetVendorOrderId() int64 {
	if m != nil {
		return m.VendorOrderId
	}
	return 0
}

func (m *BuycaiVendorResp) GetRespTime() int64 {
	if m != nil {
		return m.RespTime
	}
	return 0
}

func (m *BuycaiVendorResp) GetRespStatus() string {
	if m != nil {
		return m.RespStatus
	}
	return ""
}

func (m *BuycaiVendorResp) GetRespId() string {
	if m != nil {
		return m.RespId
	}
	return ""
}

func (m *BuycaiVendorResp) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

type QueryBuycaiOrderArg struct {
	AccountId int64 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	Limit     int32 `protobuf:"varint,2,opt,name=limit" json:"limit"`
	Offset    int32 `protobuf:"varint,3,opt,name=offset" json:"offset"`
}

func (m *QueryBuycaiOrderArg) Reset()                    { *m = QueryBuycaiOrderArg{} }
func (m *QueryBuycaiOrderArg) String() string            { return proto.CompactTextString(m) }
func (*QueryBuycaiOrderArg) ProtoMessage()               {}
func (*QueryBuycaiOrderArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{6} }

func (m *QueryBuycaiOrderArg) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *QueryBuycaiOrderArg) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *QueryBuycaiOrderArg) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type BuycaiOrderStatusArg struct {
	Id     int64 `protobuf:"varint,1,opt,name=id" json:"id"`
	Status int32 `protobuf:"varint,2,opt,name=status" json:"status"`
}

func (m *BuycaiOrderStatusArg) Reset()                    { *m = BuycaiOrderStatusArg{} }
func (m *BuycaiOrderStatusArg) String() string            { return proto.CompactTextString(m) }
func (*BuycaiOrderStatusArg) ProtoMessage()               {}
func (*BuycaiOrderStatusArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{7} }

func (m *BuycaiOrderStatusArg) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuycaiOrderStatusArg) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type BuycaiSaleIssue struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Issue     string `protobuf:"bytes,2,opt,name=issue" json:"issue"`
	StartTime int64  `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time"`
	EndTime   int64  `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time"`
	OpenTime  int64  `protobuf:"varint,5,opt,name=open_time,json=openTime" json:"open_time"`
	OpenBalls string `protobuf:"bytes,6,opt,name=open_balls,json=openBalls" json:"open_balls"`
}

func (m *BuycaiSaleIssue) Reset()                    { *m = BuycaiSaleIssue{} }
func (m *BuycaiSaleIssue) String() string            { return proto.CompactTextString(m) }
func (*BuycaiSaleIssue) ProtoMessage()               {}
func (*BuycaiSaleIssue) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{8} }

func (m *BuycaiSaleIssue) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuycaiSaleIssue) GetIssue() string {
	if m != nil {
		return m.Issue
	}
	return ""
}

func (m *BuycaiSaleIssue) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *BuycaiSaleIssue) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *BuycaiSaleIssue) GetOpenTime() int64 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

func (m *BuycaiSaleIssue) GetOpenBalls() string {
	if m != nil {
		return m.OpenBalls
	}
	return ""
}

type BuycaiQueryIssueArg struct {
	Code  string `protobuf:"bytes,1,opt,name=code" json:"code"`
	Issue string `protobuf:"bytes,2,opt,name=issue" json:"issue"`
}

func (m *BuycaiQueryIssueArg) Reset()                    { *m = BuycaiQueryIssueArg{} }
func (m *BuycaiQueryIssueArg) String() string            { return proto.CompactTextString(m) }
func (*BuycaiQueryIssueArg) ProtoMessage()               {}
func (*BuycaiQueryIssueArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{9} }

func (m *BuycaiQueryIssueArg) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *BuycaiQueryIssueArg) GetIssue() string {
	if m != nil {
		return m.Issue
	}
	return ""
}

type BuycaiSaleList struct {
	List []*BuycaiSaleIssue `protobuf:"bytes,1,rep,name=list" json:"list"`
}

func (m *BuycaiSaleList) Reset()                    { *m = BuycaiSaleList{} }
func (m *BuycaiSaleList) String() string            { return proto.CompactTextString(m) }
func (*BuycaiSaleList) ProtoMessage()               {}
func (*BuycaiSaleList) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{10} }

func (m *BuycaiSaleList) GetList() []*BuycaiSaleIssue {
	if m != nil {
		return m.List
	}
	return nil
}

type BuycaiUpsertIssueArg struct {
	Code      string           `protobuf:"bytes,1,opt,name=code" json:"code"`
	SaleIssue *BuycaiSaleIssue `protobuf:"bytes,2,opt,name=sale_issue,json=saleIssue" json:"sale_issue"`
}

func (m *BuycaiUpsertIssueArg) Reset()                    { *m = BuycaiUpsertIssueArg{} }
func (m *BuycaiUpsertIssueArg) String() string            { return proto.CompactTextString(m) }
func (*BuycaiUpsertIssueArg) ProtoMessage()               {}
func (*BuycaiUpsertIssueArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{11} }

func (m *BuycaiUpsertIssueArg) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *BuycaiUpsertIssueArg) GetSaleIssue() *BuycaiSaleIssue {
	if m != nil {
		return m.SaleIssue
	}
	return nil
}

type BuycaiQueryUserOrderArg struct {
	LotteryId  int32             `protobuf:"varint,1,opt,name=lottery_id,json=lotteryId" json:"lottery_id"`
	StatusList []UserOrderStatus `protobuf:"varint,2,rep,packed,name=status_list,json=statusList,enum=dbproto.UserOrderStatus" json:"status_list"`
}

func (m *BuycaiQueryUserOrderArg) Reset()                    { *m = BuycaiQueryUserOrderArg{} }
func (m *BuycaiQueryUserOrderArg) String() string            { return proto.CompactTextString(m) }
func (*BuycaiQueryUserOrderArg) ProtoMessage()               {}
func (*BuycaiQueryUserOrderArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{12} }

func (m *BuycaiQueryUserOrderArg) GetLotteryId() int32 {
	if m != nil {
		return m.LotteryId
	}
	return 0
}

func (m *BuycaiQueryUserOrderArg) GetStatusList() []UserOrderStatus {
	if m != nil {
		return m.StatusList
	}
	return nil
}

type BuycaiQueryAccountUserOrderArg struct {
	AccountId  int64             `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	LotteryId  int32             `protobuf:"varint,2,opt,name=lottery_id,json=lotteryId" json:"lottery_id"`
	StatusList []UserOrderStatus `protobuf:"varint,3,rep,packed,name=status_list,json=statusList,enum=dbproto.UserOrderStatus" json:"status_list"`
	Limit      int32             `protobuf:"varint,4,opt,name=limit" json:"limit"`
	Offset     int32             `protobuf:"varint,5,opt,name=offset" json:"offset"`
}

func (m *BuycaiQueryAccountUserOrderArg) Reset()         { *m = BuycaiQueryAccountUserOrderArg{} }
func (m *BuycaiQueryAccountUserOrderArg) String() string { return proto.CompactTextString(m) }
func (*BuycaiQueryAccountUserOrderArg) ProtoMessage()    {}
func (*BuycaiQueryAccountUserOrderArg) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{13}
}

func (m *BuycaiQueryAccountUserOrderArg) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *BuycaiQueryAccountUserOrderArg) GetLotteryId() int32 {
	if m != nil {
		return m.LotteryId
	}
	return 0
}

func (m *BuycaiQueryAccountUserOrderArg) GetStatusList() []UserOrderStatus {
	if m != nil {
		return m.StatusList
	}
	return nil
}

func (m *BuycaiQueryAccountUserOrderArg) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *BuycaiQueryAccountUserOrderArg) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type BuycaiQueryVendorOrderArg struct {
	LotteryId  int32               `protobuf:"varint,1,opt,name=lottery_id,json=lotteryId" json:"lottery_id"`
	StatusList []VendorOrderStatus `protobuf:"varint,2,rep,packed,name=status_list,json=statusList,enum=dbproto.VendorOrderStatus" json:"status_list"`
}

func (m *BuycaiQueryVendorOrderArg) Reset()                    { *m = BuycaiQueryVendorOrderArg{} }
func (m *BuycaiQueryVendorOrderArg) String() string            { return proto.CompactTextString(m) }
func (*BuycaiQueryVendorOrderArg) ProtoMessage()               {}
func (*BuycaiQueryVendorOrderArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{14} }

func (m *BuycaiQueryVendorOrderArg) GetLotteryId() int32 {
	if m != nil {
		return m.LotteryId
	}
	return 0
}

func (m *BuycaiQueryVendorOrderArg) GetStatusList() []VendorOrderStatus {
	if m != nil {
		return m.StatusList
	}
	return nil
}

type BuycaiUpdateUserStatusArg struct {
	UserOrderId int64           `protobuf:"varint,1,opt,name=user_order_id,json=userOrderId" json:"user_order_id"`
	Status      UserOrderStatus `protobuf:"varint,2,opt,name=status,enum=dbproto.UserOrderStatus" json:"status"`
}

func (m *BuycaiUpdateUserStatusArg) Reset()                    { *m = BuycaiUpdateUserStatusArg{} }
func (m *BuycaiUpdateUserStatusArg) String() string            { return proto.CompactTextString(m) }
func (*BuycaiUpdateUserStatusArg) ProtoMessage()               {}
func (*BuycaiUpdateUserStatusArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{15} }

func (m *BuycaiUpdateUserStatusArg) GetUserOrderId() int64 {
	if m != nil {
		return m.UserOrderId
	}
	return 0
}

func (m *BuycaiUpdateUserStatusArg) GetStatus() UserOrderStatus {
	if m != nil {
		return m.Status
	}
	return UserOrderStatus_UO_Doing
}

type BuycaiUpdateVendorStatusArg struct {
	VendorOrderId  int64             `protobuf:"varint,1,opt,name=vendor_order_id,json=vendorOrderId" json:"vendor_order_id"`
	Status         VendorOrderStatus `protobuf:"varint,2,opt,name=status,enum=dbproto.VendorOrderStatus" json:"status"`
	VendorReqTime  int64             `protobuf:"varint,3,opt,name=vendor_req_time,json=vendorReqTime" json:"vendor_req_time"`
	VendorRespTime int64             `protobuf:"varint,4,opt,name=vendor_resp_time,json=vendorRespTime" json:"vendor_resp_time"`
	VendorRespId   string            `protobuf:"bytes,5,opt,name=vendor_resp_id,json=vendorRespId" json:"vendor_resp_id"`
	WinMoney       float64           `protobuf:"fixed64,6,opt,name=win_money,json=winMoney" json:"win_money"`
}

func (m *BuycaiUpdateVendorStatusArg) Reset()                    { *m = BuycaiUpdateVendorStatusArg{} }
func (m *BuycaiUpdateVendorStatusArg) String() string            { return proto.CompactTextString(m) }
func (*BuycaiUpdateVendorStatusArg) ProtoMessage()               {}
func (*BuycaiUpdateVendorStatusArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{16} }

func (m *BuycaiUpdateVendorStatusArg) GetVendorOrderId() int64 {
	if m != nil {
		return m.VendorOrderId
	}
	return 0
}

func (m *BuycaiUpdateVendorStatusArg) GetStatus() VendorOrderStatus {
	if m != nil {
		return m.Status
	}
	return VendorOrderStatus_VO_NotBet
}

func (m *BuycaiUpdateVendorStatusArg) GetVendorReqTime() int64 {
	if m != nil {
		return m.VendorReqTime
	}
	return 0
}

func (m *BuycaiUpdateVendorStatusArg) GetVendorRespTime() int64 {
	if m != nil {
		return m.VendorRespTime
	}
	return 0
}

func (m *BuycaiUpdateVendorStatusArg) GetVendorRespId() string {
	if m != nil {
		return m.VendorRespId
	}
	return ""
}

func (m *BuycaiUpdateVendorStatusArg) GetWinMoney() float64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

type VendorOrderRecord struct {
	Id        int64             `protobuf:"varint,1,opt,name=id" json:"id"`
	LotteryId int32             `protobuf:"varint,2,opt,name=lottery_id,json=lotteryId" json:"lottery_id"`
	Issue     string            `protobuf:"bytes,3,opt,name=issue" json:"issue"`
	Money     float64           `protobuf:"fixed64,4,opt,name=money" json:"money"`
	Status    VendorOrderStatus `protobuf:"varint,5,opt,name=status,enum=dbproto.VendorOrderStatus" json:"status"`
	IssueNum  int32             `protobuf:"varint,6,opt,name=issue_num,json=issueNum" json:"issue_num"`
	ChaseNo   int32             `protobuf:"varint,7,opt,name=chase_no,json=chaseNo" json:"chase_no"`
	WinMoney  float64           `protobuf:"fixed64,8,opt,name=win_money,json=winMoney" json:"win_money"`
	AddTime   int64             `protobuf:"varint,9,opt,name=add_time,json=addTime" json:"add_time"`
}

func (m *VendorOrderRecord) Reset()                    { *m = VendorOrderRecord{} }
func (m *VendorOrderRecord) String() string            { return proto.CompactTextString(m) }
func (*VendorOrderRecord) ProtoMessage()               {}
func (*VendorOrderRecord) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{17} }

func (m *VendorOrderRecord) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *VendorOrderRecord) GetLotteryId() int32 {
	if m != nil {
		return m.LotteryId
	}
	return 0
}

func (m *VendorOrderRecord) GetIssue() string {
	if m != nil {
		return m.Issue
	}
	return ""
}

func (m *VendorOrderRecord) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *VendorOrderRecord) GetStatus() VendorOrderStatus {
	if m != nil {
		return m.Status
	}
	return VendorOrderStatus_VO_NotBet
}

func (m *VendorOrderRecord) GetIssueNum() int32 {
	if m != nil {
		return m.IssueNum
	}
	return 0
}

func (m *VendorOrderRecord) GetChaseNo() int32 {
	if m != nil {
		return m.ChaseNo
	}
	return 0
}

func (m *VendorOrderRecord) GetWinMoney() float64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *VendorOrderRecord) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

type UserOrderRecord struct {
	Id        int64           `protobuf:"varint,1,opt,name=id" json:"id"`
	LotteryId int32           `protobuf:"varint,2,opt,name=lottery_id,json=lotteryId" json:"lottery_id"`
	Money     float64         `protobuf:"fixed64,3,opt,name=money" json:"money"`
	Status    UserOrderStatus `protobuf:"varint,4,opt,name=status,enum=dbproto.UserOrderStatus" json:"status"`
	IssueNum  int32           `protobuf:"varint,5,opt,name=issue_num,json=issueNum" json:"issue_num"`
	ChaseNo   int32           `protobuf:"varint,6,opt,name=chase_no,json=chaseNo" json:"chase_no"`
	WinMoney  float64         `protobuf:"fixed64,7,opt,name=win_money,json=winMoney" json:"win_money"`
	AddTime   int64           `protobuf:"varint,8,opt,name=add_time,json=addTime" json:"add_time"`
	CurIssue  string          `protobuf:"bytes,9,opt,name=cur_issue,json=curIssue" json:"cur_issue"`
}

func (m *UserOrderRecord) Reset()                    { *m = UserOrderRecord{} }
func (m *UserOrderRecord) String() string            { return proto.CompactTextString(m) }
func (*UserOrderRecord) ProtoMessage()               {}
func (*UserOrderRecord) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{18} }

func (m *UserOrderRecord) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserOrderRecord) GetLotteryId() int32 {
	if m != nil {
		return m.LotteryId
	}
	return 0
}

func (m *UserOrderRecord) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *UserOrderRecord) GetStatus() UserOrderStatus {
	if m != nil {
		return m.Status
	}
	return UserOrderStatus_UO_Doing
}

func (m *UserOrderRecord) GetIssueNum() int32 {
	if m != nil {
		return m.IssueNum
	}
	return 0
}

func (m *UserOrderRecord) GetChaseNo() int32 {
	if m != nil {
		return m.ChaseNo
	}
	return 0
}

func (m *UserOrderRecord) GetWinMoney() float64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *UserOrderRecord) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *UserOrderRecord) GetCurIssue() string {
	if m != nil {
		return m.CurIssue
	}
	return ""
}

type QueryVendorOrderHistoryArg struct {
	AccountId  int64   `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	LotteryId  int32   `protobuf:"varint,2,opt,name=lottery_id,json=lotteryId" json:"lottery_id"`
	StartTime  int64   `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time"`
	EndTime    int64   `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time"`
	StatusList []int32 `protobuf:"varint,5,rep,packed,name=status_list,json=statusList" json:"status_list"`
	// VendorOrderStatus status = 5;
	Limit  int32 `protobuf:"varint,6,opt,name=limit" json:"limit"`
	Offset int32 `protobuf:"varint,7,opt,name=offset" json:"offset"`
}

func (m *QueryVendorOrderHistoryArg) Reset()                    { *m = QueryVendorOrderHistoryArg{} }
func (m *QueryVendorOrderHistoryArg) String() string            { return proto.CompactTextString(m) }
func (*QueryVendorOrderHistoryArg) ProtoMessage()               {}
func (*QueryVendorOrderHistoryArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{19} }

func (m *QueryVendorOrderHistoryArg) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *QueryVendorOrderHistoryArg) GetLotteryId() int32 {
	if m != nil {
		return m.LotteryId
	}
	return 0
}

func (m *QueryVendorOrderHistoryArg) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *QueryVendorOrderHistoryArg) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *QueryVendorOrderHistoryArg) GetStatusList() []int32 {
	if m != nil {
		return m.StatusList
	}
	return nil
}

func (m *QueryVendorOrderHistoryArg) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *QueryVendorOrderHistoryArg) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type QueryUserOrderHistoryArg struct {
	AccountId  int64   `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	LotteryId  int32   `protobuf:"varint,2,opt,name=lottery_id,json=lotteryId" json:"lottery_id"`
	StartTime  int64   `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time"`
	EndTime    int64   `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time"`
	StatusList []int32 `protobuf:"varint,5,rep,packed,name=status_list,json=statusList" json:"status_list"`
	// UserOrderStatus status = 5;
	Limit   int32 `protobuf:"varint,6,opt,name=limit" json:"limit"`
	Offset  int32 `protobuf:"varint,7,opt,name=offset" json:"offset"`
	IsChase bool  `protobuf:"varint,9,opt,name=is_chase,json=isChase" json:"is_chase"`
}

func (m *QueryUserOrderHistoryArg) Reset()                    { *m = QueryUserOrderHistoryArg{} }
func (m *QueryUserOrderHistoryArg) String() string            { return proto.CompactTextString(m) }
func (*QueryUserOrderHistoryArg) ProtoMessage()               {}
func (*QueryUserOrderHistoryArg) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{20} }

func (m *QueryUserOrderHistoryArg) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *QueryUserOrderHistoryArg) GetLotteryId() int32 {
	if m != nil {
		return m.LotteryId
	}
	return 0
}

func (m *QueryUserOrderHistoryArg) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *QueryUserOrderHistoryArg) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *QueryUserOrderHistoryArg) GetStatusList() []int32 {
	if m != nil {
		return m.StatusList
	}
	return nil
}

func (m *QueryUserOrderHistoryArg) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *QueryUserOrderHistoryArg) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *QueryUserOrderHistoryArg) GetIsChase() bool {
	if m != nil {
		return m.IsChase
	}
	return false
}

type BuycaiIssueInfo struct {
	Issue         string            `protobuf:"bytes,1,opt,name=issue" json:"issue"`
	Multiple      int32             `protobuf:"varint,2,opt,name=multiple" json:"multiple"`
	Money         float64           `protobuf:"fixed64,3,opt,name=money" json:"money"`
	WinMoney      float64           `protobuf:"fixed64,4,opt,name=win_money,json=winMoney" json:"win_money"`
	Status        VendorOrderStatus `protobuf:"varint,5,opt,name=status,enum=dbproto.VendorOrderStatus" json:"status"`
	ChaseNo       int32             `protobuf:"varint,6,opt,name=chase_no,json=chaseNo" json:"chase_no"`
	VendorOrderId int64             `protobuf:"varint,7,opt,name=vendor_order_id,json=vendorOrderId" json:"vendor_order_id"`
}

func (m *BuycaiIssueInfo) Reset()                    { *m = BuycaiIssueInfo{} }
func (m *BuycaiIssueInfo) String() string            { return proto.CompactTextString(m) }
func (*BuycaiIssueInfo) ProtoMessage()               {}
func (*BuycaiIssueInfo) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{21} }

func (m *BuycaiIssueInfo) GetIssue() string {
	if m != nil {
		return m.Issue
	}
	return ""
}

func (m *BuycaiIssueInfo) GetMultiple() int32 {
	if m != nil {
		return m.Multiple
	}
	return 0
}

func (m *BuycaiIssueInfo) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *BuycaiIssueInfo) GetWinMoney() float64 {
	if m != nil {
		return m.WinMoney
	}
	return 0
}

func (m *BuycaiIssueInfo) GetStatus() VendorOrderStatus {
	if m != nil {
		return m.Status
	}
	return VendorOrderStatus_VO_NotBet
}

func (m *BuycaiIssueInfo) GetChaseNo() int32 {
	if m != nil {
		return m.ChaseNo
	}
	return 0
}

func (m *BuycaiIssueInfo) GetVendorOrderId() int64 {
	if m != nil {
		return m.VendorOrderId
	}
	return 0
}

type UserOrderAllIssues struct {
	List []*BuycaiIssueInfo `protobuf:"bytes,1,rep,name=list" json:"list"`
}

func (m *UserOrderAllIssues) Reset()                    { *m = UserOrderAllIssues{} }
func (m *UserOrderAllIssues) String() string            { return proto.CompactTextString(m) }
func (*UserOrderAllIssues) ProtoMessage()               {}
func (*UserOrderAllIssues) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{22} }

func (m *UserOrderAllIssues) GetList() []*BuycaiIssueInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*Balls)(nil), "dbproto.Balls")
	proto.RegisterType((*BuycaiScheme)(nil), "dbproto.BuycaiScheme")
	proto.RegisterType((*IssueMultiple)(nil), "dbproto.IssueMultiple")
	proto.RegisterType((*BuycaiUserOrder)(nil), "dbproto.BuycaiUserOrder")
	proto.RegisterType((*BuycaiVendorOrder)(nil), "dbproto.BuycaiVendorOrder")
	proto.RegisterType((*BuycaiVendorResp)(nil), "dbproto.BuycaiVendorResp")
	proto.RegisterType((*QueryBuycaiOrderArg)(nil), "dbproto.QueryBuycaiOrderArg")
	proto.RegisterType((*BuycaiOrderStatusArg)(nil), "dbproto.BuycaiOrderStatusArg")
	proto.RegisterType((*BuycaiSaleIssue)(nil), "dbproto.BuycaiSaleIssue")
	proto.RegisterType((*BuycaiQueryIssueArg)(nil), "dbproto.BuycaiQueryIssueArg")
	proto.RegisterType((*BuycaiSaleList)(nil), "dbproto.BuycaiSaleList")
	proto.RegisterType((*BuycaiUpsertIssueArg)(nil), "dbproto.BuycaiUpsertIssueArg")
	proto.RegisterType((*BuycaiQueryUserOrderArg)(nil), "dbproto.BuycaiQueryUserOrderArg")
	proto.RegisterType((*BuycaiQueryAccountUserOrderArg)(nil), "dbproto.BuycaiQueryAccountUserOrderArg")
	proto.RegisterType((*BuycaiQueryVendorOrderArg)(nil), "dbproto.BuycaiQueryVendorOrderArg")
	proto.RegisterType((*BuycaiUpdateUserStatusArg)(nil), "dbproto.BuycaiUpdateUserStatusArg")
	proto.RegisterType((*BuycaiUpdateVendorStatusArg)(nil), "dbproto.BuycaiUpdateVendorStatusArg")
	proto.RegisterType((*VendorOrderRecord)(nil), "dbproto.VendorOrderRecord")
	proto.RegisterType((*UserOrderRecord)(nil), "dbproto.UserOrderRecord")
	proto.RegisterType((*QueryVendorOrderHistoryArg)(nil), "dbproto.QueryVendorOrderHistoryArg")
	proto.RegisterType((*QueryUserOrderHistoryArg)(nil), "dbproto.QueryUserOrderHistoryArg")
	proto.RegisterType((*BuycaiIssueInfo)(nil), "dbproto.BuycaiIssueInfo")
	proto.RegisterType((*UserOrderAllIssues)(nil), "dbproto.UserOrderAllIssues")
	proto.RegisterEnum("dbproto.UserOrderStatus", UserOrderStatus_name, UserOrderStatus_value)
	proto.RegisterEnum("dbproto.VendorOrderStatus", VendorOrderStatus_name, VendorOrderStatus_value)
}

func init() { proto.RegisterFile("buycai.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 1495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x57, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0x0e, 0x49, 0x51, 0x24, 0x8f, 0x6c, 0x59, 0x66, 0xfc, 0x27, 0xb4, 0x8d, 0x24, 0xfe, 0x89,
	0x20, 0x10, 0x82, 0x1f, 0xc6, 0x0f, 0x17, 0xe8, 0x15, 0x48, 0x11, 0x27, 0x2d, 0x2a, 0xa0, 0xb1,
	0x51, 0xaa, 0x76, 0x96, 0x2c, 0x45, 0x8e, 0x93, 0x41, 0x28, 0x52, 0xe1, 0x0c, 0x13, 0xe8, 0x25,
	0xba, 0x28, 0xd0, 0xc7, 0xe8, 0x73, 0x74, 0x53, 0xa0, 0x0f, 0x51, 0xb4, 0xbb, 0xbe, 0x41, 0x17,
	0xc5, 0x9c, 0xe1, 0x55, 0x66, 0x15, 0xd7, 0xdd, 0x75, 0x37, 0x73, 0x66, 0x78, 0x2e, 0x1f, 0xbf,
	0x73, 0x19, 0xd8, 0x98, 0xe5, 0xcb, 0x30, 0xa0, 0x87, 0x8b, 0x2c, 0xe5, 0xa9, 0x6d, 0x44, 0x33,
	0x5c, 0xb8, 0xfb, 0xa0, 0x1f, 0x07, 0x71, 0xcc, 0x6c, 0x1b, 0x7a, 0x31, 0x65, 0xdc, 0x51, 0x0e,
	0xb4, 0xb1, 0xee, 0xe1, 0xda, 0xfd, 0x55, 0x81, 0x8d, 0x63, 0xfc, 0x6c, 0x1a, 0xbe, 0x24, 0x73,
	0x22, 0x2e, 0xf1, 0xe5, 0x82, 0x38, 0xca, 0x81, 0x32, 0xb6, 0x3c, 0x5c, 0xdb, 0x13, 0xd8, 0x60,
	0x24, 0x26, 0x21, 0xf7, 0x67, 0x42, 0x91, 0xa3, 0x1e, 0x68, 0xe3, 0xc1, 0xd1, 0x83, 0xc3, 0xc2,
	0xc2, 0x61, 0x53, 0xc1, 0xe1, 0x14, 0x6f, 0xa2, 0xc5, 0xcf, 0x12, 0x9e, 0x2d, 0xbd, 0x01, 0xab,
	0x25, 0xf6, 0x08, 0xb4, 0x24, 0x9f, 0x3b, 0xda, 0x81, 0x32, 0xd6, 0x3d, 0xb1, 0xb4, 0x77, 0x40,
	0x9f, 0xa7, 0x09, 0x59, 0x3a, 0xbd, 0x03, 0x65, 0xac, 0x78, 0x72, 0xb3, 0x77, 0x02, 0xa3, 0x55,
	0x45, 0xe2, 0xdb, 0x57, 0x64, 0x59, 0x78, 0x26, 0x96, 0xf6, 0x7d, 0xd0, 0xdf, 0x04, 0x71, 0x4e,
	0x1c, 0xf5, 0x40, 0x19, 0x0f, 0x8e, 0x86, 0xb5, 0x47, 0xe2, 0x2b, 0x4f, 0x1e, 0x7e, 0xac, 0x7e,
	0xa8, 0xb8, 0x8f, 0x61, 0x73, 0xc2, 0x58, 0x4e, 0x9e, 0xe5, 0x31, 0xa7, 0x8b, 0x98, 0x08, 0xb3,
	0x54, 0x08, 0x0a, 0x75, 0x72, 0x63, 0xef, 0x81, 0x39, 0x2f, 0x6e, 0xa0, 0x4e, 0xdd, 0xab, 0xf6,
	0xee, 0x4f, 0x3d, 0xd8, 0x92, 0x91, 0x9e, 0x31, 0x92, 0x9d, 0x66, 0x11, 0xc9, 0xec, 0x21, 0xa8,
	0x34, 0x42, 0x15, 0x9a, 0xa7, 0xd2, 0xc8, 0xbe, 0x03, 0x10, 0x84, 0x61, 0x9a, 0x27, 0xdc, 0xa7,
	0x11, 0x6a, 0xd0, 0x3c, 0xab, 0x90, 0x4c, 0xf0, 0x38, 0x4e, 0x39, 0x27, 0xd9, 0x52, 0x1c, 0x4b,
	0x10, 0xac, 0x42, 0x22, 0x8f, 0x53, 0xa1, 0xd6, 0xe7, 0x74, 0x4e, 0x10, 0x0f, 0xcd, 0xb3, 0x50,
	0xf2, 0x35, 0x9d, 0x13, 0x7b, 0x1f, 0x2c, 0xf4, 0xd2, 0x17, 0x08, 0xea, 0xd2, 0x3b, 0x14, 0x9c,
	0xe4, 0x73, 0x7b, 0x17, 0xcc, 0xf0, 0x65, 0xc0, 0x88, 0x9f, 0xa4, 0x4e, 0x1f, 0xcf, 0x0c, 0xdc,
	0x9f, 0xa4, 0x02, 0xb7, 0x30, 0xa0, 0x8e, 0x81, 0xf8, 0x8a, 0xa5, 0xed, 0x80, 0x31, 0x0b, 0xe2,
	0x20, 0x09, 0x89, 0x63, 0xa2, 0xb4, 0xdc, 0x0a, 0x1b, 0x2c, 0x9f, 0xfb, 0xf2, 0x8f, 0x58, 0x78,
	0x66, 0xb2, 0x7c, 0xfe, 0x4c, 0xec, 0xed, 0x43, 0xe8, 0xa3, 0x3d, 0xe6, 0x00, 0x32, 0xe0, 0x56,
	0x85, 0x77, 0x0b, 0x5b, 0xaf, 0xb8, 0x25, 0x94, 0x71, 0x1a, 0xbe, 0x22, 0x08, 0xc6, 0x00, 0xc3,
	0x31, 0xa5, 0x60, 0x12, 0xd9, 0x63, 0x18, 0x15, 0x87, 0x2c, 0x9f, 0x15, 0x06, 0x37, 0xd0, 0xe0,
	0x50, 0xca, 0xa7, 0xf9, 0x4c, 0x9a, 0x7d, 0x1f, 0x06, 0x0c, 0xb9, 0xe5, 0x23, 0x7d, 0x37, 0xd1,
	0xf6, 0x7f, 0x3a, 0xd9, 0xe7, 0x81, 0xbc, 0xf9, 0x25, 0x65, 0xdc, 0xbe, 0x05, 0x7d, 0xc6, 0x03,
	0x9e, 0x33, 0x67, 0x88, 0x80, 0x14, 0x3b, 0xfb, 0x2e, 0x0c, 0x28, 0xf3, 0xdf, 0xd2, 0xc4, 0x67,
	0x3c, 0x5d, 0x38, 0x5b, 0x07, 0xca, 0xd8, 0xf4, 0x2c, 0xca, 0x9e, 0xd3, 0x64, 0xca, 0xd3, 0x05,
	0x42, 0x99, 0x32, 0xee, 0x0b, 0xd0, 0x46, 0x12, 0x1e, 0xb1, 0x7f, 0x12, 0x50, 0xfb, 0xbf, 0xb0,
	0x81, 0x47, 0x25, 0x7a, 0xdb, 0x78, 0x3c, 0x10, 0xb2, 0xe3, 0x02, 0xc1, 0x07, 0xb0, 0xc5, 0x53,
	0x1e, 0xc4, 0x68, 0x40, 0x86, 0x65, 0xe3, 0xad, 0x4d, 0x14, 0x3f, 0xa7, 0x09, 0x46, 0xe5, 0xfe,
	0xd6, 0x83, 0x6d, 0xe9, 0xfa, 0x39, 0x49, 0xa2, 0xf4, 0x7a, 0x84, 0x72, 0x61, 0x33, 0x67, 0x24,
	0xf3, 0x25, 0x6d, 0x0a, 0x4e, 0x69, 0xde, 0x20, 0x2f, 0x19, 0x7a, 0x89, 0x74, 0xbd, 0x55, 0xd2,
	0x55, 0x89, 0xa0, 0x37, 0x13, 0xe1, 0x36, 0x18, 0x82, 0x07, 0x82, 0x69, 0xfd, 0x02, 0xbc, 0x7c,
	0x2e, 0x78, 0xd6, 0xcc, 0x10, 0xa3, 0x9d, 0x21, 0x75, 0x2a, 0x9b, 0x8d, 0x54, 0x2e, 0xe9, 0x67,
	0x75, 0xd2, 0x0f, 0xda, 0xf4, 0x6b, 0xb2, 0x78, 0xd0, 0x66, 0xf1, 0x2d, 0xe8, 0xbf, 0x41, 0xa0,
	0x90, 0x25, 0x96, 0x57, 0xec, 0xae, 0xcd, 0x8e, 0x5d, 0x30, 0x83, 0x28, 0x92, 0xa9, 0x36, 0x44,
	0xd4, 0x8c, 0x20, 0x8a, 0x30, 0xd1, 0x6a, 0xe2, 0x6c, 0xb5, 0x88, 0x73, 0x0f, 0x06, 0x72, 0xe5,
	0x47, 0x84, 0x85, 0xc8, 0x0d, 0xcb, 0x03, 0x29, 0x7a, 0x4a, 0x58, 0x28, 0xfe, 0xbd, 0xf4, 0xca,
	0xcf, 0xc8, 0x6b, 0xa9, 0x7a, 0x1b, 0x55, 0x6f, 0x4a, 0xb1, 0x47, 0x5e, 0xa3, 0x81, 0x31, 0x8c,
	0xaa, 0x7b, 0x6c, 0x21, 0x2f, 0xda, 0x78, 0x71, 0x58, 0x5e, 0x64, 0x0b, 0xbc, 0x79, 0x1f, 0x86,
	0xcd, 0x9b, 0x34, 0x72, 0x6e, 0xa2, 0xd5, 0x8d, 0xfa, 0xde, 0x24, 0x12, 0x89, 0x56, 0xb3, 0x6d,
	0x47, 0x66, 0xed, 0xdb, 0x92, 0x68, 0x3f, 0x2b, 0x30, 0x6a, 0x12, 0x4d, 0x7c, 0xb3, 0xc2, 0x2b,
	0x65, 0x95, 0x57, 0x75, 0x20, 0x15, 0xb3, 0xd4, 0x66, 0x20, 0x25, 0xb7, 0xf6, 0xc1, 0xaa, 0x23,
	0x90, 0xdc, 0x33, 0xb3, 0xd2, 0xf7, 0x7b, 0x30, 0xc0, 0xc3, 0x02, 0xcb, 0x9e, 0x84, 0x4b, 0x88,
	0xa6, 0x12, 0xcf, 0xdb, 0x60, 0x94, 0x51, 0x49, 0xf2, 0xf5, 0x33, 0x19, 0xcf, 0x1d, 0x00, 0xca,
	0x7c, 0x96, 0x87, 0x21, 0x61, 0x0c, 0x09, 0x88, 0x09, 0x3a, 0x95, 0x02, 0x77, 0x06, 0x37, 0xbf,
	0xca, 0x49, 0xb6, 0x94, 0x51, 0xa1, 0x2f, 0x8f, 0xb3, 0x17, 0xef, 0x8a, 0x69, 0x07, 0xf4, 0x98,
	0xce, 0x29, 0x2f, 0x0a, 0xbb, 0xdc, 0x88, 0x7f, 0x9d, 0x5e, 0x5c, 0x30, 0xc2, 0x8b, 0x72, 0x5c,
	0xec, 0xdc, 0x47, 0xb0, 0xd3, 0x50, 0x2f, 0x1d, 0x16, 0x46, 0x56, 0x13, 0xb4, 0xe6, 0x8a, 0xda,
	0xe4, 0x8a, 0xfb, 0x83, 0x52, 0x76, 0x8b, 0x69, 0x10, 0x13, 0xac, 0x8f, 0x97, 0xbe, 0xad, 0x52,
	0x4f, 0x6d, 0xa6, 0xde, 0x1d, 0x10, 0x94, 0xca, 0x78, 0x13, 0x54, 0x0b, 0x25, 0x88, 0xea, 0x2e,
	0x98, 0x24, 0x89, 0x9a, 0x2d, 0xc2, 0x20, 0x49, 0x54, 0x36, 0x88, 0x74, 0x41, 0x12, 0x79, 0xa6,
	0xcb, 0xbf, 0x21, 0x04, 0x78, 0x28, 0x9a, 0x8b, 0x38, 0x94, 0x2d, 0xbc, 0x8f, 0x16, 0xf1, 0x3a,
	0xf6, 0x4a, 0xf7, 0x53, 0xb8, 0x29, 0xdd, 0x45, 0x64, 0xd1, 0x5f, 0x11, 0xae, 0x0d, 0xbd, 0x30,
	0x8d, 0xaa, 0x71, 0x40, 0xac, 0xbb, 0xdd, 0x76, 0x1f, 0xc1, 0xb0, 0x8e, 0x17, 0x33, 0xec, 0x7f,
	0x8d, 0x79, 0x63, 0x70, 0xe4, 0xac, 0xa6, 0x64, 0x09, 0x4b, 0x31, 0x89, 0x84, 0x25, 0xe0, 0x67,
	0x0b, 0x46, 0x32, 0xbe, 0xd6, 0x83, 0x0f, 0x00, 0x58, 0x10, 0x13, 0xbf, 0x76, 0x63, 0x9d, 0x7e,
	0x8b, 0x95, 0x4b, 0x97, 0xc1, 0xed, 0x46, 0x94, 0x55, 0x1f, 0x2f, 0xd8, 0xd3, 0x28, 0x93, 0xca,
	0x6a, 0x99, 0xfc, 0xa8, 0xca, 0x7d, 0x8c, 0x49, 0x8c, 0x40, 0xc3, 0x86, 0xcd, 0x4a, 0x95, 0x64,
	0x4a, 0x59, 0x15, 0x04, 0x0e, 0xee, 0x8f, 0x0a, 0xdc, 0x6d, 0x58, 0x7d, 0x2c, 0x19, 0xb9, 0x6a,
	0x7c, 0x1d, 0x75, 0xdb, 0xbe, 0xa9, 0xef, 0xf0, 0x4d, 0xbb, 0xba, 0x6f, 0x75, 0x52, 0xf4, 0xba,
	0x93, 0x42, 0x6f, 0x25, 0xc5, 0x5b, 0xd8, 0x6d, 0x04, 0xd2, 0xe8, 0x5b, 0x57, 0x00, 0xf0, 0x93,
	0x2e, 0x00, 0xf7, 0x2a, 0x27, 0x1b, 0xca, 0x3a, 0x20, 0x7c, 0x5d, 0x1a, 0x3e, 0x5b, 0x44, 0x01,
	0x27, 0x22, 0xa2, 0x3a, 0x25, 0x2f, 0x35, 0x41, 0xe5, 0x72, 0x13, 0xfc, 0x7f, 0x2b, 0x4d, 0xd7,
	0xa1, 0x53, 0x26, 0xf0, 0xb7, 0x2a, 0xec, 0x37, 0x6d, 0x4a, 0x07, 0x6b, 0xab, 0x1d, 0x25, 0x52,
	0xe9, 0x2a, 0x91, 0x47, 0x2b, 0x96, 0xd7, 0x85, 0x5c, 0x36, 0x9a, 0x8e, 0x3e, 0xa2, 0x5d, 0xb5,
	0x8f, 0xf4, 0xae, 0xd8, 0x47, 0xf4, 0x77, 0xf5, 0x91, 0xfe, 0x4a, 0x1f, 0xf9, 0x4e, 0x85, 0xed,
	0x86, 0xcb, 0x1e, 0x09, 0xd3, 0x2c, 0xea, 0x1a, 0x58, 0xd6, 0x51, 0xb5, 0xaa, 0x1d, 0x5a, 0xb3,
	0xe4, 0x75, 0xbe, 0x01, 0x1a, 0xc8, 0xe9, 0x57, 0x46, 0xae, 0x35, 0x23, 0xf7, 0xd7, 0xcc, 0xc8,
	0x46, 0x7b, 0xba, 0x68, 0x45, 0x6e, 0xb6, 0x23, 0x6f, 0x8d, 0x0a, 0x56, 0x6b, 0x54, 0x70, 0xbf,
	0x57, 0x61, 0xab, 0x62, 0xd0, 0xb5, 0x21, 0x91, 0x66, 0xb5, 0x66, 0xf0, 0x35, 0x61, 0x7b, 0x57,
	0x23, 0xec, 0xb5, 0x9f, 0x07, 0xad, 0xd0, 0x8d, 0x35, 0xa1, 0x9b, 0xed, 0x29, 0x69, 0x1f, 0xac,
	0x30, 0xcf, 0x8a, 0x1a, 0x6c, 0xe1, 0xef, 0x34, 0xc3, 0x3c, 0x93, 0x85, 0xf6, 0x17, 0x05, 0xf6,
	0x56, 0x8b, 0xc4, 0x17, 0x94, 0xf1, 0x34, 0x5b, 0xfe, 0xf3, 0x7a, 0x77, 0xfd, 0x0e, 0x79, 0xaf,
	0x5d, 0x84, 0x74, 0x7c, 0x09, 0x77, 0xd6, 0xc3, 0x7e, 0x77, 0x3d, 0x34, 0x5a, 0xf5, 0xf0, 0x0f,
	0x05, 0x9c, 0x76, 0x27, 0xf9, 0xd7, 0xc5, 0x28, 0x2c, 0x51, 0xe6, 0x23, 0x59, 0xf0, 0x2f, 0x9b,
	0x9e, 0x41, 0xd9, 0x13, 0xb1, 0x75, 0x7f, 0xaf, 0x66, 0x1c, 0xfc, 0xe9, 0x93, 0xe4, 0x22, 0xfd,
	0xfb, 0xef, 0xea, 0xbf, 0xe0, 0x7f, 0x8b, 0x95, 0xbd, 0x15, 0x56, 0x5e, 0xa7, 0x32, 0xac, 0xc9,
	0x80, 0x8e, 0x52, 0x6e, 0x74, 0x94, 0x72, 0xf7, 0x18, 0xec, 0xba, 0x6b, 0xc7, 0xf1, 0x44, 0xbe,
	0x72, 0xd7, 0x8f, 0x39, 0x15, 0x32, 0x72, 0xcc, 0x79, 0x78, 0xd1, 0xa8, 0x17, 0xc5, 0x18, 0xbc,
	0x01, 0xe6, 0xd9, 0xa9, 0xff, 0x34, 0xa5, 0xc9, 0x8b, 0xd1, 0x0d, 0x7b, 0x1b, 0x36, 0xcf, 0x4e,
	0xfd, 0xcf, 0x69, 0x42, 0xd9, 0x4b, 0xf1, 0x1c, 0x1d, 0x29, 0x85, 0xe8, 0x89, 0x78, 0x21, 0xc5,
	0x28, 0x52, 0xed, 0x21, 0xc0, 0xd9, 0xa9, 0x5f, 0xbc, 0x58, 0x47, 0x9a, 0xbd, 0x05, 0x03, 0xf1,
	0x55, 0x40, 0xe5, 0x85, 0xde, 0xc3, 0x6f, 0x5a, 0xc5, 0xba, 0xb0, 0xb4, 0x09, 0xd6, 0xf9, 0xa9,
	0x7f, 0x92, 0xf2, 0x63, 0xc2, 0x47, 0x37, 0x84, 0x92, 0xf3, 0x53, 0xff, 0x98, 0x70, 0xf1, 0x9d,
	0xb4, 0x23, 0xf7, 0xc5, 0xa0, 0x3d, 0x52, 0xeb, 0x2f, 0x9e, 0xd3, 0x64, 0xa4, 0xd9, 0x00, 0xfd,
	0x73, 0x34, 0x3b, 0xea, 0xcd, 0xfa, 0x18, 0xe6, 0x7b, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x00,
	0xac, 0xd7, 0x07, 0x77, 0x12, 0x00, 0x00,
}
