// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lottery_options.proto

package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LotteryOptions struct {
	Id          int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	LotteryName string `protobuf:"bytes,2,opt,name=lottery_name,json=lotteryName" json:"lottery_name"`
	IsPlusAward bool   `protobuf:"varint,3,opt,name=is_plus_award,json=isPlusAward" json:"is_plus_award"`
	Info        string `protobuf:"bytes,4,opt,name=info" json:"info"`
	StopSale    bool   `protobuf:"varint,5,opt,name=stop_sale,json=stopSale" json:"stop_sale"`
	CreateTime  int64  `protobuf:"varint,6,opt,name=create_time,json=createTime" json:"create_time"`
	UpdateTime  int64  `protobuf:"varint,7,opt,name=update_time,json=updateTime" json:"update_time"`
}

func (m *LotteryOptions) Reset()                    { *m = LotteryOptions{} }
func (m *LotteryOptions) String() string            { return proto.CompactTextString(m) }
func (*LotteryOptions) ProtoMessage()               {}
func (*LotteryOptions) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

func (m *LotteryOptions) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LotteryOptions) GetLotteryName() string {
	if m != nil {
		return m.LotteryName
	}
	return ""
}

func (m *LotteryOptions) GetIsPlusAward() bool {
	if m != nil {
		return m.IsPlusAward
	}
	return false
}

func (m *LotteryOptions) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *LotteryOptions) GetStopSale() bool {
	if m != nil {
		return m.StopSale
	}
	return false
}

func (m *LotteryOptions) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *LotteryOptions) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type HomeParams struct {
	Lottery []*LotteryOptions `protobuf:"bytes,1,rep,name=lottery" json:"lottery"`
}

func (m *HomeParams) Reset()                    { *m = HomeParams{} }
func (m *HomeParams) String() string            { return proto.CompactTextString(m) }
func (*HomeParams) ProtoMessage()               {}
func (*HomeParams) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{1} }

func (m *HomeParams) GetLottery() []*LotteryOptions {
	if m != nil {
		return m.Lottery
	}
	return nil
}

func init() {
	proto.RegisterType((*LotteryOptions)(nil), "dbproto.LotteryOptions")
	proto.RegisterType((*HomeParams)(nil), "dbproto.HomeParams")
}

func init() { proto.RegisterFile("lottery_options.proto", fileDescriptor16) }

var fileDescriptor16 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x14, 0x45, 0x49, 0x3b, 0x4e, 0x67, 0x5e, 0x75, 0x16, 0x01, 0x31, 0xe0, 0xc2, 0xda, 0x55, 0x57,
	0x05, 0xf5, 0x03, 0xc4, 0x9d, 0x0b, 0xd1, 0xa1, 0xba, 0x0f, 0x19, 0xf3, 0x84, 0x40, 0xd2, 0x84,
	0x24, 0x45, 0xfc, 0x55, 0xbf, 0x46, 0x9a, 0x74, 0x84, 0xd9, 0x3d, 0x4e, 0xce, 0x0d, 0x97, 0x0b,
	0x97, 0xda, 0xc6, 0x88, 0xfe, 0x87, 0x5b, 0x17, 0x95, 0x1d, 0x43, 0xef, 0xbc, 0x8d, 0x96, 0x56,
	0xf2, 0x90, 0x8e, 0xf6, 0x97, 0xc0, 0xee, 0x25, 0x2b, 0x6f, 0xd9, 0xa0, 0x3b, 0x28, 0x94, 0x64,
	0xa4, 0x21, 0x5d, 0x39, 0x14, 0x4a, 0xd2, 0x5b, 0x38, 0x3f, 0x7e, 0x32, 0x0a, 0x83, 0xac, 0x68,
	0x48, 0xb7, 0x1d, 0xea, 0x85, 0xbd, 0x0a, 0x83, 0xb4, 0x85, 0x0b, 0x15, 0xb8, 0xd3, 0x53, 0xe0,
	0xe2, 0x5b, 0x78, 0xc9, 0xca, 0x86, 0x74, 0x9b, 0xa1, 0x56, 0x61, 0xaf, 0xa7, 0xf0, 0x34, 0x23,
	0x4a, 0x61, 0xa5, 0xc6, 0x2f, 0xcb, 0x56, 0x29, 0x9e, 0x6e, 0x7a, 0x0d, 0xdb, 0x10, 0xad, 0xe3,
	0x41, 0x68, 0x64, 0x67, 0x29, 0xb3, 0x99, 0xc1, 0xbb, 0xd0, 0x48, 0x6f, 0xa0, 0xfe, 0xf4, 0x28,
	0x22, 0xf2, 0xa8, 0x0c, 0xb2, 0x75, 0x2a, 0x04, 0x19, 0x7d, 0x28, 0x93, 0x84, 0xc9, 0xc9, 0x7f,
	0xa1, 0xca, 0x42, 0x46, 0xb3, 0xd0, 0x3e, 0x02, 0x3c, 0x5b, 0x83, 0x7b, 0xe1, 0x85, 0x09, 0xf4,
	0x0e, 0xaa, 0xa5, 0x33, 0x23, 0x4d, 0xd9, 0xd5, 0xf7, 0x57, 0xfd, 0xb2, 0x42, 0x7f, 0xba, 0xc0,
	0x70, 0xf4, 0x0e, 0xeb, 0xf4, 0xfc, 0xf0, 0x17, 0x00, 0x00, 0xff, 0xff, 0xde, 0x1c, 0x30, 0x51,
	0x46, 0x01, 0x00, 0x00,
}
