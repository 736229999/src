// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cdkey_batch.proto

package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CdkeyBatch struct {
	Id             int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	MaxExchange    int32  `protobuf:"varint,2,opt,name=max_exchange,json=maxExchange" json:"max_exchange"`
	Title          string `protobuf:"bytes,3,opt,name=title" json:"title"`
	GiftTemplateId int64  `protobuf:"varint,4,opt,name=gift_template_id,json=giftTemplateId" json:"gift_template_id"`
	ValidStart     int32  `protobuf:"varint,5,opt,name=valid_start,json=validStart" json:"valid_start"`
	ValidEnd       int32  `protobuf:"varint,6,opt,name=valid_end,json=validEnd" json:"valid_end"`
	AddTime        int32  `protobuf:"varint,7,opt,name=add_time,json=addTime" json:"add_time"`
	CdkeyDesc      string `protobuf:"bytes,8,opt,name=cdkey_desc,json=cdkeyDesc" json:"cdkey_desc"`
}

func (m *CdkeyBatch) Reset()                    { *m = CdkeyBatch{} }
func (m *CdkeyBatch) String() string            { return proto.CompactTextString(m) }
func (*CdkeyBatch) ProtoMessage()               {}
func (*CdkeyBatch) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *CdkeyBatch) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CdkeyBatch) GetMaxExchange() int32 {
	if m != nil {
		return m.MaxExchange
	}
	return 0
}

func (m *CdkeyBatch) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CdkeyBatch) GetGiftTemplateId() int64 {
	if m != nil {
		return m.GiftTemplateId
	}
	return 0
}

func (m *CdkeyBatch) GetValidStart() int32 {
	if m != nil {
		return m.ValidStart
	}
	return 0
}

func (m *CdkeyBatch) GetValidEnd() int32 {
	if m != nil {
		return m.ValidEnd
	}
	return 0
}

func (m *CdkeyBatch) GetAddTime() int32 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *CdkeyBatch) GetCdkeyDesc() string {
	if m != nil {
		return m.CdkeyDesc
	}
	return ""
}

func init() {
	proto.RegisterType((*CdkeyBatch)(nil), "dbproto.CdkeyBatch")
}

func init() { proto.RegisterFile("cdkey_batch.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x90, 0xbd, 0x4e, 0xc3, 0x40,
	0x0c, 0x80, 0x95, 0x94, 0x34, 0x89, 0x8b, 0x2a, 0x38, 0x31, 0x1c, 0x42, 0x88, 0xc0, 0x94, 0x89,
	0x85, 0x37, 0x00, 0x3a, 0xb0, 0x86, 0xee, 0x27, 0xe7, 0x6c, 0xda, 0x13, 0xb9, 0xb4, 0x6a, 0x2c,
	0x14, 0x9e, 0x9c, 0x15, 0xc5, 0xe9, 0x66, 0x7f, 0x9f, 0xe5, 0x3f, 0xb8, 0xf6, 0xf4, 0xcd, 0xbf,
	0xae, 0x45, 0xf1, 0xfb, 0xe7, 0xe3, 0xe9, 0x20, 0x07, 0x93, 0x53, 0xab, 0xc1, 0xd3, 0x5f, 0x02,
	0xf0, 0x36, 0xe9, 0xd7, 0xc9, 0x9a, 0x35, 0xa4, 0x81, 0x6c, 0x52, 0x25, 0xf5, 0xa2, 0x49, 0x03,
	0x99, 0x47, 0xb8, 0x8c, 0x38, 0x3a, 0x1e, 0xfd, 0x1e, 0xfb, 0x1d, 0xdb, 0xb4, 0x4a, 0xea, 0xac,
	0x59, 0x45, 0x1c, 0x37, 0x67, 0x64, 0x6e, 0x20, 0x93, 0x20, 0x1d, 0xdb, 0x45, 0x95, 0xd4, 0x65,
	0x33, 0x27, 0xa6, 0x86, 0xab, 0x5d, 0xf8, 0x12, 0x27, 0x1c, 0x8f, 0x1d, 0x0a, 0xbb, 0x40, 0xf6,
	0x42, 0xdb, 0xae, 0x27, 0xbe, 0x3d, 0xe3, 0x0f, 0x32, 0x0f, 0xb0, 0xfa, 0xc1, 0x2e, 0x90, 0x1b,
	0x04, 0x4f, 0x62, 0x33, 0x9d, 0x00, 0x8a, 0x3e, 0x27, 0x62, 0xee, 0xa0, 0x9c, 0x0b, 0xb8, 0x27,
	0xbb, 0x54, 0x5d, 0x28, 0xd8, 0xf4, 0x64, 0x6e, 0xa1, 0x40, 0x22, 0x27, 0x21, 0xb2, 0xcd, 0xd5,
	0xe5, 0x48, 0xb4, 0x0d, 0x91, 0xcd, 0x3d, 0xc0, 0x7c, 0x38, 0xf1, 0xe0, 0x6d, 0xa1, 0xdb, 0x95,
	0x4a, 0xde, 0x79, 0xf0, 0xed, 0x52, 0x1f, 0xf0, 0xf2, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x30,
	0x8a, 0x0f, 0x1e, 0x01, 0x00, 0x00,
}
