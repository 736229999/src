// Code generated by protoc-gen-go. DO NOT EDIT.
// source: activity.proto

/*
Package dbproto is a generated protocol buffer package.

It is generated from these files:
	activity.proto
	agent_activity.proto
	agent_buycai.proto
	agent_discover.proto
	agent_notify.proto
	agent_options.proto
	agent_recharge.proto
	agent_thirdapi.proto
	agent_usercenter.proto
	base.proto
	buycai.proto
	cdkey_batch.proto
	discover.proto
	fund.proto
	gift.proto
	gift_template.proto
	lottery_options.proto
	notify.proto
	opencai.proto
	options.proto
	recharge.proto
	thirdapi.proto
	user.proto
	user_gift.proto
	withdraw.proto

It has these top-level messages:
	Task
	Activity
	ActivityList
	ActivityAccount
	UserBaseInfo
	ActivtyDetail
	Nil
	BoolValue
	IntValue
	StringValue
	Balls
	BuycaiScheme
	IssueMultiple
	BuycaiUserOrder
	BuycaiVendorOrder
	BuycaiVendorResp
	QueryBuycaiOrderArg
	BuycaiOrderStatusArg
	BuycaiSaleIssue
	BuycaiQueryIssueArg
	BuycaiSaleList
	BuycaiUpsertIssueArg
	BuycaiQueryUserOrderArg
	BuycaiQueryAccountUserOrderArg
	BuycaiQueryVendorOrderArg
	BuycaiUpdateUserStatusArg
	BuycaiUpdateVendorStatusArg
	VendorOrderRecord
	UserOrderRecord
	QueryVendorOrderHistoryArg
	QueryUserOrderHistoryArg
	BuycaiIssueInfo
	UserOrderAllIssues
	CdkeyBatch
	News
	QueryNewsArg
	NewsList
	NewsId
	QueryNewsOfSelect
	Fund
	AccountBankcard
	BuycaiTicket
	InsertBuycaiTicketArg
	DeleteBuycaiTicketArg
	FundChangeRecord
	FundChangeHistory
	QueryHistoryArg
	RechargeResult
	ChangeVirtualFundArg
	VirtualFundChangeRecord
	VirtualFund
	QueryFundHistoryArg
	FundHistoryStats
	QueryFundHistoryStatsArg
	CreditsTask
	CreditsTaskInfo
	GiftPackage
	GiftArg
	CdKeyBatchArg
	GiftCdkeyArg
	InviteArg
	InviteRelationArg
	CreditsArg
	Gift
	GiftPackageArg
	UserInviteInfo
	PhoneRegistGift
	GiftTemplate
	GiftTemplateList
	GiftTemplateContent
	TicketBox
	CreditsBox
	LotteryOptions
	HomeParams
	Notify
	UserNotify
	QueryUserMissedArg
	QueryUserMissedRes
	QueryUserNotifyArg
	QueryUserNotifyRes
	ReadUserNotifyArg
	UserNotifyInfo
	CreateAnnounceArg
	CreateRemindArg
	CreateMessageArg
	BonusDetail
	OpenDetail
	OpenInfo
	OpencaiQueryArg
	OpencaiInsertArg
	OpencaiUpsertDetailArg
	Banner
	BannerId
	BannerList
	QueryClientBannerArg
	QueryBannerArg
	Contact
	Feedback
	Faq
	FaqId
	FaqList
	RechargeOrder
	CallbackOrderInfo
	Sms
	SmsStats
	Idcard
	Bankcard
	PhoneUser
	QQUser
	WeixinUser
	Giftcard
	UserInfo
	CreateAccountArg
	ChangePhoneArg
	SetUserArg
	PhonePassword
	UserInfoArg
	AccountIdcard
	PayPasswordArg
	PaySettings
	DailyCheckArg
	UserGift
	UserGiftPackage
	UserGiftPackageContent
	WithdrawApply
*/
package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 参与活动要完成的任务
type Task struct {
	Id         int64   `protobuf:"varint,1,opt,name=id" json:"id"`
	Name       string  `protobuf:"bytes,2,opt,name=name" json:"name"`
	Des        string  `protobuf:"bytes,3,opt,name=des" json:"des"`
	IsComplete bool    `protobuf:"varint,4,opt,name=is_complete,json=isComplete" json:"is_complete"`
	Type       string  `protobuf:"bytes,5,opt,name=type" json:"type"`
	Money      float32 `protobuf:"fixed32,6,opt,name=money" json:"money"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Task) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetDes() string {
	if m != nil {
		return m.Des
	}
	return ""
}

func (m *Task) GetIsComplete() bool {
	if m != nil {
		return m.IsComplete
	}
	return false
}

func (m *Task) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Task) GetMoney() float32 {
	if m != nil {
		return m.Money
	}
	return 0
}

// 活动
type Activity struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id"`
	Title     string `protobuf:"bytes,2,opt,name=title" json:"title"`
	Des       string `protobuf:"bytes,3,opt,name=des" json:"des"`
	Logo      string `protobuf:"bytes,4,opt,name=logo" json:"logo"`
	Num       int64  `protobuf:"varint,5,opt,name=num" json:"num"`
	LeftNum   int64  `protobuf:"varint,6,opt,name=left_num,json=leftNum" json:"left_num"`
	Starttime int64  `protobuf:"varint,7,opt,name=starttime" json:"starttime"`
	Endtime   int64  `protobuf:"varint,8,opt,name=endtime" json:"endtime"`
	HasJoin   bool   `protobuf:"varint,9,opt,name=has_join,json=hasJoin" json:"has_join"`
	Status    int32  `protobuf:"varint,10,opt,name=Status" json:"Status"`
}

func (m *Activity) Reset()                    { *m = Activity{} }
func (m *Activity) String() string            { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()               {}
func (*Activity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Activity) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Activity) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Activity) GetDes() string {
	if m != nil {
		return m.Des
	}
	return ""
}

func (m *Activity) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

func (m *Activity) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *Activity) GetLeftNum() int64 {
	if m != nil {
		return m.LeftNum
	}
	return 0
}

func (m *Activity) GetStarttime() int64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *Activity) GetEndtime() int64 {
	if m != nil {
		return m.Endtime
	}
	return 0
}

func (m *Activity) GetHasJoin() bool {
	if m != nil {
		return m.HasJoin
	}
	return false
}

func (m *Activity) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// 活动列表
type ActivityList struct {
	List []*Activity `protobuf:"bytes,1,rep,name=list" json:"list"`
}

func (m *ActivityList) Reset()                    { *m = ActivityList{} }
func (m *ActivityList) String() string            { return proto.CompactTextString(m) }
func (*ActivityList) ProtoMessage()               {}
func (*ActivityList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ActivityList) GetList() []*Activity {
	if m != nil {
		return m.List
	}
	return nil
}

// 包含活动id和用户账户id，用于查询活动详情
type ActivityAccount struct {
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId" json:"activity_id"`
	AccountId  int64 `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id"`
}

func (m *ActivityAccount) Reset()                    { *m = ActivityAccount{} }
func (m *ActivityAccount) String() string            { return proto.CompactTextString(m) }
func (*ActivityAccount) ProtoMessage()               {}
func (*ActivityAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ActivityAccount) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *ActivityAccount) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

// 用户基本信息
type UserBaseInfo struct {
	AccountId int64  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id"`
	Icon      string `protobuf:"bytes,2,opt,name=icon" json:"icon"`
	Nickname  string `protobuf:"bytes,3,opt,name=nickname" json:"nickname"`
}

func (m *UserBaseInfo) Reset()                    { *m = UserBaseInfo{} }
func (m *UserBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*UserBaseInfo) ProtoMessage()               {}
func (*UserBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserBaseInfo) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *UserBaseInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *UserBaseInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

// 活动详情
type ActivtyDetail struct {
	Activity *Activity       `protobuf:"bytes,1,opt,name=activity" json:"activity"`
	Gainers  []*UserBaseInfo `protobuf:"bytes,2,rep,name=gainers" json:"gainers"`
	TaskList []*Task         `protobuf:"bytes,3,rep,name=task_list,json=taskList" json:"task_list"`
}

func (m *ActivtyDetail) Reset()                    { *m = ActivtyDetail{} }
func (m *ActivtyDetail) String() string            { return proto.CompactTextString(m) }
func (*ActivtyDetail) ProtoMessage()               {}
func (*ActivtyDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ActivtyDetail) GetActivity() *Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *ActivtyDetail) GetGainers() []*UserBaseInfo {
	if m != nil {
		return m.Gainers
	}
	return nil
}

func (m *ActivtyDetail) GetTaskList() []*Task {
	if m != nil {
		return m.TaskList
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "dbproto.Task")
	proto.RegisterType((*Activity)(nil), "dbproto.Activity")
	proto.RegisterType((*ActivityList)(nil), "dbproto.ActivityList")
	proto.RegisterType((*ActivityAccount)(nil), "dbproto.ActivityAccount")
	proto.RegisterType((*UserBaseInfo)(nil), "dbproto.UserBaseInfo")
	proto.RegisterType((*ActivtyDetail)(nil), "dbproto.ActivtyDetail")
}

func init() { proto.RegisterFile("activity.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 454 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xdd, 0x8a, 0xd4, 0x4c,
	0x10, 0xa5, 0x93, 0xcc, 0x24, 0xa9, 0xfd, 0xf9, 0x3e, 0x9b, 0x55, 0x5a, 0x51, 0x0c, 0x01, 0x21,
	0x08, 0x8e, 0xa0, 0xf8, 0x00, 0xab, 0xde, 0x8c, 0x88, 0x60, 0xab, 0x97, 0x12, 0x7a, 0x93, 0xde,
	0xdd, 0x76, 0x92, 0xee, 0x61, 0xba, 0x46, 0x98, 0x27, 0xf0, 0x21, 0x7c, 0x47, 0x9f, 0x41, 0xba,
	0xf2, 0xa3, 0xac, 0x7b, 0x77, 0xea, 0xd4, 0xe9, 0xe2, 0xf4, 0xa9, 0x82, 0x53, 0xd5, 0xa0, 0xf9,
	0x6e, 0xf0, 0xb0, 0xda, 0xee, 0x1c, 0x3a, 0x9e, 0xb6, 0x17, 0x04, 0xca, 0x1f, 0x0c, 0x92, 0xcf,
	0xca, 0x6f, 0xf8, 0x29, 0x44, 0xa6, 0x15, 0xac, 0x60, 0x55, 0x2c, 0x23, 0xd3, 0x72, 0x0e, 0x89,
	0x55, 0xbd, 0x16, 0x51, 0xc1, 0xaa, 0x5c, 0x12, 0xe6, 0xff, 0x43, 0xdc, 0x6a, 0x2f, 0x62, 0xa2,
	0x02, 0xe4, 0x8f, 0xe1, 0xc8, 0xf8, 0xba, 0x71, 0xfd, 0xb6, 0xd3, 0xa8, 0x45, 0x52, 0xb0, 0x2a,
	0x93, 0x60, 0xfc, 0x9b, 0x91, 0x09, 0x63, 0xf0, 0xb0, 0xd5, 0x62, 0x31, 0x8c, 0x09, 0x98, 0x9f,
	0xc1, 0xa2, 0x77, 0x56, 0x1f, 0xc4, 0xb2, 0x60, 0x55, 0x24, 0x87, 0xa2, 0xfc, 0xc5, 0x20, 0x3b,
	0x1f, 0x5d, 0xfe, 0xe3, 0xe6, 0x0c, 0x16, 0x68, 0xb0, 0x9b, 0xec, 0x0c, 0xc5, 0x2d, 0x7e, 0x38,
	0x24, 0x9d, 0xbb, 0x72, 0x64, 0x24, 0x97, 0x84, 0x83, 0xca, 0xee, 0x7b, 0x72, 0x10, 0xcb, 0x00,
	0xf9, 0x7d, 0xc8, 0x3a, 0x7d, 0x89, 0x75, 0xa0, 0x97, 0x44, 0xa7, 0xa1, 0xfe, 0xb0, 0xef, 0xf9,
	0x43, 0xc8, 0x3d, 0xaa, 0x1d, 0xa2, 0xe9, 0xb5, 0x48, 0xa9, 0xf7, 0x87, 0xe0, 0x02, 0x52, 0x6d,
	0x5b, 0xea, 0x65, 0xc3, 0xbb, 0xb1, 0x0c, 0x23, 0xaf, 0x95, 0xaf, 0xbf, 0x39, 0x63, 0x45, 0x4e,
	0x29, 0xa4, 0xd7, 0xca, 0xbf, 0x73, 0xc6, 0xf2, 0x7b, 0xb0, 0xfc, 0x84, 0x0a, 0xf7, 0x5e, 0x40,
	0xc1, 0xaa, 0x85, 0x1c, 0xab, 0xf2, 0x15, 0x1c, 0x4f, 0xff, 0x7d, 0x6f, 0x3c, 0xf2, 0x27, 0x90,
	0x74, 0xc6, 0xa3, 0x60, 0x45, 0x5c, 0x1d, 0xbd, 0xb8, 0xb3, 0x1a, 0x57, 0xb4, 0x9a, 0x44, 0x92,
	0xda, 0xe5, 0x47, 0xf8, 0x6f, 0x62, 0xce, 0x9b, 0xc6, 0xed, 0x2d, 0x86, 0x2d, 0x4c, 0xfb, 0xad,
	0xe7, 0xd8, 0x60, 0xa2, 0xd6, 0x2d, 0x7f, 0x04, 0xa0, 0x06, 0x6d, 0xe8, 0x47, 0xc3, 0xb7, 0x46,
	0x66, 0xdd, 0x96, 0x5f, 0xe1, 0xf8, 0x8b, 0xd7, 0xbb, 0xd7, 0xca, 0xeb, 0xb5, 0xbd, 0x74, 0x37,
	0xe4, 0xec, 0x86, 0x3c, 0x84, 0x6c, 0x1a, 0x67, 0xa7, 0xd3, 0x08, 0x98, 0x3f, 0x80, 0xcc, 0x9a,
	0x66, 0x43, 0x27, 0x33, 0xec, 0x63, 0xae, 0xcb, 0x9f, 0x0c, 0x4e, 0xc8, 0x32, 0x1e, 0xde, 0x6a,
	0x54, 0xa6, 0xe3, 0xcf, 0x20, 0x9b, 0xdc, 0xd1, 0xf8, 0x5b, 0xbf, 0x3b, 0x4b, 0xf8, 0x73, 0x48,
	0xaf, 0x94, 0xb1, 0x7a, 0xe7, 0x45, 0x44, 0xe1, 0xdc, 0x9d, 0xd5, 0x7f, 0xfb, 0x96, 0x93, 0x8a,
	0x3f, 0x85, 0x1c, 0x95, 0xdf, 0xd4, 0x94, 0x67, 0x4c, 0x4f, 0x4e, 0xe6, 0x27, 0xe1, 0xdc, 0x65,
	0x16, 0xfa, 0x21, 0xf6, 0x8b, 0x25, 0xb1, 0x2f, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xaf,
	0xf5, 0xc7, 0x23, 0x03, 0x00, 0x00,
}
