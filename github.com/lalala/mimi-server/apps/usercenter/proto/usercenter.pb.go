// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usercenter.proto

/*
Package usercenter is a generated protocol buffer package.

It is generated from these files:
	usercenter.proto

It has these top-level messages:
	Nil
	RechargeResult
*/
package usercenter

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Nil struct {
}

func (m *Nil) Reset()                    { *m = Nil{} }
func (m *Nil) String() string            { return proto.CompactTextString(m) }
func (*Nil) ProtoMessage()               {}
func (*Nil) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RechargeResult struct {
	AccountId int64  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Money     int64  `protobuf:"varint,2,opt,name=money" json:"money,omitempty"`
	OrderNo   string `protobuf:"bytes,3,opt,name=order_no,json=orderNo" json:"order_no,omitempty"`
	Method    string `protobuf:"bytes,4,opt,name=method" json:"method,omitempty"`
}

func (m *RechargeResult) Reset()                    { *m = RechargeResult{} }
func (m *RechargeResult) String() string            { return proto.CompactTextString(m) }
func (*RechargeResult) ProtoMessage()               {}
func (*RechargeResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RechargeResult) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *RechargeResult) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *RechargeResult) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *RechargeResult) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func init() {
	proto.RegisterType((*Nil)(nil), "usercenter.Nil")
	proto.RegisterType((*RechargeResult)(nil), "usercenter.RechargeResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Usercenter service

type UsercenterClient interface {
	NotifyRecharged(ctx context.Context, in *RechargeResult, opts ...grpc.CallOption) (*Nil, error)
}

type usercenterClient struct {
	cc *grpc.ClientConn
}

func NewUsercenterClient(cc *grpc.ClientConn) UsercenterClient {
	return &usercenterClient{cc}
}

func (c *usercenterClient) NotifyRecharged(ctx context.Context, in *RechargeResult, opts ...grpc.CallOption) (*Nil, error) {
	out := new(Nil)
	err := grpc.Invoke(ctx, "/usercenter.Usercenter/NotifyRecharged", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Usercenter service

type UsercenterServer interface {
	NotifyRecharged(context.Context, *RechargeResult) (*Nil, error)
}

func RegisterUsercenterServer(s *grpc.Server, srv UsercenterServer) {
	s.RegisterService(&_Usercenter_serviceDesc, srv)
}

func _Usercenter_NotifyRecharged_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RechargeResult)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsercenterServer).NotifyRecharged(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usercenter.Usercenter/NotifyRecharged",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsercenterServer).NotifyRecharged(ctx, req.(*RechargeResult))
	}
	return interceptor(ctx, in, info, handler)
}

var _Usercenter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usercenter.Usercenter",
	HandlerType: (*UsercenterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifyRecharged",
			Handler:    _Usercenter_NotifyRecharged_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usercenter.proto",
}

func init() { proto.RegisterFile("usercenter.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x2d, 0x4e, 0x2d,
	0x4a, 0x4e, 0xcd, 0x2b, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0xb1, 0x72, 0x31, 0xfb, 0x65, 0xe6, 0x28, 0x55, 0x70, 0xf1, 0x05, 0xa5, 0x26, 0x67, 0x24,
	0x16, 0xa5, 0xa7, 0x06, 0xa5, 0x16, 0x97, 0xe6, 0x94, 0x08, 0xc9, 0x72, 0x71, 0x25, 0x26, 0x27,
	0xe7, 0x97, 0xe6, 0x95, 0xc4, 0x67, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x71, 0x42,
	0x45, 0x3c, 0x53, 0x84, 0x44, 0xb8, 0x58, 0x73, 0xf3, 0xf3, 0x52, 0x2b, 0x25, 0x98, 0xc0, 0x32,
	0x10, 0x8e, 0x90, 0x24, 0x17, 0x47, 0x7e, 0x51, 0x4a, 0x6a, 0x51, 0x7c, 0x5e, 0xbe, 0x04, 0xb3,
	0x02, 0xa3, 0x06, 0x67, 0x10, 0x3b, 0x98, 0xef, 0x97, 0x2f, 0x24, 0xc6, 0xc5, 0x96, 0x9b, 0x5a,
	0x92, 0x91, 0x9f, 0x22, 0xc1, 0x02, 0x96, 0x80, 0xf2, 0x8c, 0xfc, 0xb8, 0xb8, 0x42, 0xe1, 0xce,
	0x11, 0x72, 0xe0, 0xe2, 0xf7, 0xcb, 0x2f, 0xc9, 0x4c, 0xab, 0x84, 0xb9, 0x26, 0x45, 0x48, 0x4a,
	0x0f, 0xc9, 0x03, 0xa8, 0x8e, 0x94, 0xe2, 0x47, 0x96, 0x03, 0xf9, 0x83, 0x21, 0x89, 0x0d, 0xec,
	0x47, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1e, 0xbd, 0x9e, 0x29, 0xf7, 0x00, 0x00, 0x00,
}
